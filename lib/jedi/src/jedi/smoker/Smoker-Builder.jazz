;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Smoker Builder
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jedi.smoker.Smoker-Builder jazz


(class Smoker-Builder extends Object)


@convert


(class Smoker-Builder extends Object
  
  
  (definition Smoker-Project
    "Distribution")
  
  
  (method public (build/run)
    (new Activity
      name: "Smoker Builder/Runner"
      context: self
      execute: (lambda (activity)
                 (let ((project (find-project~ Launcher-Project Smoker-Project)))
                   (set-range~ activity (new Range 0 2))
                   (user-message~ activity "Build")
                   ;; todo: this will freeze the app if an error occurs
                   ;; during the build because the wait-for will never complete...
                   (wait-for (build project))
                   (unless (cancel-requested?~ activity)
                     (step-it~ activity)
                     (user-message~ activity "Run")
                     (run project)
                     (unless (cancel-requested?~ activity)
                       (step-it~ activity)
                       (user-message~ activity "Done")
                       (set-done~ activity)))))))
  
  
  (method (build project)
    (build~ project threaded?: #t keep-reporter?: #f))
  
  
  (method (run project)
    (let* ((pathname (parse~ (outputed-file~ project)))
           (command (format "{a} /app Smoker" pathname)))
      (create-process command wait?: #f)))))
