"History-Request-Item"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "history" "History-Request-Item.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.sql.history.History-Request-Item" module #f 37 18 37 62 ("jazz")
      {Lisp-Entry "History-Request-Item" class #f 46 7 46 27 ("History-Item")
        {Lisp-Entry "request" slot #f 49 8 49 15 ()}
        {Lisp-Entry "initialize" method #f 52 20 52 30 ("request~self" "set!" "nextmethod" "request")}
        {Lisp-Entry "open-item" method #f 57 20 57 29 ("evaluate" "insert-line" "fresh-prompt" "get-sql-console-text" "text" "let" "bell" "request" "null?" "if")}
        {Lisp-Entry "present" method #f 66 20 66 27 ("request")}}}})
"Inventory-Browser"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "inventory" "Inventory-Browser.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.sql.inventory.Inventory-Browser" module #f 37 18 37 61 ("evt" "method" "on-add-linked-table" "add-linked-table" "on-add-table-by-script" "add-table-by-script" "on-add-table" ":form" "Event-Handler" "action-handler:" "Image-Resource" "icon:" "title:" "add-table" "name:" "form" "Context-Menu" "extends" "Tables-Menu" "class" "jazz")
      {Lisp-Entry "Inventory-Browser" class #f 48 7 48 24 ("inventory-browser" "'inventory-browser" "rest" "external-name" "meta" "method" "329" "width:" "title:" "on-context-menu" "context-menu-handler:" "on-selection-change" "selection-handler:" "show-header?:" "inventory" "shown?:" "header" "content" "tool" "style:" "hscroll?:" "vscroll?:" "scroller" "on-refresh" ":form" "Event-Handler" "action-handler:" ":images" "portfolio:" "Image-Resource" "resource:" "tooltip-text:" "tooltip?:" "tail" "location:" "22" "Dimension" "size:" "refresh" "tools" "name:" "fill" "layout-type:" "explicit" "initialize" "Layout-View")
        {Lisp-Entry "connection" property #f 52 12 52 22 ()}}}})
"JML-SQL"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "JML-SQL.jazz"} 1288732033
    {Lisp-Entry "load-schedule-data" method #f 3 11 3 29 ("Data-Schedule" "data-class:" "load-request" "get-connection" "d.intCommunity" "s.intCommunityOCDepartment" "h.intOCSchedule" "e.intOCScheduleShift" "=" ",id-list" "in" "e" "tblOCScheduleEvent" "h" "tblOCScheduleShift" "s" "tblOCSchedule" "d" "tblCommunityOCDepartment" "c" "as:" "tblCommunity" "e.intUser" "e.dteEnd" "e.dteStart" "e.intType" "e.intOCScheduleEvent" "h.intNextDay" "h.txtEnd" "h.txtStart" "h.txtShift" "h.intOCScheduleShift" "s.dteEnd" "s.dteStart" "s.txtName" "s.intOCSchedule" "d.txtName" "d.intCommunityOCDepartment" "c.txtName" "c.intCommunity" "name:" "request" "->string" "map" "join" "format" "id-list" "let*" "schedules" "connection")}})
"SQL-Connections-Editor"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "sql" "SQL-Connections-Editor.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.sql.sql.SQL-Connections-Editor" module #f 37 18 37 60 ("jazz")
      {Lisp-Entry "SQL-Connections-Editor" class #f 44 7 44 29 ("Descendants-Editor")
        {Lisp-Entry "form-model" method #f 47 20 47 30 ("nextmethod" "else" "SQL-Connections-Tree" "tree" "get-name" "case" "form")}}}})
"SQL-Connections-Manager"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "sql" "SQL-Connections-Manager.jazz"} 1289844257
    {Lisp-Entry "jazz.editor.sql.sql.SQL-Connections-Manager" module #f 37 18 37 61 ("jazz")
      {Lisp-Entry "SQL-Connections-Manager" class #f 53 7 53 30 ("291" "width:" "title:" "descendant" "highlight-edited?:" "show-header?:" "tree" "tool" "style:" "scroller" "center" "descendants" "on-close-all-connections" "close-all" "on-open" ":guest" "Event-Handler" "action-handler:" ":images" "portfolio:" "Image-Resource" "resource:" "tooltip-text:" "tooltip?:" "tail" "location:" "22" "open" "tools" "name:" "border" "layout-type:" "400" "650" "Dimension" "size:" "Exit-Listener" "Component-Editor")
        {Lisp-Entry "external-name" method #f 67 25 67 38 ("sql-connections" "'sql-connections" "rest")}
        {Lisp-Entry "host-icon" method #f 76 25 76 34 ("Image-Resource")}
        {Lisp-Entry "host-title" method #f 80 25 80 35 ()}
        {Lisp-Entry "get-tools-view" method #f 89 20 89 34 ("tools" "'tools" "locate")}
        {Lisp-Entry "focus-default" method #f 93 20 93 33 ("acquire-focus" "get-tree" "tree" "let")}
        {Lisp-Entry "get-tree" method #f 103 18 103 26 ("tree" "descendants" "locate")}
        {Lisp-Entry "new-controller" method #f 112 20 112 34 ("self" "SQL-Connections-Controller" "new")}
        {Lisp-Entry "browse-inventory" method #f 121 11 121 27 ("set-connection" "workspace:" "Inventory-Browser" "select-docked" "browser" "data-source:" "get-name" "get-connection" "connection" "get-user-data" "data-source" "get-row" "row" "get-single-selection" "selection" "get-tree" "tree" "let*" "selected-data-source" "define" "focus?" "focus?:")}
        {Lisp-Entry "install" method #f 142 20 142 27 ("continuation-return" "set-active-data-source" "get-name" "equal?" "source" "for-each-source" "break" "lambda" "continuation-capture" "when" "client" "get-default-source" "default" "let" "get-application" "add-exit-listener" "read-connections" "set-client" "self" "'descendants" "locate" "set-editor" "header" "descendants" "locate-component" "set-shown?" "nextmethod" "rest")}
        {Lisp-Entry "for-each-source" method #f 159 11 159 26 ("Data-Source" "is?" "when" "level" "component" "lambda" "client" "for-each-descendant" "proc")}
        {Lisp-Entry "resize-center" method #f 171 11 171 24 ("descendants" "'descendants" "locate" "size-figure" "dv" "dh")}
        {Lisp-Entry "on-open" method #f 175 19 175 26 ("open-selection" "evt")}
        {Lisp-Entry "on-close-all-connections" method #f 179 19 179 43 ("set-connection" "workspace:" "Inventory-Browser" "select-docked" "browser" "let" "close-connections" "evt")}
        {Lisp-Entry "prepare-exit" method #f 186 20 186 32 ("close-connections" "save" "designer" "get-form" "get-origin" "file?" "get-modified?" "and" "when")}
        {Lisp-Entry "open-selection" method #f 197 18 197 32 ("focus?:" "browse-inventory" "set-active-data-source" "Data-Source" "is?" "when" "bell" "not" "if" "selected-component" "component" "get-tree" "tree" "let*")}
        {Lisp-Entry "new-connections-menu" method #f 212 18 212 38 ("browse-separator" "'browse-separator" "browse-inventory" "'browse-inventory" "locate" "set-visible?" "Group" "is?" "when" "get-user-data" "data" "get-row" "row" "if" "add-component-class" "addable-classes" "selected-components" "update-component-menu" "lambda" "with-update-locked" "get-single-selection" "selection" "client:" "Connections-Menu" "new" "menu" "get-tree" "tree" "let*")}}
      {Lisp-Entry "SQL-Connections-Controller" class #f 236 7 236 33 ("Component-Editor-Controller")
        {Lisp-Entry "document-status" method #f 239 20 239 35 ()}}
      {Lisp-Entry "Connections-Menu" class #f 248 7 248 23 ("browse-separator" "on-browse-inventory" ":form" "Event-Handler" "action-handler:" "Image-Resource" "icon:" "default?:" "title:" "add-item" "before:" "browse-inventory" "name:" "Component-Menu")
        {Lisp-Entry "on-browse-inventory" method #f 259 11 259 30 ("open-selection" "evt")}}}})
"SQL-Connections-Tree"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "sql" "SQL-Connections-Tree.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.sql.sql.SQL-Connections-Tree" module #f 37 18 37 58 ("jazz")
      {Lisp-Entry "SQL-Connections-Tree" class #f 51 7 51 27 ("editable?:" "highlight-edited?:" "reorderable?:" "draggable?:" ":images" "portfolio:" "Descendants-Tree")
        {Lisp-Entry "form-model" method #f 58 20 58 30 ("nextmethod" "else" "Connection-Column" "descendant" "get-name" "case" "form")}
        {Lisp-Entry "mouse-down" method #f 64 20 64 30 ("SQL-Connections-Manager" "set-active-data-source" "bell" "not" "if" "selected-component" "component" "let" "control-down?" "when" "nextmethod" "pos")}
        {Lisp-Entry "context-menu" method #f 73 20 73 32 ("new-connections-menu" "track-popup-menu" "lambda" "with-context-click" "SQL-Connections-Manager" "is?" "when" "get-guest" "guest" "get-host" "host" "let*" "pos")}
        {Lisp-Entry "update-selection" method #f 82 20 82 36 ("selected-components" "expand-state")}
        {Lisp-Entry "row-state" method #f 86 20 86 29 ("expanded" "'expanded" "level" "update?" "component")}
        {Lisp-Entry "double-click" method #f 90 20 90 32 ("get-host" "get-guest" "open-selection" "nextmethod" "pos")}
        {Lisp-Entry "key-press" method #f 95 20 95 29 ("nextmethod" "else" "get-host" "get-guest" "open-selection" "case" "key")}
        {Lisp-Entry "addable-root-classes" method #f 101 20 101 40 ("SQLServer-Data-Source" "Group" "list")}}
      {Lisp-Entry "Connection-Column" class #f 113 7 113 24 ("Tree-Node-Column")
        {Lisp-Entry "draw-data" method #f 116 20 116 29 ("Dark-Red" "name:" "Color" "text-rect" "frame-rect" "get-user-data" "eq?" "when" "get-active-data-source" "active" "let" "nextmethod" "height" "width" "data" "row" "context" "surface")}}}})
"SQL-Console-Manager"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "sql" "SQL-Console-Manager.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.sql.sql.SQL-Console-Manager" module #f 37 18 37 57 ("jazz")
      {Lisp-Entry "SQL-Console-Manager" class #f 44 7 44 26 ("Console-Manager")
        {Lisp-Entry "external-name" method #f 47 25 47 38 ("sql-console-manager" "'sql-console-manager" "rest")}
        {Lisp-Entry "host-title" method #f 56 25 56 35 ()}}}})
"SQL-Console-Text-View"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "sql" "SQL-Console-Text-View.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.sql.sql.SQL-Console-Text-View" module #f 37 18 37 59 ("jazz")
      {Lisp-Entry "SQL-Console-Text-View" class #f 52 7 52 28 ("sql" "context:" "initialize" "Console-Text-View")
        {Lisp-Entry "current-request" slot #f 55 8 55 23 ()}
        {Lisp-Entry "get-current-request" accessor #f 55 45 55 53 ()}
        {Lisp-Entry "current-table" slot #f 56 8 56 21 ()}
        {Lisp-Entry "current-tables" slot #f 57 8 57 22 ()}
        {Lisp-Entry "sql-tool-preferences" definition #f 64 15 64 35 ("sql" "tools" "get-preferences")}
        {Lisp-Entry "get-context" method #f 68 20 68 31 ("sql")}
        {Lisp-Entry "finish" method #f 72 20 72 26 ("display-prompt" "display-banner" "banner-prompt" "determine-banner" "banner" "set!" "nextmethod" "rest")}
        {Lisp-Entry "determine-banner" method #f 85 20 85 36 ("format")}
        {Lisp-Entry "display-prompt" method #f 94 11 94 25 ("Prompt" "'Prompt" "insert-styled")}
        {Lisp-Entry "evaluation-break" method #f 98 11 98 27 ("insert-newline" "text-ending" "set-caret")}
        {Lisp-Entry "Header-Font" definition #f 108 14 108 25 ("Code" "name:" "Font")}
        {Lisp-Entry "Header-Font-Plain" definition #f 111 14 111 31 ("Code-Bold" "name:" "Font")}
        {Lisp-Entry "Header-Color" definition #f 114 14 114 26 ("Dark-Blue" "name:" "Color")}
        {Lisp-Entry "Header-Style" definition #f 117 14 117 26 ("Header-Color" "color:" "Header-Font" "font:" "Text-Style" "new")}
        {Lisp-Entry "Header-Style-Plain" definition #f 120 14 120 32 ("Header-Color" "color:" "Header-Font-Plain" "font:" "Text-Style" "new")}
        {Lisp-Entry "Overflow-Style" definition #f 123 14 123 28 ("Dark-Red" "Color" "color:" "Code" "name:" "Font" "font:" "Text-Style")}
        {Lisp-Entry "eval-from-prompt" method #f 127 20 127 36 ("display-prompt" "list" "evaluate-statements" "reset-inserted" "Input" "'Input" "get-style" "set-style" "empty-string?" "unless" "get-string" "command" "current-command" "range" "let")}
        {Lisp-Entry "evaluate-statements" method #f 137 18 137 37 ("format-plural" "format" "display-result" "evaluation-break" "when" "clear-table" "real-duration" "duration" "execute" "get-count" "increase!" "load-request" "table" "select-statement?" "cond" "statement" "for-each" "with-transaction" "Timer" "new" "timer" "affected" "get-connection" "connection" "lambda" ":wait" "with-cursor" "else" "car" "evaluate" "1" "bell" "0" "case" "length" "let" "console?" "statements")}
        {Lisp-Entry "evaluate" method #f 164 18 164 26 ("receive" "0" "=" "display-affected" "display-tables" "-" "not-displayed" "min" "displayed" "get-missing?" "missing?" "get-count" "count" "let*" "car" "first-table" "get-max-display" "max-display" "else" "format-plural" "format" "integer?" "display-result" "clear-table" "null?" "cond" "evaluation-break" "when" "duration" "tables" "display-evaluation" "load-sql" "process-sql" "shift-down?" "not" "and" "if" "real-duration" "values" "process-command" "result" "Timer" "new" "timer" "current-request" "set!" "get-connection" "connection" "let" "lambda" ":wait" "with-cursor" "eval-command" "define" "console?" "command")}
        {Lisp-Entry "get-connection" definition #f 216 15 216 29 ("error" "get-active-connection" "or")}
        {Lisp-Entry "process-sql" method #f 221 11 221 22 ("load-sql" "list" "if" "process-sql" "table" "get-profile" "profile" "get-application" "appl" "let*" "command" "connection")}
        {Lisp-Entry "load-sql" method #f 230 11 230 19 ("execute" "max-load:" "load-multirequest" "select-statement?" "if" "expand-sql" "sql" "get-max-load" "max-load" "sql-tool-preferences" "pref" "let*" "command" "connection")}
        {Lisp-Entry "expand-sql" definition #f 239 15 239 25 ("expand-sql" "get-profile" "profile" "get-application" "appl" "let*" "command")}
        {Lisp-Entry "get-max-display" definition #f 245 15 245 30 ("get-max-display" "sql-tool-preferences" "pref" "let")}
        {Lisp-Entry "display-result" method #f 250 11 250 25 ("insert-newline" "Output" "'Output" "insert-styled" "get-start" "start" "clear-user-message" "user-message" "not" "if" "format" "effective-string" "let" "console?" "duration" "string")}
        {Lisp-Entry "present-value" definition #f 260 15 260 28 ("->string" "not" "if" "value")}
        {Lisp-Entry "clear-table" method #f 266 18 266 29 ("clear-tables" "remove-columns" "clear-all" "get-sql-output-tree" "tree" "get-sql-output-text" "text" "let")}
        {Lisp-Entry "output-tables" method #f 274 18 274 31 ("0" "get-max-display" "display-tables" "current-request" "set!" "name" "tables")}
        {Lisp-Entry "clear-output" method #f 280 18 280 30 ("clear-tables" "get-sql-output-tree" "remove-columns" "get-sql-output-text" "clear-all")}
        {Lisp-Entry "previous-table" method #f 286 18 286 32 ("0" "get-max-display" "display-current-table" "current-table" "decrease!")}
        {Lisp-Entry "next-table" method #f 291 18 291 28 ("0" "get-max-display" "display-current-table" "current-table" "increase!")}
        {Lisp-Entry "clear-tables" method #f 296 11 296 23 ("recordsets-update" "get-sql-tree-output" "output" "let" "current-tables" "0" "current-table" "set!")}
        {Lisp-Entry "display-tables" method #f 303 11 303 25 ("1" "+" "display-current-table" "current-table" "table" "lambda" "for-each" "0" "table-no" "let" "current-tables" "set!" "not-displayed" "max-display" "tables")}
        {Lisp-Entry "display-current-table" method #f 313 11 313 32 ("recordsets-update" "get-sql-tree-output" "output" "let" "current-table" "current-tables" "element" "display-table" "not-displayed" "max-display")}
        {Lisp-Entry "display-table" method #f 319 11 319 24 ("set-?r" "set-?c" "set-?t" "tree-widths" "tree-max-char" "effective-font" "tree-font" "tree" "Header-Font" "text-widths" "Code" "name:" "Font" "get-metrics" "get-max-char-width" "text-max-char" "get-rows" "get-columns" "Tree-Label" "value" "Tree-Node" "new" "cons" "children:" "add-row" "rest" "first" "values" "set-display-images?" "Tree-Label-Column" "width:" "title:" "toplevel-controls?:" "Tree-Node-Column" "class:" "add-column" "eq?" "node?" "first-column" "remove-columns" "get-sql-output-tree" "display-tree" "Point" "scroll-to" "Overflow-Style" "format-plural" "else" "subseq" "get-values" "present-value" "insert-line" "string" "join" "insert-styled" "256" "32" "make-tabs-from" "append!" "set-tabs" "increase!" "width" "stops" "cond" "clear-all" "current-table" "=" "stop" "Header-Style-Plain" "Header-Style" "if" "intern-style" "style" "get-sql-output-text" "output" "get-tabulate-text?" "tabulate?" "sql-tool-preferences" "pref" "get-output-string" "-" "unless" "format" "cdr" "null?" "last?" "car" "while" "open-output-string" "printer" "max-list" "join-data" "3" "Spacing" "0" "naturals" "set!" ">" "when" "count" "let*" "row" "for-each" "element" "length" "let" "n" "data" "headers" "determine-max-list" "widths" "affected" "rows" "display-text" "24" "get-prefered-width" "*" "get-name" "text-width" "max" "+" "250" "min" "column" "lambda" "map" "max-char" "font" "columns" "compute-widths" "define" "not-displayed" "max-display" "table")}}}})
"SQL-Console-View"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "sql" "SQL-Console-View.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.sql.sql.SQL-Console-View" module #f 37 18 37 54 ("jazz")
      {Lisp-Entry "SQL-Console-View" class #f 44 7 44 23 ("Console-View")
        {Lisp-Entry "form-model" method #f 47 20 47 30 ("nextmethod" "else" "SQL-Console-Text-View" "text" "get-name" "case" "form")}}}})
"SQL-Explorer"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "sql" "SQL-Explorer.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.sql.sql.SQL-Explorer" module #f 37 18 37 50 ("jazz")
      {Lisp-Entry "SQL-Explorer" class #f 44 7 44 19 ("C-Explorer")}}})
"SQL-Output-Text-View"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "sql" "SQL-Output-Text-View.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.sql.sql.SQL-Output-Text-View" module #f 37 18 37 58 ("jazz")
      {Lisp-Entry "SQL-Output-Text-View" class #f 46 7 46 27 ("12" "left-padding:" "Code" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Text-View")}}})
"SQL-Output-Tree"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "sql" "SQL-Output-Tree.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.sql.sql.SQL-Output-Tree" module #f 37 18 37 53 ("jazz")
      {Lisp-Entry "SQL-Output-Tree" class #f 50 7 50 22 ("White" "name:" "Color" "background-filler:" "Tree-View")
        {Lisp-Entry "double-click" method #f 57 20 57 32 ("self" "sql-output-action" "view->tree" "cell" "get-application" "get-profile" "profile" "let" "nextmethod" "pos")}
        {Lisp-Entry "context-menu" method #f 66 11 66 23 ("track-popup-menu" "sql-output-menu" "or" "when" "view->tree" "get-application" "get-profile" "profile" "lambda" "with-context-click" "layout-menu" "on-copy-data" "'on-copy-data" "method-name:" "self" "target:" "Event-Handler" "action-handler:" "Image-Resource" "icon:" "title:" "parent:" "Label-Item" "Context-Menu" "new" "menu" "let" "cell" "default-sql-menu" "define" "pos")}
        {Lisp-Entry "on-copy-data" method #f 82 11 82 23 ("map" "join" "else" "car" "1" "0" "selection" "length" "case" "set-clipboard-text" "get-application" "add-clipboard" "string" "copy" "get-cell-data" "get-title" "cell" "lambda" "cell-title" "let" "evt")}
        {Lisp-Entry "cell-tooltips?" method #f 102 20 102 34 ("cell")}
        {Lisp-Entry "get-cell-tooltip" method #f 106 20 106 36 ("self" "sql-output-tooltip" "0" "get-line" ">" "and" "get-cell-data" "data" "get-col" "get-column" "column" "get-profile" "profile" "get-application" "appl" "let*" "cell")}
        {Lisp-Entry "get-tooltip-position" method #f 117 20 117 40 ("rect-size" "16" "6" "effective-font" "text-width" "Dimension" "new" "center" "rect-position" "+" "v" "h" "rect" "text")}
        {Lisp-Entry "Header-Font" definition #f 127 14 127 25 ("Code" "name:" "Font")}
        {Lisp-Entry "display-table" method #f 131 11 131 24 ("display-tree" "0" "not-displayed" "100" "max-display" "tree-widths" "tree-max-char" "effective-font" "tree-font" "Header-Font" "text-widths" "Code" "name:" "Font" "get-metrics" "get-max-char-width" "text-max-char" "length" "affected" "get-rows" "rows" "get-columns" "let*" "24" "get-prefered-width" "*" "get-name" "text-width" "max" "+" "250" "min" "column" "lambda" "map" "max-char" "font" "columns" "compute-widths" "define" "table")}
        {Lisp-Entry "present-value" definition #f 150 15 150 28 ("->string" "not" "if" "value")}
        {Lisp-Entry "display-tree" method #f 156 11 156 23 ("0" "subseq" ">" "Tree-Label" "value" "map" "present-value" "Tree-Node" "new" "cons" "children:" "add-row" "cdr" "rest" "first" "get-values" "values" "row" "set-display-images?" "when" "Tree-Label-Column" "width:" "get-name" "title:" "toplevel-controls?:" "Tree-Node-Column" "class:" "add-column" "if" "eq?" "node?" "let*" "width" "column" "for-each" "car" "first-column" "let" "remove-columns" "lambda" "with-update-locked" "widths" "not-displayed" "max-display" "affected" "rows" "columns")}}}})
"SQL-Preferences"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "preference" "SQL-Preferences.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.sql.preference.SQL-Preferences" module #f 37 18 37 60 ("jazz")
      {Lisp-Entry "SQL-Preferences" class #f 47 7 47 22 ("Image-Resource" "icon:" "title:" "100" "250" "initialize" "Preferences")
        {Lisp-Entry "max-load" property #f 50 12 50 20 ()}
        {Lisp-Entry "get-max-load" accessor #f 50 52 50 60 ()}
        {Lisp-Entry "set-max-load" accessor #f 50 52 50 60 ()}
        {Lisp-Entry "max-display" property #f 51 12 51 23 ()}
        {Lisp-Entry "get-max-display" accessor #f 51 52 51 60 ()}
        {Lisp-Entry "set-max-display" accessor #f 51 52 51 60 ()}
        {Lisp-Entry "tabulate-text?" property #f 52 12 52 26 ()}
        {Lisp-Entry "get-tabulate-text?" accessor #f 52 52 52 60 ()}
        {Lisp-Entry "set-tabulate-text?" accessor #f 52 52 52 60 ()}
        {Lisp-Entry "get-class-descriptor" method #f 64 25 64 45 ("SQL-Preferences-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 73 11 73 17 ()
        {Lisp-Entry "SQL-Preferences-Descriptor" class #f 79 7 79 33 ("domain" "title:" "name:" "tabulate-text?" "max-display" "max-load" "categorized:" "can-copy?:" "can-move?:" "can-delete?:" "can-rename?:" "Preferences-Descriptor")}}}})
"SQL-Syntax"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "sql" "SQL-Syntax.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.sql.sql.SQL-Syntax" module #f 37 18 37 48 ("jazz")
      {Lisp-Entry "SQL-Syntax" class #f 44 7 44 17 ("Code-Syntax")
        {Lisp-Entry "get-constituent-test" method #f 52 11 52 31 ("sql-constituent?")}
        {Lisp-Entry "auto-complete-characters" method #f 61 11 61 35 ("SQL-Text-View" "auto-complete-characters")}
        {Lisp-Entry "auto-complete-char?" method #f 65 11 65 30 ("SQL-Text-View" "auto-complete-char?" "last" "key")}}}})
"SQL-Text-Output"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "sql" "SQL-Text-Output.jazz"} 1289844250
    {Lisp-Entry "jazz.editor.sql.sql.SQL-Text-Output" module #f 37 18 37 53 ("jazz")
      {Lisp-Entry "SQL-Text-Output" class #f 47 7 47 22 ("text" "content" "tool" "style:" "hscroll?:" "vscroll?:" "center" "scroller" "on-clear" ":guest" "Event-Handler" "action-handler:" ":images" "portfolio:" "Image-Resource" "resource:" "tooltip-text:" "tooltip?:" "tail" "location:" "22" "clear" "tools" "name:" "border" "layout-type:" "400" "650" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "external-name" method #f 59 25 59 38 ("sql-text-output" "'sql-text-output" "rest")}
        {Lisp-Entry "host-icon" method #f 68 25 68 34 ("Image-Resource")}
        {Lisp-Entry "host-title" method #f 72 25 72 35 ()}
        {Lisp-Entry "get-tools-view" method #f 81 20 81 34 ("tools" "'tools" "locate")}
        {Lisp-Entry "focus-default" method #f 85 20 85 33 ("acquire-focus" "get-text" "text" "let")}
        {Lisp-Entry "get-text" method #f 95 18 95 26 ("text" "'text" "locate")}
        {Lisp-Entry "delete-selection" method #f 104 20 104 36 ("clear-all" "get-text" "text" "let")}
        {Lisp-Entry "on-clear" method #f 114 11 114 19 ("clear-table" "get-sql-console-text" "console" "let" "evt")}}}})
"SQL-Text-Preferences"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "preference" "SQL-Text-Preferences.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.sql.preference.SQL-Text-Preferences" module #f 37 18 37 65 ("jazz")
      {Lisp-Entry "SQL-Text-Preferences" class #f 47 7 47 27 ("completions:" "Dark-Blue" "keyword-style:" "definition-style:" "Purple" "line-comment-style:" "Dark-Red" "color:" "Text-Style-Preference" "title-style:" "title:" "initialize" "Code-Text-Preferences")
        {Lisp-Entry "title-style" property #f 50 12 50 23 ()}
        {Lisp-Entry "get-title-style" accessor #f 50 56 50 64 ()}
        {Lisp-Entry "set-title-style" accessor #f 50 56 50 64 ()}
        {Lisp-Entry "line-comment-style" property #f 51 12 51 30 ()}
        {Lisp-Entry "get-line-comment-style" accessor #f 51 56 51 64 ()}
        {Lisp-Entry "set-line-comment-style" accessor #f 51 56 51 64 ()}
        {Lisp-Entry "definition-style" property #f 52 12 52 28 ()}
        {Lisp-Entry "get-definition-style" accessor #f 52 56 52 64 ()}
        {Lisp-Entry "set-definition-style" accessor #f 52 56 52 64 ()}
        {Lisp-Entry "keyword-style" property #f 53 12 53 25 ()}
        {Lisp-Entry "get-keyword-style" accessor #f 53 56 53 64 ()}
        {Lisp-Entry "set-keyword-style" accessor #f 53 56 53 64 ()}
        {Lisp-Entry "keywords" property #f 54 12 54 20 ()}
        {Lisp-Entry "get-keywords" accessor #f 54 56 54 64 ()}
        {Lisp-Entry "set-keywords" accessor #f 54 56 54 64 ()}
        {Lisp-Entry "completions" property #f 55 12 55 23 ()}
        {Lisp-Entry "get-completions" accessor #f 55 56 55 64 ()}
        {Lisp-Entry "set-completions" accessor #f 55 56 55 64 ()}
        {Lisp-Entry "get-class-descriptor" method #f 91 25 91 45 ("SQL-Text-Preferences-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 100 11 100 17 ()
        {Lisp-Entry "SQL-Text-Preferences-Descriptor" class #f 106 7 106 38 ("domain" "title:" "name:" "keyword-style" "definition-style" "line-comment-style" "title-style" "completions" "keywords" "categorized:" "Document-Preferences-Descriptor")}}}})
"SQL-Text-View"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "sql" "SQL-Text-View.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.sql.sql.SQL-Text-View" module #f 37 18 37 51 ("jazz")
      {Lisp-Entry "SQL-Text-View" class #f 50 7 50 20 ("Code-Text-View")
        {Lisp-Entry "install" method #f 53 20 53 27 ("get-keyword-style" "Keyword" "'Keyword" "get-definition-style" "Definition" "'Definition" "get-line-comment-style" "Line-Comment" "'Line-Comment" "get-title-style" "Title" "'Title" "add-style-preference" "default-style" "get-name" "default" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" method #f 63 25 63 38 ("sql-text" "'sql-text" "rest")}
        {Lisp-Entry "preferences" method #f 67 20 67 31 ("sql-text" "documents" "get-preferences")}
        {Lisp-Entry "host-workspaces" method #f 76 20 76 35 ("sql")}
        {Lisp-Entry "get-context-menu" method #f 85 20 85 36 ("SQL-Text-Menu" "new")}
        {Lisp-Entry "favorite-completions" method #f 94 20 94 40 ("sql-text" "documents" "get-preferences" "get-completions")}
        {Lisp-Entry "commented?" method #f 98 20 98 30 ("Line-Comment" "'Line-Comment" "Title" "'Title" "inherits?" "or" "and" "get-style-at" "style" "let" "pos")}
        {Lisp-Entry "return-press" method #f 110 20 110 32 ("tabulate" "nextmethod" "key")}
        {Lisp-Entry "explorer-class" method #f 120 20 120 34 ("SQL-Explorer")}
        {Lisp-Entry "get-context" method #f 129 20 129 31 ("sql")}
        {Lisp-Entry "current-name" method #f 133 20 133 32 ("current-expr-range" "name-at")}
        {Lisp-Entry "name-at" method #f 137 11 137 18 ("read-string-element" "element" "eqv?" "if" "0" "cardinality" ">" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "current-expr" method #f 146 20 146 32 ("current-name")}
        {Lisp-Entry "current-expr-range" method #f 150 20 150 38 ("get-end" "expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "expr-at" method #f 156 20 156 27 ("expr-range" "name-at" "pos")}
        {Lisp-Entry "headers" constant #f 165 12 165 19 ("list")}
        {Lisp-Entry "get-headers" method #f 170 20 170 31 ("headers")}
        {Lisp-Entry "get-first-special?" method #f 174 20 174 38 ()}
        {Lisp-Entry "Definitions" constant #f 183 12 183 23 ()}
        {Lisp-Entry "get-definitions" definition #f 187 15 187 30 ("Definitions")}
        {Lisp-Entry "Keywords" constant #f 196 12 196 20 ()}
        {Lisp-Entry "get-keywords" method #f 306 29 306 41 ("Keywords")}
        {Lisp-Entry "Syntax-Targets" definition #f 315 14 315 28 ()}
        {Lisp-Entry "Syntax-Automata" definition #f 318 14 318 29 ()}
        {Lisp-Entry "syntax-targets" method #f 322 20 322 34 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" method #f 328 20 328 35 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" method #f 334 20 334 42 ("get-keywords" "keyword" "'keyword" "get-definitions" "definition" "'definition" "str" "lambda" "map" "line-comment" "'line-comment" "list" "append")}
        {Lisp-Entry "compute-syntax-automata" method #f 340 20 340 43 ("sql-constituent?" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "colorize-type" method #f 344 20 344 33 ("nextmethod" "else" "Keyword" "'Keyword" "keyword" "Definition" "'Definition" "colorize-keyword" "definition" "Title" "'Title" "Line-Comment" "'Line-Comment" "colorize-line-comment" "line-comment" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}
        {Lisp-Entry "evaluate-selection" method #f 357 20 357 38 ("evaluate-statements" "get-sql-console-text" "console" "split" "whitespace?" "statement" "lambda" "collect-if" "statements" "string" "get-selection" "has-selection?" "map" "join-lines" "range-strings" "lines" "0" "subseq" "not" "search" "let" "line" "uncommented-line" "range" "uncommented-string" "get-char" "eqv?" "and" "previous-pos" "previous" "get-start" "text-ending" "text-beginning" "1" "next-pos" "if" "Range$Cell$" "new" "end" "reversed?:" "start:" "text-search" "start" "statement-pos" "pos" "let*" "statement-range" "define")}}
      {Lisp-Entry "SQL-Text-Menu" class #f 395 7 395 20 ("paste" "copy" "view" "french:" "english:" "Locales" "cut" "code-text" "Action" "action-handler:" "Image-Resource" "icon:" "title:" "evaluate" "name:" "Context-Menu")}}})
"SQL-Tree-Output"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "sql" "SQL-Tree-Output.jazz"} 1289844243
    {Lisp-Entry "jazz.editor.sql.sql.SQL-Tree-Output" module #f 37 18 37 53 ("jazz")
      {Lisp-Entry "SQL-Tree-Output" class #f 49 7 49 22 ("column-spacing:" "row-spacing:" "multiple-selection?:" "cell" "selection-mode:" "filled-column:" "Dark" "Color" "background:" "tree" "header" "fill" "content" "tool" "style:" "hscroll?:" "vscroll?:" "scroller" "on-settings" "displayed" "on-clear" "clear" "4" "on-forward-menu" "on-forward-history" "forward" "on-backward-menu" "pick" "on-backward-history" "body" "backward" "on-next-recordset" "next" "on-previous-recordset" ":guest" "Event-Handler" "action-handler:" ":images" "portfolio:" "Image-Resource" "resource:" "tooltip-text:" "tooltip?:" "enabled?:" "previous" "2" "justification:" "9" "point-size:" "font-name:" "Font" "font:" "center" "current" "1" "0" "Rect" "layout-insets:" "tail" "location:" "22" "200" "tools" "name:" "border" "layout-type:" "400" "650" "Dimension" "size:" "self" "History-Manager" "new" "initialize" "History-Provider" "Layout-View")
        {Lisp-Entry "history-manager" slot #f 52 8 52 23 ()}
        {Lisp-Entry "external-name" method #f 90 25 90 38 ("sql-tree-output" "'sql-tree-output" "rest")}
        {Lisp-Entry "host-icon" method #f 99 25 99 34 ("Image-Resource")}
        {Lisp-Entry "host-title" method #f 103 25 103 35 ()}
        {Lisp-Entry "get-tools-view" method #f 112 20 112 34 ("tools" "'tools" "locate")}
        {Lisp-Entry "focus-default" method #f 116 20 116 33 ("acquire-focus" "get-tree" "tree" "let")}
        {Lisp-Entry "get-tree" method #f 126 18 126 26 ("tree" "'tree" "locate")}
        {Lisp-Entry "delete-selection" method #f 135 20 135 36 ("remove-every-row" "get-tree" "tree" "let")}
        {Lisp-Entry "on-previous-recordset" method #f 145 11 145 32 ("previous-table" "get-sql-console-text" "console" "let" "evt")}
        {Lisp-Entry "on-next-recordset" method #f 150 11 150 28 ("next-table" "get-sql-console-text" "console" "let" "evt")}
        {Lisp-Entry "recordsets-update" method #f 155 18 155 35 ("set-tooltip-text" "set-resource" "/=" "tooltip-text" "else" "Image-Resource" "not" "cond" "resource" "displayed" "'displayed" "displayed-view" "let" "-" "<" "next" "'next" ">" "previous" "'previous" "set-enabled?" "1" "+" "format" "0" "=" "if" "'current" "locate" "set-title" "get-missing?" "missing?" "get-count" "get-name" "name" "element" "not-null?" "and" "table" "length" "count" "let*" "not-displayed" "tables" "current")}
        {Lisp-Entry "on-clear" method #f 181 11 181 19 ("clear-table" "get-sql-console-text" "console" "let" "evt")}
        {Lisp-Entry "on-settings" method #f 186 11 186 22 ("sql" "'sql" "host-workspace:" "Preferences-Manager" "new-frame" "evt")}
        {Lisp-Entry "on-add-history" method #f 196 19 196 33 ("history-manager" "add-current" "evt")}
        {Lisp-Entry "on-backward-history" method #f 200 19 200 38 ("history-manager" "go-backward-history" "evt")}
        {Lisp-Entry "on-forward-history" method #f 204 19 204 37 ("history-manager" "go-forward-history" "evt")}
        {Lisp-Entry "on-backward-menu" method #f 208 11 208 27 ("backward" "'backward" "history-manager" "track-history" "get-combo" "initiator" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-forward-menu" method #f 214 11 214 26 ("forward" "'forward" "history-manager" "track-history" "get-combo" "initiator" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "add-history" method #f 220 18 220 29 ("history-manager" "add-history" "item")}
        {Lisp-Entry "current-history-item" method #f 224 20 224 40 ("History-Request-Item" "new" "when" "get-current-request" "request" "get-sql-console-text" "console" "let*")}
        {Lisp-Entry "update-history-actions" method #f 231 20 231 42 ()}}}})
"_sql"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "_sql.jazz"} 1290005240
    {Lisp-Entry "jazz.editor.sql" module #f 37 8 37 23 ("jazz")
      {Lisp-Entry "Active-Data-Source" definition #f 54 12 54 30 ()}
      {Lisp-Entry "get-active-data-source" definition #f 58 20 58 42 ("Active-Data-Source")}
      {Lisp-Entry "set-active-data-source" definition #f 62 20 62 42 ("get-active-connection" "get-tree" "invalidate-view" "get-name" "and" "default-source" "'default-source" "get-client" "get-designer" "set-property" "when" "get-sql-connections" "guest" "let" "Active-Data-Source" "set!" "data-source")}
      {Lisp-Entry "get-active-connection" definition #f 72 20 72 41 ("open" "closed" "'closed" "get-state" "eq?" "data-source:" "get-connection" "connection" "get-name" "name" "let*" "Active-Data-Source" "when")}
      {Lisp-Entry "Active-Connections" definition #f 87 12 87 30 ()}
      {Lisp-Entry "find-connection" definition #f 91 20 91 35 ("Active-Connections" "assoc-value" "name")}
      {Lisp-Entry "get-connection" definition #f 95 20 95 34 ("cons" "Active-Connections" "set!" "new-connection" "connection" "let" "when" "find-connection" "or" "data-source" "data-source:" "name")}
      {Lisp-Entry "new-connection" definition #f 103 20 103 34 ("new-connection" "data-source")}
      {Lisp-Entry "close-connections" definition #f 107 20 107 37 ("set-active-data-source" "set!" "Active-Connections" "close" "connection" "name" "bind" "info" "lambda" "for-each")}
      {Lisp-Entry "Connections-File" definition #f 116 12 116 28 ("Profile" "File")}
      {Lisp-Entry "read-connections" definition #f 120 21 120 37 ("err" "continue-handler:" "install-context" "connections" "get-process" "process" "lambda" "with-safe-execution" "Data-Sources" "new" "read-form" "instantiate" "exists?" "if" "Connections-File" "file" "let" "load-connections" "define")}
      {Lisp-Entry "select-statement?" definition #f 143 20 143 37 ("0" "subseq" "not" "if" "string-ci=?" "position" "'position" "return:" "whitespace?" "find-if" "pos" "trim-whitespace" "stm" "let" "statement")}}})
"_view"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "view" "_view.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.sql.view" module #f 37 8 37 28 ("jazz")
      {Lisp-Entry "get-sql-console" definition #f 44 20 44 35 ("SQL-Console-Manager" "singleton-docked" "get-guest")}
      {Lisp-Entry "get-sql-console-text" definition #f 48 20 48 40 ("get-sql-console" "get-text")}
      {Lisp-Entry "get-sql-tree-output" definition #f 52 20 52 39 ("SQL-Tree-Output" "singleton-docked" "get-guest")}
      {Lisp-Entry "get-sql-output-tree" definition #f 56 20 56 39 ("get-sql-tree-output" "get-tree")}
      {Lisp-Entry "get-sql-text-output" definition #f 60 20 60 39 ("SQL-Text-Output" "singleton-docked" "get-guest")}
      {Lisp-Entry "get-sql-output-text" definition #f 64 20 64 39 ("get-sql-text-output" "get-text")}
      {Lisp-Entry "get-sql-connections" definition #f 68 20 68 39 ("SQL-Connections-Manager" "singleton-docked" "get-guest")}}})
"autoload"
 ({Lisp-File-Entry {File jazz.editor.sql "src" "jazz" "editor" "sql" "autoload.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.sql.autoload" module #f 37 18 37 42 ("jazz")}})
