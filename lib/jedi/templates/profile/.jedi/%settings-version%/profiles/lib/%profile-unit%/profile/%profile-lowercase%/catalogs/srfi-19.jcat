"_time"
 ({Lisp-File-Entry {File Jazz "lib" "srfi-19" "src" "time" "_time.jazz"} 1288732035
    {Lisp-Entry "time" module #f 37 8 37 12 ("jazz")
      {Lisp-Entry "time->seconds" definition #f 44 20 44 33 ("1000000000.0" "time-nanosecond" "/" "time-second" "+" "time")}
      {Lisp-Entry "seconds->time" definition #f 48 20 48 33 ("-" "1000000" "*" "time-utc" "make-time" "floor" "inexact->exact" "int-seconds" "let" "seconds")}
      {Lisp-Entry "date-universal->local" definition #f 54 20 54 41 ("date")}
      {Lisp-Entry "date-local->universal" definition #f 59 20 59 41 ("date")}
      {Lisp-Entry "parse-date-day" definition #f 63 20 63 34 ("string->date" "date")}
      {Lisp-Entry "parse-date-time" definition #f 67 20 67 35 ("string->date" "date")}
      {Lisp-Entry "parse-date-day-french" definition #f 71 20 71 41 ("string->date" "date")}
      {Lisp-Entry "present-date" definition #f 75 20 75 32 ("date->string" "date")}
      {Lisp-Entry "present-date-day" definition #f 79 20 79 36 ("date->string" "date")}
      {Lisp-Entry "present-date-time" definition #f 83 20 83 37 ("date->string" "date")}
      {Lisp-Entry "present-date-day-french" definition #f 87 20 87 43 ("date->string" "date")}
      {Lisp-Entry "present-date-hour" definition #f 91 20 91 37 ("date->string" "date")}
      {Lisp-Entry "date-add" definition #f 100 20 100 28 ("make-date" "date->time-monotonic" "time-monotonic->date" "unimplemented" "else" "increase!" "case" "date-zone-offset" "zone-offset" "date-year" "year" "date-month" "month" "date-day" "day" "date-hour" "hour" "date-minute" "minute" "date-second" "second" "date-nanosecond" "nanosecond" "let" "type" "count" "date")}}})
"classes"
 ({Lisp-File-Entry {File Jazz "lib" "srfi-19" "src" "time" "classes.scm"} 1288732035
    {Lisp-Entry "time.classes" unit #f 37 16 37 28 ("date?" "'date?" "Date" "'Date" "date" "'date" "jazz.Date" "jazz.Date-Class" "jazz.register-structure-type" "time?" "'time?" "jazz.type-tests" "Time" "'Time" "jazz.primitive-declarations" "time" "'time" "jazz.primitive-types" "%%table-set!" "jazz.Time" "jazz.Time-Class" "jazz.encapsulate-class")
      {Lisp-Entry "jazz.Time-Class" define-class ("class") 45 19 45 34 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "instance-slots" "slots" "interfaces" "ascendant" "descendants" "ancestors" "virtual-size" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.Time" define-class ("class") 46 19 46 28 ("jazz.Time-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Date-Class" define-class ("class") 49 19 49 34 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "instance-slots" "slots" "interfaces" "ascendant" "descendants" "ancestors" "virtual-size" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.Date" define-class ("class") 50 19 50 28 ("jazz.Date-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Time-Class" define-class ("class runtime") 58 27 58 42 ()}
      {Lisp-Entry "jazz.of-type?" generic/specific ("jazz.Time-Class") 61 21 61 34 ("time?" "object")}
      {Lisp-Entry "jazz.emit-specifier" generic/specific ("jazz.Time-Class") 65 21 65 40 ("time" "'time")}
      {Lisp-Entry "jazz.emit-test" generic/specific ("jazz.Time-Class") 69 21 69 35 (",value" "time?" "environment" "source-declaration" "value")}
      {Lisp-Entry "jazz.Time" define-class ("class runtime") 76 27 76 36 ()}
      {Lisp-Entry "jazz.Date-Class" define-class ("class runtime") 93 27 93 42 ()}
      {Lisp-Entry "jazz.of-type?" generic/specific ("jazz.Date-Class") 96 21 96 34 ("date?" "object")}
      {Lisp-Entry "jazz.emit-specifier" generic/specific ("jazz.Date-Class") 100 21 100 40 ("date" "'date")}
      {Lisp-Entry "jazz.emit-test" generic/specific ("jazz.Date-Class") 104 21 104 35 (",value" "date?" "environment" "source-declaration" "value")}
      {Lisp-Entry "jazz.Date" define-class ("class runtime") 111 27 111 36 ()}}})
"exports"
 ({Lisp-File-Entry {File Jazz "lib" "srfi-19" "src" "time" "exports.jazz"} 1288732035
    {Lisp-Entry "time.exports" module #f 37 18 37 30 ("jazz")
      {Lisp-Entry "time-duration" native #f 49 8 49 21 ()}
      {Lisp-Entry "time-monotonic" native #f 50 8 50 22 ()}
      {Lisp-Entry "time-process" native #f 51 8 51 20 ()}
      {Lisp-Entry "time-tai" native #f 52 8 52 16 ()}
      {Lisp-Entry "time-thread" native #f 53 8 53 19 ()}
      {Lisp-Entry "time-utc" native #f 54 8 54 16 ()}
      {Lisp-Entry "current-date" native #f 62 8 62 20 ()}
      {Lisp-Entry "current-julian-day" native #f 63 8 63 26 ()}
      {Lisp-Entry "current-modified-julian-day" native #f 64 8 64 35 ()}
      {Lisp-Entry "tm:current-time" native #f 65 8 65 23 ()}
      {Lisp-Entry "current-time" definition #f 66 19 66 31 ("tm:current-time")}
      {Lisp-Entry "time-resolution" native #f 67 8 67 23 ()}
      {Lisp-Entry "local-timezone" native #f 68 8 68 22 ()}
      {Lisp-Entry "local-timezone-set!" native #f 69 8 69 27 ()}
      {Lisp-Entry "make-time" native #f 77 8 77 17 ()}
      {Lisp-Entry "time?" native #f 78 8 78 13 ()}
      {Lisp-Entry "time-type" native #f 79 8 79 17 ()}
      {Lisp-Entry "time-nanosecond" native #f 80 8 80 23 ()}
      {Lisp-Entry "time-second" native #f 81 8 81 19 ()}
      {Lisp-Entry "set-time-type!" native #f 82 8 82 22 ()}
      {Lisp-Entry "set-time-nanosecond!" native #f 83 8 83 28 ()}
      {Lisp-Entry "set-time-second!" native #f 84 8 84 24 ()}
      {Lisp-Entry "copy-time" native #f 85 8 85 17 ()}
      {Lisp-Entry "time<=?" native #f 93 8 93 15 ()}
      {Lisp-Entry "time<?" native #f 94 8 94 14 ()}
      {Lisp-Entry "time=?" native #f 95 8 95 14 ()}
      {Lisp-Entry "time>=?" native #f 96 8 96 15 ()}
      {Lisp-Entry "time>?" native #f 97 8 97 14 ()}
      {Lisp-Entry "time-difference" native #f 105 8 105 23 ()}
      {Lisp-Entry "time-difference!" native #f 106 8 106 24 ()}
      {Lisp-Entry "add-duration" native #f 107 8 107 20 ()}
      {Lisp-Entry "add-duration!" native #f 108 8 108 21 ()}
      {Lisp-Entry "subtract-duration" native #f 109 8 109 25 ()}
      {Lisp-Entry "subtract-duration!" native #f 110 8 110 26 ()}
      {Lisp-Entry "make-date" native #f 118 8 118 17 ()}
      {Lisp-Entry "date?" native #f 119 8 119 13 ()}
      {Lisp-Entry "date-nanosecond" native #f 120 8 120 23 ()}
      {Lisp-Entry "date-second" native #f 121 8 121 19 ()}
      {Lisp-Entry "date-minute" native #f 122 8 122 19 ()}
      {Lisp-Entry "date-hour" native #f 123 8 123 17 ()}
      {Lisp-Entry "date-day" native #f 124 8 124 16 ()}
      {Lisp-Entry "date-month" native #f 125 8 125 18 ()}
      {Lisp-Entry "date-year" native #f 126 8 126 17 ()}
      {Lisp-Entry "date-zone-offset" native #f 127 8 127 24 ()}
      {Lisp-Entry "date-year-day" native #f 128 8 128 21 ()}
      {Lisp-Entry "date-week-day" native #f 129 8 129 21 ()}
      {Lisp-Entry "date-week-number" native #f 130 8 130 24 ()}
      {Lisp-Entry "date->julian-day" native #f 138 8 138 24 ()}
      {Lisp-Entry "date->modified-julian-day" native #f 139 8 139 33 ()}
      {Lisp-Entry "date->time-monotonic" native #f 140 8 140 28 ()}
      {Lisp-Entry "date->time-tai" native #f 141 8 141 22 ()}
      {Lisp-Entry "date->time-utc" native #f 142 8 142 22 ()}
      {Lisp-Entry "julian-day->date" native #f 143 8 143 24 ()}
      {Lisp-Entry "julian-day->time-monotonic" native #f 144 8 144 34 ()}
      {Lisp-Entry "julian-day->time-tai" native #f 145 8 145 28 ()}
      {Lisp-Entry "julian-day->time-utc" native #f 146 8 146 28 ()}
      {Lisp-Entry "modified-julian-day->date" native #f 147 8 147 33 ()}
      {Lisp-Entry "modified-julian-day->time-monotonic" native #f 148 8 148 43 ()}
      {Lisp-Entry "modified-julian-day->time-tai" native #f 149 8 149 37 ()}
      {Lisp-Entry "modified-julian-day->time-utc" native #f 150 8 150 37 ()}
      {Lisp-Entry "time-monotonic->date" native #f 151 8 151 28 ()}
      {Lisp-Entry "time-monotonic->julian-day" native #f 152 8 152 34 ()}
      {Lisp-Entry "time-monotonic->modified-julian-day" native #f 153 8 153 43 ()}
      {Lisp-Entry "time-monotonic->time-tai" native #f 154 8 154 32 ()}
      {Lisp-Entry "time-monotonic->time-tai!" native #f 155 8 155 33 ()}
      {Lisp-Entry "time-monotonic->time-utc" native #f 156 8 156 32 ()}
      {Lisp-Entry "time-monotonic->time-utc!" native #f 157 8 157 33 ()}
      {Lisp-Entry "time-tai->date" native #f 158 8 158 22 ()}
      {Lisp-Entry "time-tai->julian-day" native #f 159 8 159 28 ()}
      {Lisp-Entry "time-tai->modified-julian-day" native #f 160 8 160 37 ()}
      {Lisp-Entry "time-tai->time-monotonic" native #f 161 8 161 32 ()}
      {Lisp-Entry "time-tai->time-monotonic!" native #f 162 8 162 33 ()}
      {Lisp-Entry "time-tai->time-utc" native #f 163 8 163 26 ()}
      {Lisp-Entry "time-tai->time-utc!" native #f 164 8 164 27 ()}
      {Lisp-Entry "time-utc->date" native #f 165 8 165 22 ()}
      {Lisp-Entry "time-utc->julian-day" native #f 166 8 166 28 ()}
      {Lisp-Entry "time-utc->modified-julian-day" native #f 167 8 167 37 ()}
      {Lisp-Entry "time-utc->time-monotonic" native #f 168 8 168 32 ()}
      {Lisp-Entry "time-utc->time-monotonic!" native #f 169 8 169 33 ()}
      {Lisp-Entry "time-utc->time-tai" native #f 170 8 170 26 ()}
      {Lisp-Entry "time-utc->time-tai!" native #f 171 8 171 27 ()}
      {Lisp-Entry "date->string" native #f 179 8 179 20 ()}
      {Lisp-Entry "string->date" native #f 180 8 180 20 ()}}})
"implementation"
 ({Lisp-File-Entry {File Jazz "lib" "srfi-19" "src" "time" "implementation.scm"} 1288732035
    {Lisp-Entry "time.implementation" unit #f 82 16 82 35 ("0" "lambda" "local-timezone" "set!" "zone-offset" "year" "month" "day" "hour" "minute" "date" "make-inspector" "second" "nanosecond" "type" "time" "define-struct" "val" "_" "syntax-rules" "car" ",default-value" ",rest" "null?" "if" "default-value" "rest")
      {Lisp-Entry "receive" define-macro #f 87 18 87 25 ("lambda" "call-with-values" "..." "body" "expression" "formals" "receive" "syntax-rules")}
      {Lisp-Entry "time-tai" define #f 110 8 110 16 ("time-tai" "'time-tai")}
      {Lisp-Entry "time-utc" define #f 111 8 111 16 ("time-utc" "'time-utc")}
      {Lisp-Entry "time-monotonic" define #f 112 8 112 22 ("time-monotonic" "'time-monotonic")}
      {Lisp-Entry "time-thread" define #f 113 8 113 19 ("time-thread" "'time-thread")}
      {Lisp-Entry "time-process" define #f 114 8 114 20 ("time-process" "'time-process")}
      {Lisp-Entry "time-duration" define #f 115 8 115 21 ("time-duration" "'time-duration")}
      {Lisp-Entry "time-gc" define #f 118 8 118 15 ("time-gc" "'time-gc")}
      {Lisp-Entry "tm:locale-number-separator" define #f 122 8 122 34 ()}
      {Lisp-Entry "tm:locale-abbr-weekday-vector" define #f 124 8 124 37 ("vector")}
      {Lisp-Entry "tm:locale-long-weekday-vector" define #f 126 8 126 37 ("vector")}
      {Lisp-Entry "tm:locale-abbr-month-vector" define #f 131 8 131 35 ("vector")}
      {Lisp-Entry "tm:locale-long-month-vector" define #f 135 8 135 35 ("vector")}
      {Lisp-Entry "tm:locale-pm" define #f 141 8 141 20 ()}
      {Lisp-Entry "tm:locale-am" define #f 142 8 142 20 ()}
      {Lisp-Entry "tm:locale-date-time-format" define #f 145 8 145 34 ()}
      {Lisp-Entry "tm:locale-short-date-format" define #f 146 8 146 35 ()}
      {Lisp-Entry "tm:locale-time-format" define #f 147 8 147 29 ()}
      {Lisp-Entry "tm:iso-8601-date-time-format" define #f 148 8 148 36 ()}
      {Lisp-Entry "tm:nano" define #f 153 8 153 15 ("9" "10" "expt")}
      {Lisp-Entry "tm:sid" define #f 154 8 154 14 ("86400")}
      {Lisp-Entry "tm:sihd" define #f 155 8 155 15 ("43200")}
      {Lisp-Entry "tm:tai-epoch-in-jd" define #f 156 8 156 26 ("4881175/2")}
      {Lisp-Entry "tm:time-error-types" define #f 161 8 161 27 ("invalid-month-specification" "bad-date-template-string" "bad-date-format-string" "dates-are-immutable" "not-duration" "incompatible-time-types" "unsupported-clock-type" "invalid-clock-type")}
      {Lisp-Entry "tm:time-error" define #f 172 9 172 22 ("error" "tm:time-error-types" "member" "if" "value" "type" "caller")}
      {Lisp-Entry "tm:read-tai-utc-data" define #f 189 9 189 29 ("cons" "set!" "1972" ">=" "cdddr" "secs" "cdr" "cadddr" "car" "year" "string-append" "open-input-string" "read" "data" "let*" "begin" "eof-object?" "not" "if" "read-line" "line" "loop" "table" "open-input-file" "port" "let" "sec" "convert-sec" "tm:sid" "tm:tai-epoch-in-jd" "inexact->exact" "-" "*" "jd" "convert-jd" "define" "filename")}
      {Lisp-Entry "tm:leap-second-table" define #f 210 8 210 28 ("10" "63072000" "11" "78796800" "12" "94694400" "13" "126230400" "14" "157766400" "15" "189302400" "16" "220924800" "17" "252460800" "18" "283996800" "19" "315532800" "20" "362793600" "21" "394329600" "22" "425865600" "23" "489024000" "24" "567993600" "25" "631152000" "26" "662688000" "27" "709948800" "28" "741484800" "29" "773020800" "30" "820454400" "31" "867715200" "32" "915148800" "33" "1136073600")}
      {Lisp-Entry "read-leap-second-table" define #f 236 9 236 31 ("values" "tm:read-tai-utc-data" "tm:leap-second-table" "set!" "filename")}
      {Lisp-Entry "tm:leap-second-delta" define #f 241 9 241 29 ("tm:leap-second-table" "0" "tm:sid" "365" "1970" "1972" "-" "*" "<" "if" "cdr" "else" "cdar" "caar" ">=" "cond" "table" "lambda" "lsd" "letrec" "utc-seconds")}
      {Lisp-Entry "tm:leap-second-neg-delta" define #f 251 9 251 33 ("tm:leap-second-table" "tm:sid" "365" "1970" "1972" "*" "<" "if" "cdr" "else" "caar" "-" "cdar" "<=" "0" "null?" "cond" "table" "lambda" "lsd" "letrec" "tai-seconds")}
      {Lisp-Entry "time" define #f 266 17 266 21 ("second" "nanosecond" "type" "b3b7d0d0-9cb7-11de-8a39-0800200c9a66" "id:")}
      {Lisp-Entry "tm:set-time-type!" define #f 276 12 276 29 ("time-type-set!")}
      {Lisp-Entry "tm:set-time-nanosecond!" define #f 277 12 277 35 ("time-nanosecond-set!")}
      {Lisp-Entry "tm:set-time-second!" define #f 278 12 278 31 ("time-second-set!")}
      {Lisp-Entry "tm:set-time-type!" define #f 280 12 280 29 ("set-time-type!")}
      {Lisp-Entry "tm:set-time-nanosecond!" define #f 281 12 281 35 ("set-time-nanosecond!")}
      {Lisp-Entry "tm:set-time-second!" define #f 282 12 282 31 ("set-time-second!")}
      {Lisp-Entry "copy-time" define #f 286 9 286 18 ("time-second" "time-nanosecond" "time-type" "make-time" "time")}
      {Lisp-Entry "current-seconds" define #f 305 13 305 28 ("current-time" "time->seconds" "floor" "inexact->exact")}
      {Lisp-Entry "current-milliseconds" define #f 308 13 308 33 ("current-time" "time->seconds" "1000" "*" "floor" "inexact->exact")}
      {Lisp-Entry "current-process-milliseconds" define #f 311 13 311 41 ("0")}
      {Lisp-Entry "current-gc-milliseconds" define #f 314 13 314 36 ("0")}
      {Lisp-Entry "tm:get-time-of-day" define #f 317 9 317 27 ("values" "1000" "-" "*" "milliseconds" "floor" "inexact->exact" "seconds" "current-time" "time->seconds" "time" "let*")}
      {Lisp-Entry "tm:current-time-utc" define #f 323 9 323 28 ("1000000" "*" "time-utc" "make-time" "tm:get-time-of-day" "ms" "seconds" "receive")}
      {Lisp-Entry "tm:current-time-tai" define #f 327 9 327 28 ("tm:leap-second-delta" "+" "1000000" "*" "time-tai" "make-time" "tm:get-time-of-day" "ms" "seconds" "receive")}
      {Lisp-Entry "tm:current-time-ms-time" define #f 336 9 336 32 ("quotient" "1000000" "1000" "remainder" "*" "make-time" "current-ms" "let" "proc" "time-type")}
      {Lisp-Entry "tm:current-time-monotonic" define #f 348 9 348 34 ("tm:leap-second-delta" "+" "1000000" "*" "time-monotonic" "make-time" "tm:get-time-of-day" "ms" "seconds" "receive")}
      {Lisp-Entry "tm:current-time-thread" define #f 356 9 356 31 ("current-process-milliseconds" "time-process" "tm:current-time-ms-time")}
      {Lisp-Entry "tm:current-time-process" define #f 359 9 359 32 ("current-process-milliseconds" "time-process" "tm:current-time-ms-time")}
      {Lisp-Entry "tm:current-time-gc" define #f 362 9 362 27 ("current-gc-milliseconds" "time-gc" "tm:current-time-ms-time")}
      {Lisp-Entry "tm:current-time" define #f 365 9 365 24 ("invalid-clock-type" "'invalid-clock-type" "current-time" "'current-time" "tm:time-error" "else" "tm:current-time-gc" "time-gc" "tm:current-time-process" "time-process" "tm:current-time-thread" "time-thread" "tm:current-time-monotonic" "time-monotonic" "tm:current-time-utc" "tm:current-time-tai" "time-tai" "eq?" "cond" "time-utc" ":optional" "let" "clock-type")}
      {Lisp-Entry "time-resolution" define #f 382 9 382 24 ("invalid-clock-type" "'invalid-clock-type" "time-resolution" "'time-resolution" "tm:time-error" "else" "time-gc" "time-process" "time-thread" "time-monotonic" "1000000" "time-tai" "eq?" "cond" "time-utc" ":optional" "let" "clock-type")}
      {Lisp-Entry "tm:time-compare-check" define #f 395 9 395 30 ("incompatible-time-types" "'incompatible-time-types" "tm:time-error" "time-type" "eq?" "time?" "and" "not" "or" "if" "caller" "time2" "time1")}
      {Lisp-Entry "time=?" define #f 401 9 401 15 ("time-nanosecond" "time-second" "=" "and" "time=?" "'time=?" "tm:time-compare-check" "time2" "time1")}
      {Lisp-Entry "time>?" define #f 406 9 406 15 ("time-nanosecond" "=" "and" "time-second" ">" "or" "time>?" "'time>?" "tm:time-compare-check" "time2" "time1")}
      {Lisp-Entry "time<?" define #f 412 9 412 15 ("time-nanosecond" "=" "and" "time-second" "<" "or" "time<?" "'time<?" "tm:time-compare-check" "time2" "time1")}
      {Lisp-Entry "time>=?" define #f 418 9 418 16 ("time-nanosecond" "=" "and" "time-second" ">=" "or" "time>=?" "'time>=?" "tm:time-compare-check" "time2" "time1")}
      {Lisp-Entry "time<=?" define #f 424 9 424 16 ("time-nanosecond" "=" "and" "time-second" "<=" "or" "time<=?" "'time<=?" "tm:time-compare-check" "time2" "time1")}
      {Lisp-Entry "tm:time->nanoseconds" define #f 432 9 432 29 ("time-nanosecond" "tm:nano" "time-second" "*" "+" "1" "-1" "negative?" "if" "n" "sign1" "define" "time")}
      {Lisp-Entry "tm:nanoseconds->time" define #f 438 9 438 29 ("quotient" "tm:nano" "remainder" "make-time" "nanoseconds" "time-type")}
      {Lisp-Entry "tm:nanoseconds->values" define #f 443 9 443 31 ("quotient" "tm:nano" "remainder" "abs" "values" "nanoseconds")}
      {Lisp-Entry "tm:time-difference" define #f 447 9 447 27 ("tm:time->nanoseconds" "-" "tm:nanoseconds->values" "secs" "nanos" "receive" "tm:set-time-nanosecond!" "0" "tm:set-time-second!" "begin" "time=?" "time-duration" "tm:set-time-type!" "incompatible-time-types" "'incompatible-time-types" "time-difference" "'time-difference" "tm:time-error" "time-type" "eq?" "time?" "and" "not" "or" "if" "time3" "time2" "time1")}
      {Lisp-Entry "time-difference" define #f 464 9 464 24 ("make-time" "tm:time-difference" "time2" "time1")}
      {Lisp-Entry "time-difference!" define #f 467 9 467 25 ("tm:time-difference" "time2" "time1")}
      {Lisp-Entry "tm:add-duration" define #f 470 9 470 24 ("tm:set-time-nanosecond!" "-1" "tm:set-time-second!" "begin" "negative?" "quotient" "q" "tm:nano" "remainder" "r" "time-nanosecond" "nsec-plus" "time-second" "+" "sec-plus" "let" "not-duration" "'not-duration" "time-duration" "time-type" "eq?" "incompatible-time-types" "'incompatible-time-types" "add-duration" "'add-duration" "tm:time-error" "time?" "and" "not" "if" "time3" "duration" "time1")}
      {Lisp-Entry "add-duration" define #f 489 9 489 21 ("time-type" "make-time" "tm:add-duration" "duration" "time1")}
      {Lisp-Entry "add-duration!" define #f 492 9 492 22 ("tm:add-duration" "duration" "time1")}
      {Lisp-Entry "tm:subtract-duration" define #f 495 9 495 29 ("+" "tm:set-time-nanosecond!" "1" "tm:set-time-second!" "begin" "negative?" "quotient" "q" "tm:nano" "remainder" "r" "time-nanosecond" "nsec-minus" "time-second" "-" "sec-minus" "let" "not-duration" "'not-duration" "tm:subtract-duration" "'tm:subtract-duration" "time-duration" "time-type" "eq?" "incompatible-time-types" "'incompatible-time-types" "add-duration" "'add-duration" "tm:time-error" "time?" "and" "not" "if" "time3" "duration" "time1")}
      {Lisp-Entry "subtract-duration" define #f 513 9 513 26 ("time-type" "make-time" "tm:subtract-duration" "duration" "time1")}
      {Lisp-Entry "subtract-duration!" define #f 516 9 516 27 ("tm:subtract-duration" "duration" "time1")}
      {Lisp-Entry "tm:time-tai->time-utc!" define #f 522 9 522 31 ("tm:leap-second-neg-delta" "time-second" "-" "tm:set-time-second!" "time-nanosecond" "tm:set-time-nanosecond!" "time-utc" "tm:set-time-type!" "incompatible-time-types" "'incompatible-time-types" "tm:time-error" "time-tai" "time-type" "eq?" "not" "if" "caller" "time-out" "time-in")}
      {Lisp-Entry "time-tai->time-utc" define #f 532 9 532 27 ("time-tai->time-utc" "'time-tai->time-utc" "make-time" "tm:time-tai->time-utc!" "time-in")}
      {Lisp-Entry "time-tai->time-utc!" define #f 536 9 536 28 ("time-tai->time-utc!" "'time-tai->time-utc!" "tm:time-tai->time-utc!" "time-in")}
      {Lisp-Entry "tm:time-utc->time-tai!" define #f 540 9 540 31 ("tm:leap-second-delta" "time-second" "+" "tm:set-time-second!" "time-nanosecond" "tm:set-time-nanosecond!" "time-tai" "tm:set-time-type!" "incompatible-time-types" "'incompatible-time-types" "tm:time-error" "time-utc" "time-type" "eq?" "not" "if" "caller" "time-out" "time-in")}
      {Lisp-Entry "time-utc->time-tai" define #f 551 9 551 27 ("time-utc->time-tai" "'time-utc->time-tai" "make-time" "tm:time-utc->time-tai!" "time-in")}
      {Lisp-Entry "time-utc->time-tai!" define #f 554 9 554 28 ("time-utc->time-tai!" "'time-utc->time-tai!" "tm:time-utc->time-tai!" "time-in")}
      {Lisp-Entry "time-monotonic->time-utc" define #f 558 9 558 33 ("time-monotonic->time-utc" "'time-monotonic->time-utc" "tm:time-tai->time-utc!" "time-tai" "tm:set-time-type!" "copy-time" "ntime" "let" "incompatible-time-types" "'incompatible-time-types" "time-monotoinc->time-utc" "'time-monotoinc->time-utc" "tm:time-error" "time-monotonic" "time-type" "eq?" "not" "if" "time-in")}
      {Lisp-Entry "time-monotonic->time-utc!" define #f 565 9 565 34 ("time-monotonic->time-utc" "'time-monotonic->time-utc" "tm:time-tai->time-utc!" "time-tai" "tm:set-time-type!" "incompatible-time-types" "'incompatible-time-types" "time-monotonic->time-utc!" "'time-monotonic->time-utc!" "tm:time-error" "time-monotonic" "time-type" "eq?" "not" "if" "time-in")}
      {Lisp-Entry "time-monotonic->time-tai" define #f 571 9 571 33 ("time-tai" "tm:set-time-type!" "copy-time" "ntime" "let" "incompatible-time-types" "'incompatible-time-types" "time-monotonic->time-tai" "'time-monotonic->time-tai" "tm:time-error" "time-monotonic" "time-type" "eq?" "not" "if" "time-in")}
      {Lisp-Entry "time-monotonic->time-tai!" define #f 578 9 578 34 ("time-tai" "tm:set-time-type!" "incompatible-time-types" "'incompatible-time-types" "time-monotonic->time-tai!" "'time-monotonic->time-tai!" "tm:time-error" "time-monotonic" "time-type" "eq?" "not" "if" "time-in")}
      {Lisp-Entry "time-utc->time-monotonic" define #f 584 9 584 33 ("time-monotonic" "tm:set-time-type!" "make-time" "tm:time-utc->time-tai!" "ntime" "let" "incompatible-time-types" "'incompatible-time-types" "time-utc->time-monotonic" "'time-utc->time-monotonic" "tm:time-error" "time-utc" "time-type" "eq?" "not" "if" "time-in")}
      {Lisp-Entry "time-utc->time-monotonic!" define #f 593 9 593 34 ("time-monotonic" "tm:set-time-type!" "time-utc->time-monotonic!" "'time-utc->time-monotonic!" "tm:time-utc->time-tai!" "ntime" "let" "incompatible-time-types" "'incompatible-time-types" "time-utc->time-montonic!" "'time-utc->time-montonic!" "tm:time-error" "time-utc" "time-type" "eq?" "not" "if" "time-in")}
      {Lisp-Entry "time-tai->time-monotonic" define #f 602 9 602 33 ("time-monotonic" "tm:set-time-type!" "copy-time" "ntime" "let" "incompatible-time-types" "'incompatible-time-types" "time-tai->time-monotonic" "'time-tai->time-monotonic" "tm:time-error" "time-tai" "time-type" "eq?" "not" "if" "time-in")}
      {Lisp-Entry "time-tai->time-monotonic!" define #f 609 9 609 34 ("time-monotonic" "tm:set-time-type!" "incompatible-time-types" "'incompatible-time-types" "time-tai->time-monotonic!" "'time-tai->time-monotonic!" "tm:time-error" "time-tai" "time-type" "eq?" "not" "if" "time-in")}
      {Lisp-Entry "date" define #f 620 17 620 21 ("zone-offset" "year" "month" "day" "hour" "minute" "second" "nanosecond" "d958b070-9cb7-11de-8a39-0800200c9a66" "id:")}
      {Lisp-Entry "tm:set-date-nanosecond!" define #f 630 12 630 35 ("date-nanosecond-set!")}
      {Lisp-Entry "tm:set-date-second!" define #f 631 12 631 31 ("date-second-set!")}
      {Lisp-Entry "tm:set-date-minute!" define #f 632 12 632 31 ("date-minute-set!")}
      {Lisp-Entry "tm:set-date-hour!" define #f 633 12 633 29 ("date-hour-set!")}
      {Lisp-Entry "tm:set-date-day!" define #f 634 12 634 28 ("date-day-set!")}
      {Lisp-Entry "tm:set-date-month!" define #f 635 12 635 30 ("date-month-set!")}
      {Lisp-Entry "tm:set-date-year!" define #f 636 12 636 29 ("date-year-set!")}
      {Lisp-Entry "tm:set-date-zone-offset!" define #f 637 12 637 36 ("date-zone-offset-set!")}
      {Lisp-Entry "tm:set-date-nanosecond!" define #f 639 12 639 35 ("set-date-nanosecond!")}
      {Lisp-Entry "tm:set-date-second!" define #f 640 12 640 31 ("set-date-second!")}
      {Lisp-Entry "tm:set-date-minute!" define #f 641 12 641 31 ("set-date-minute!")}
      {Lisp-Entry "tm:set-date-hour!" define #f 642 12 642 29 ("set-date-hour!")}
      {Lisp-Entry "tm:set-date-day!" define #f 643 12 643 28 ("set-date-day!")}
      {Lisp-Entry "tm:set-date-month!" define #f 644 12 644 30 ("set-date-month!")}
      {Lisp-Entry "tm:set-date-year!" define #f 645 12 645 29 ("set-date-year!")}
      {Lisp-Entry "tm:set-date-zone-offset!" define #f 646 12 646 36 ("set-date-zone-offset!")}
      {Lisp-Entry "set-date-second!" define #f 648 9 648 25 ("dates-are-immutable" "'dates-are-immutable" "set-date-second!" "'set-date-second!" "tm:time-error" "val" "date")}
      {Lisp-Entry "set-date-minute!" define #f 652 9 652 25 ("dates-are-immutable" "'dates-are-immutable" "set-date-minute!" "'set-date-minute!" "tm:time-error" "val" "date")}
      {Lisp-Entry "set-date-day!" define #f 655 9 655 22 ("dates-are-immutable" "'dates-are-immutable" "set-date-day!" "'set-date-day!" "tm:time-error" "val" "date")}
      {Lisp-Entry "set-date-month!" define #f 658 9 658 24 ("dates-are-immutable" "'dates-are-immutable" "set-date-month!" "'set-date-month!" "tm:time-error" "val" "date")}
      {Lisp-Entry "set-date-year!" define #f 661 9 661 23 ("dates-are-immutable" "'dates-are-immutable" "set-date-year!" "'set-date-year!" "tm:time-error" "val" "date")}
      {Lisp-Entry "set-date-zone-offset!" define #f 664 9 664 30 ("dates-are-immutable" "'dates-are-immutable" "set-date-zone-offset!" "'set-date-zone-offset!" "tm:time-error" "val" "date")}
      {Lisp-Entry "tm:encode-julian-day-number" define #f 668 9 668 36 ("-32045" "400" "100" "4" "365" "5" "2" "153" "3" "*" "m" "0" "-1" "negative?" "if" "4800" "+" "y" "12" "14" "-" "quotient" "a" "let*" "year" "month" "day")}
      {Lisp-Entry "tm:char-pos" define #f 680 9 680 20 ("1" "+" "tm:char-pos" "else" "string-ref" "char=?" ">=" "cond" "len" "index" "str" "char")}
      {Lisp-Entry "tm:fractional-part" define #f 689 9 689 27 ("1" "+" "substring" "string-length" "0" "tm:char-pos" "ppos" "exact->inexact" "number->string" "str" "let" "integer?" "if" "r")}
      {Lisp-Entry "tm:decode-julian-day-number" define #f 697 9 697 36 ("0" ">=" "if" "-12" "1" "tm:sid" "values" "10" "-4800" "100" "y" "153" "2" "5" "m" "e" "1461" "d" "-" "c" "146097" "3" "4" "*" "quotient" "b" "32044" "+" "a" "truncate" "days" "let*" "jdn")}
      {Lisp-Entry "local-timezone" define #f 714 8 714 22 ()}
      {Lisp-Entry "local-timezone-set!" define #f 721 9 721 28 ("local-timezone" "set!" "proc")}
      {Lisp-Entry "tm:local-tz-offset" define #f 727 13 727 31 ("local-timezone")}
      {Lisp-Entry "tm:local-tz-offset" define #f 733 13 733 31 ("current-seconds" "seconds->date" "date-time-zone-offset")}
      {Lisp-Entry "tm:time->julian-day-number" define #f 737 9 737 35 ("tm:tai-epoch-in-jd" "tm:sid" "tm:sihd" "/" "+" "tz-offset" "seconds")}
      {Lisp-Entry "tm:find" define #f 744 9 744 16 ("cdr" "tm:find" "car" "null?" "if" "l" "proc")}
      {Lisp-Entry "tm:tai-before-leap-second?" define #f 751 9 751 35 ("tm:leap-second-table" "1" "cdr" "car" "+" "-" "=" "x" "lambda" "tm:find" "second")}
      {Lisp-Entry "tm:time->date" define #f 756 9 756 22 ("time-nanosecond" "make-date" "seconds" "minutes" "remainder" "rem" "60" "*" "quotient" "hours" "time-second" "tm:time->julian-day-number" "tm:decode-julian-day-number" "year" "month" "date" "secs" "receive" "tm:local-tz-offset" ":optional" "offset" "let*" "incompatible-time-types" "'incompatible-time-types" "time->date" "'time->date" "tm:time-error" "time-type" "eq?" "not" "if" "ttype" "tz-offset" "time")}
      {Lisp-Entry "time-tai->date" define #f 776 9 776 23 ("60" "tm:set-date-second!" "time-utc" "1" "0" "time-duration" "make-time" "time-tai->time-utc" "subtract-duration!" "tm:time->date" "d" "let" "time-second" "tm:tai-before-leap-second?" "if" "tz-offset" "time")}
      {Lisp-Entry "time-utc->date" define #f 784 9 784 23 ("time-utc" "tm:time->date" "tz-offset" "time")}
      {Lisp-Entry "time-monotonic->date" define #f 788 9 788 29 ("time-monotonic" "tm:time->date" "tz-offset" "time")}
      {Lisp-Entry "date->time-utc" define #f 791 9 791 23 ("60" "24" "1/2" "*" "+" "time-utc" "make-time" "tm:tai-epoch-in-jd" "tm:encode-julian-day-number" "-" "jdays" "date-zone-offset" "offset" "date-year" "year" "date-month" "month" "date-day" "day" "date-hour" "hour" "date-minute" "minute" "date-second" "second" "date-nanosecond" "nanosecond" "let" "date")}
      {Lisp-Entry "date->time-tai" define #f 812 9 812 23 ("1" "0" "time-duration" "make-time" "date->time-utc" "time-utc->time-tai!" "subtract-duration!" "60" "date-second" "=" "if" "d")}
      {Lisp-Entry "date->time-monotonic" define #f 817 9 817 29 ("date->time-utc" "time-utc->time-monotonic!" "date")}
      {Lisp-Entry "tm:leap-year?" define #f 821 9 821 22 ("100" "not" "4" "and" "0" "400" "modulo" "=" "or" "year")}
      {Lisp-Entry "leap-year?" define #f 825 9 825 19 ("date-year" "tm:leap-year?" "date")}
      {Lisp-Entry "tm:month-assoc" define #f 829 9 829 23 ("334" "11" "304" "10" "273" "9" "243" "8" "212" "7" "181" "6" "151" "5" "120" "4" "90" "3" "59" "2" "31" "1" "0")}
      {Lisp-Entry "tm:year-day" define #f 833 9 833 20 ("cdr" "+" "2" ">" "tm:leap-year?" "and" "invalid-month-specification" "'invalid-month-specification" "date-year-day" "'date-year-day" "tm:time-error" "not" "if" "tm:month-assoc" "1" "-" "assoc" "days-pr" "let" "year" "month" "day")}
      {Lisp-Entry "date-year-day" define #f 841 9 841 22 ("date-year" "date-month" "date-day" "tm:year-day" "date")}
      {Lisp-Entry "tm:week-day" define #f 845 9 845 20 ("7" "31" "400" "100" "4" "modulo" "-2" "*" "+" "m" "y" "12" "14" "-" "quotient" "a" "let*" "year" "month" "day")}
      {Lisp-Entry "date-week-day" define #f 853 9 853 22 ("date-year" "date-month" "date-day" "tm:week-day" "date")}
      {Lisp-Entry "tm:days-before-first-week" define #f 856 9 856 34 ("7" "-" "modulo" "date-week-day" "fdweek-day" "date-year" "1" "0" "make-date" "first-day" "let*" "day-of-week-starting-week" "date")}
      {Lisp-Entry "date-week-number" define #f 866 9 866 25 ("7" "tm:days-before-first-week" "date-year-day" "-" "quotient" "day-of-week-starting-week" "date")}
      {Lisp-Entry "current-date" define #f 871 9 871 21 ("tm:local-tz-offset" ":optional" "time-utc" "tm:current-time" "time-utc->date" "tz-offset")}
      {Lisp-Entry "tm:natural-year" define #f 876 9 876 24 ("else" "50" "+" "-" "<=" "0" "<" ">=" "cond" "100" "quotient" "*" "current-century" "current-date" "date-year" "current-year" "let*" "n")}
      {Lisp-Entry "date->julian-day" define #f 887 9 887 25 ("tm:sid" "tm:nano" "60" "*" "/" "1/2" "-" "tm:encode-julian-day-number" "+" "date-zone-offset" "offset" "date-year" "year" "date-month" "month" "date-day" "day" "date-hour" "hour" "date-minute" "minute" "date-second" "second" "date-nanosecond" "nanosecond" "let" "date")}
      {Lisp-Entry "date->modified-julian-day" define #f 902 9 902 34 ("4800001/2" "date->julian-day" "-" "date")}
      {Lisp-Entry "time-utc->julian-day" define #f 907 9 907 29 ("tm:tai-epoch-in-jd" "tm:sid" "tm:nano" "time-nanosecond" "time-second" "/" "+" "incompatible-time-types" "'incompatible-time-types" "time-utc->julian-day" "'time-utc->julian-day" "tm:time-error" "time-utc" "time-type" "eq?" "not" "if" "time")}
      {Lisp-Entry "time-utc->modified-julian-day" define #f 914 9 914 38 ("4800001/2" "time-utc->julian-day" "-" "time")}
      {Lisp-Entry "time-tai->julian-day" define #f 918 9 918 29 ("tm:tai-epoch-in-jd" "tm:sid" "tm:nano" "time-nanosecond" "tm:leap-second-delta" "time-second" "-" "/" "+" "incompatible-time-types" "'incompatible-time-types" "time-tai->julian-day" "'time-tai->julian-day" "tm:time-error" "time-tai" "time-type" "eq?" "not" "if" "time")}
      {Lisp-Entry "time-tai->modified-julian-day" define #f 927 9 927 38 ("4800001/2" "time-tai->julian-day" "-" "time")}
      {Lisp-Entry "time-monotonic->julian-day" define #f 932 9 932 35 ("tm:tai-epoch-in-jd" "tm:sid" "tm:nano" "time-nanosecond" "tm:leap-second-delta" "time-second" "-" "/" "+" "incompatible-time-types" "'incompatible-time-types" "time-monotonic->julian-day" "'time-monotonic->julian-day" "tm:time-error" "time-monotonic" "time-type" "eq?" "not" "if" "time")}
      {Lisp-Entry "time-monotonic->modified-julian-day" define #f 942 9 942 44 ("4800001/2" "time-monotonic->julian-day" "-" "time")}
      {Lisp-Entry "julian-day->time-utc" define #f 947 9 947 29 ("/" "floor" "remainder" "time-utc" "make-time" "tm:tai-epoch-in-jd" "-" "tm:sid" "tm:nano" "*" "nanosecs" "let" "jdn")}
      {Lisp-Entry "julian-day->time-tai" define #f 953 9 953 29 ("julian-day->time-utc" "time-utc->time-tai!" "jdn")}
      {Lisp-Entry "julian-day->time-monotonic" define #f 956 9 956 35 ("julian-day->time-utc" "time-utc->time-monotonic!" "jdn")}
      {Lisp-Entry "julian-day->date" define #f 959 9 959 25 ("julian-day->time-utc" "time-utc->date" "tm:local-tz-offset" ":optional" "offset" "let" "tz-offset" "jdn")}
      {Lisp-Entry "modified-julian-day->date" define #f 963 9 963 34 ("4800001/2" "+" "julian-day->date" "tm:local-tz-offset" ":optional" "offset" "let" "tz-offset" "jdn")}
      {Lisp-Entry "modified-julian-day->time-utc" define #f 967 9 967 38 ("4800001/2" "+" "julian-day->time-utc" "jdn")}
      {Lisp-Entry "modified-julian-day->time-tai" define #f 970 9 970 38 ("4800001/2" "+" "julian-day->time-tai" "jdn")}
      {Lisp-Entry "modified-julian-day->time-monotonic" define #f 973 9 973 44 ("4800001/2" "+" "julian-day->time-monotonic" "jdn")}
      {Lisp-Entry "current-julian-day" define #f 976 9 976 27 ("time-utc" "tm:current-time" "time-utc->julian-day")}
      {Lisp-Entry "current-modified-julian-day" define #f 979 9 979 36 ("time-utc" "tm:current-time" "time-utc->modified-julian-day")}
      {Lisp-Entry "tm:padding" define #f 987 9 987 19 ("string-ref" "string-set!" ">=" "1" "+" "0" "i" "do" "-" "new-str-offset" "make-string" "new-str" "not" ">" "or" "if" "string-length" "str-len" "number->string" "str" "let*" "length" "pad-with" "n")}
      {Lisp-Entry "tm:last-n-digits" define #f 1002 9 1002 25 ("10" "expt" "remainder" "abs" "n" "i")}
      {Lisp-Entry "tm:locale-abbr-weekday" define #f 1005 9 1005 31 ("tm:locale-abbr-weekday-vector" "vector-ref" "n")}
      {Lisp-Entry "tm:locale-long-weekday" define #f 1008 9 1008 31 ("tm:locale-long-weekday-vector" "vector-ref" "n")}
      {Lisp-Entry "tm:locale-abbr-month" define #f 1011 9 1011 29 ("tm:locale-abbr-month-vector" "vector-ref" "n")}
      {Lisp-Entry "tm:locale-long-month" define #f 1014 9 1014 29 ("tm:locale-long-month-vector" "vector-ref" "n")}
      {Lisp-Entry "tm:vector-find" define #f 1017 9 1017 23 ("0" "1" "+" "else" "vector-ref" ">=" "cond" "index" "tm:vector-find-int" "define" "vector-length" "len" "let" "comparator" "haystack" "needle")}
      {Lisp-Entry "tm:locale-abbr-weekday->index" define #f 1026 9 1026 38 ("string=?" "tm:locale-abbr-weekday-vector" "tm:vector-find" "string")}
      {Lisp-Entry "tm:locale-long-weekday->index" define #f 1029 9 1029 38 ("string=?" "tm:locale-long-weekday-vector" "tm:vector-find" "string")}
      {Lisp-Entry "tm:locale-abbr-month->index" define #f 1032 9 1032 36 ("string=?" "tm:locale-abbr-month-vector" "tm:vector-find" "string")}
      {Lisp-Entry "tm:locale-long-month->index" define #f 1035 9 1035 36 ("string=?" "tm:locale-long-month-vector" "tm:vector-find" "string")}
      {Lisp-Entry "tm:locale-print-time-zone" define #f 1043 9 1043 34 ("values" "port" "date")}
      {Lisp-Entry "tm:locale-am/pm" define #f 1047 9 1047 24 ("tm:locale-am" "tm:locale-pm" "11" ">" "if" "hr")}
      {Lisp-Entry "tm:tz-printer" define #f 1050 9 1050 22 ("2" "tm:padding" "remainder" "minutes" "60" "*" "quotient" "abs" "hours" "let" "not" "if" "else" "negative?" "display" "0" "=" "cond" "port" "offset")}
      {Lisp-Entry "tm:directives" define #f 1066 8 1066 21 ("tm:locale-print-time-zone" "date-zone-offset" "tm:tz-printer" "date-year" "tm:last-n-digits" "tm:locale-time-format" "tm:locale-short-date-format" "date-week-number" "0" "tm:days-before-first-week" "9" "integer->char" "date->time-utc" "time-second" "tm:locale-am/pm" "7" "newline" "date-minute" "3" "date-year-day" "-" "12" "hr" "let" "date-hour" "substring" "tm:locale-number-separator" "begin" "string-length" "le" "1.0" "/" "tm:fractional-part" "ns" "let*" "1" "date-second" "+" "tm:nano" "date-nanosecond" ">" "if" "2" "date-day" "tm:padding" "tm:locale-date-time-format" "date->string" "tm:locale-long-month" "date-month" "tm:locale-abbr-month" "tm:locale-long-weekday" "date-week-day" "tm:locale-abbr-weekday" "display" "port" "pad-with" "date" "lambda" "cons" "list")}
      {Lisp-Entry "tm:get-formatter" define #f 1218 9 1218 25 ("cdr" "if" "tm:directives" "assoc" "associated" "let" "char")}
      {Lisp-Entry "tm:date-printer" define #f 1222 9 1222 24 ("else" "3" "tm:get-formatter" "formatter" "2" "cond" "pad-char?" "bad-date-format-string" "'bad-date-format-string" "'tm:date-printer" "tm:time-error" "=" "1" "+" "tm:date-printer" "display" "begin" "char=?" "not" "string-ref" "current-char" "let" "values" ">=" "if" "port" "str-len" "format-string" "index" "date")}
      {Lisp-Entry "date->string" define #f 1278 9 1278 21 ("get-output-string" "string-length" "0" "tm:date-printer" ":optional" "fmt-str" "open-output-string" "str-port" "let" "format-string" "date")}
      {Lisp-Entry "tm:char->int" define #f 1284 9 1284 21 ("list" "bad-date-template-string" "'bad-date-template-string" "string->date" "'string->date" "tm:time-error" "else" "9" "8" "7" "6" "5" "4" "3" "2" "1" "0" "char=?" "cond" "ch")}
      {Lisp-Entry "tm:integer-reader" define #f 1300 9 1300 26 ("0" "1" "read-char" "tm:char->int" "10" "*" "+" ">=" "and" "char-numeric?" "not" "eof-object?" "or" "if" "peek-char" "ch" "let" "nchars" "accum" "accum-int" "define" "port" "upto")}
      {Lisp-Entry "tm:make-integer-reader" define #f 1312 9 1312 31 ("tm:integer-reader" "port" "lambda" "upto")}
      {Lisp-Entry "tm:integer-reader-exact" define #f 1317 9 1317 32 ("0" "else" "1" "read-char" "tm:char->int" "10" "*" "+" "set!" "char-numeric?" "bad-date-template-string" "'bad-date-template-string" "string->date" "'string->date" "tm:time-error" "eof-object?" ">=" "cond" "peek-char" "ch" "nchars" "accum" "accum-int" "define" "padding-ok" "let" "port" "n")}
      {Lisp-Entry "tm:make-integer-exact-reader" define #f 1340 9 1340 37 ("tm:integer-reader-exact" "port" "lambda" "n")}
      {Lisp-Entry "tm:zone-reader" define #f 1344 9 1344 23 ("-" "+" "60" "10" "tm:char->int" "*" "else" "set!" "cond" "begin" "char=?" "or" "list" "bad-date-template-string" "'bad-date-template-string" "string->date" "'string->date" "tm:time-error" "eof-object?" "if" "read-char" "ch" "positive?" "0" "offset" "let" "port")}
      {Lisp-Entry "tm:locale-reader" define #f 1387 9 1387 25 ("list" "bad-date-template-string" "'bad-date-template-string" "string->date" "'string->date" "tm:time-error" "index" "str" "let*" "get-output-string" "read-char" "write-char" "begin" "char-alphabetic?" "if" "peek-char" "ch" "read-char-string" "define" "open-output-string" "string-port" "let" "indexer" "port")}
      {Lisp-Entry "tm:make-locale-reader" define #f 1401 9 1401 30 ("tm:locale-reader" "port" "lambda" "indexer")}
      {Lisp-Entry "tm:make-char-id-reader" define #f 1405 9 1405 31 ("bad-date-template-string" "'bad-date-template-string" "string->date" "'string->date" "tm:time-error" "read-char" "char=?" "if" "port" "lambda" "char")}
      {Lisp-Entry "tm:read-directives" define #f 1425 8 1425 26 ("tm:set-date-zone-offset!" "tm:zone-reader" "char=?" "or" "c" "tm:natural-year" "tm:set-date-year!" "tm:set-date-second!" "tm:set-date-minute!" "tm:set-date-hour!" "tm:set-date-day!" "char-numeric?" "tm:set-date-month!" "char-alphabetic?" "tm:make-char-id-reader" "list" "values" "object" "val" "do-nothing" "ch" "lambda" "char-fail" "tm:locale-long-month->index" "locale-reader-long-month" "tm:locale-abbr-month->index" "locale-reader-abbr-month" "tm:locale-long-weekday->index" "locale-reader-long-weekday" "tm:locale-abbr-weekday->index" "tm:make-locale-reader" "locale-reader-abbr-weekday" "eireader4" "tm:make-integer-exact-reader" "eireader2" "ireaderf" "2" "ireader2" "4" "tm:make-integer-reader" "ireader4" "let")}
      {Lisp-Entry "tm:string->date" define #f 1486 9 1486 24 ("2" "val" "cadddr" "actor" "caddr" "reader" "cadr" "tm:read-directives" "assoc" "format-info" "format-char" "let*" ">" "1" "+" "tm:string->date" "or" "port-char" "char=?" "string-ref" "current-char" "values" ">=" "read-char" "begin" "not" "bad-date-format-string" "'bad-date-format-string" "string->date" "'string->date" "tm:time-error" "eof-object?" "if" "peek-char" "ch" "let" "skipper" "skip-until" "define" "template-string" "port" "str-len" "format-string" "index" "date")}
      {Lisp-Entry "string->date" define #f 1521 9 1521 21 ("list" "bad-date-format-string" "'bad-date-format-string" "string->date" "'string->date" "tm:time-error" "if" "open-input-string" "string-length" "tm:string->date" "tm:local-tz-offset" "0" "make-date" "newdate" "let" "date-zone-offset" "date-year" "date-month" "date-day" "date-hour" "date-minute" "date-second" "date-nanosecond" "and" "date" "tm:date-ok?" "define" "template-string" "input-string")}}})
"tests"
 ({Lisp-File-Entry {File Jazz "lib" "srfi-19" "src" "time" "tests.scm"} 1288732035
    {Lisp-Entry "time.tests" unit #f 2 6 2 16 ("run-s19-tests" "newline" "date->time-tai" "-18000" "2003" "cd" "1045944891" "ct-tai" "1045944859" "6320000" "ct-utc" "date->time-utc" "-" "1999" "60" "1998" "59" "58" "make-date" "+" "time-tai->date" "tm:date=" "1045789645" "63072000" "10" "78796800" "11" "94694400" "12" "126230400" "13" "157766400" "14" "189302400" "15" "220924800" "16" "252460800" "17" "283996800" "18" "315532800" "19" "362793600" "20" "394329600" "21" "425865600" "22" "489024000" "23" "567993600" "24" "631152000" "25" "662688000" "26" "709948800" "27" "741484800" "28" "773020800" "29" "820454400" "30" "867715200" "31" "32" "915148800" "test-one-utc-tai-edge" "time-difference" "-2000" "t4" "2000" "time-duration" "'time-duration" "1000" "3000" "time<=?" "time>=?" "time<?" "time>?" "time=?" "and" "t13" "t12" "1001" "t11" "2" "t3" "t2" "1" "0" "make-time" "t1" "let" "time-resolution" "time-process" "'time-process" "time-thread" "'time-thread" "time-monotonic" "'time-monotonic" "time-utc" "'time-utc" "time-tai" "'time-tai" "tm:current-time" "null?" "not" "lambda" "define-s19-test!" "list" "s19-tests" "set!")
      {Lisp-Entry "s19-tests" define #f 6 8 6 17 ("list")}
      {Lisp-Entry "define-s19-test!" define #f 8 9 8 25 ("cons" "list" "append" "set!" "set-cdr!" "s19-tests" "assoc" "pr" "string->symbol" "symbol?" "if" "let" "thunk" "name")}
      {Lisp-Entry "run-s19-test" define #f 15 9 15 21 ("newline" "not" "result" "let" "display" "begin" "if" "verbose" "thunk" "name")}
      {Lisp-Entry "run-s19-tests" define #f 21 9 21 22 ("values" "newline" "/" ">" "display" "begin" "s19-tests" "car" "run-s19-test" "1" "+" "set!" "pr" "lambda" "for-each" "cdr" "if" "bads" "goods" "0" "runs" "let" "verbose")}
      {Lisp-Entry "test-one-utc-tai-edge" define #f 99 9 99 30 ("time=?" "and" "tai->utc-basic+2" "utc->tai-basic+2" "tai-basic+2" "utc-basic+2" "2" "9" "10" "expt" "/" "hs" "60" "24" "15" "*" "shy" "tai->utc-basic+1" "utc->tai-basic+1" "tai-basic+1" "utc-basic+1" "tai->utc-basic-1" "utc->tai-basic-1" "tai-basic-1" "1" "-" "utc-basic-1" "time-tai->time-utc" "tai->utc-basic" "time-utc->time-tai" "utc->tai-basic" "+" "time-tai" "'time-tai" "tai-basic" "0" "time-utc" "'time-utc" "make-time" "utc-basic" "let*" "tai-last-diff" "tai-diff" "utc")}
      {Lisp-Entry "tm:date=" define #f 165 9 165 17 ("date-zone-offset" "date-nanosecond" "date-second" "date-hour" "date-day" "date-month" "date-year" "=" "and" "d2" "d1")}}})
