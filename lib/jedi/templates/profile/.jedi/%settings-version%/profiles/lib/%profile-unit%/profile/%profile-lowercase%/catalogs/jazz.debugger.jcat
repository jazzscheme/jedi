"Break-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "break" "Break-Event.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.break.Break-Event" module #f 37 18 37 49 ("jazz")
      {Lisp-Entry "Break-Event" class #f 43 7 43 18 ("Event")}}})
"Computer-Snapshot"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "snapshot" "Computer-Snapshot.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.snapshot.Computer-Snapshot" module #f 37 18 37 58 ("jazz")
      {Lisp-Entry "Computer-Snapshot" class #f 43 7 43 24 ("initialize" "Component")
        {Lisp-Entry "user-name" property #f 46 12 46 21 ()}
        {Lisp-Entry "get-user-name" accessor #f 46 52 46 60 ()}
        {Lisp-Entry "set-user-name" accessor #f 46 52 46 60 ()}
        {Lisp-Entry "computer-name" property #f 47 12 47 25 ()}
        {Lisp-Entry "get-computer-name" accessor #f 47 52 47 60 ()}
        {Lisp-Entry "set-computer-name" accessor #f 47 52 47 60 ()}
        {Lisp-Entry "processor-type" property #f 48 12 48 26 ()}
        {Lisp-Entry "get-processor-type" accessor #f 48 52 48 60 ()}
        {Lisp-Entry "set-processor-type" accessor #f 48 52 48 60 ()}
        {Lisp-Entry "windows-version" property #f 49 12 49 27 ()}
        {Lisp-Entry "get-windows-version" accessor #f 49 52 49 60 ()}
        {Lisp-Entry "set-windows-version" accessor #f 49 52 49 60 ()}
        {Lisp-Entry "construct-literal" method #f 53 16 53 33 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "print" method #f 57 20 57 25 ("windows-version" "windows-version:" "processor-type" "processor-type:" "computer-name" "computer-name:" "user-name" "user-name:" "list" "self" "class-of" "category-name" "format" "readably" "printer")}}}})
"Debug-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "preference" "Debug-Preferences.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.preference.Debug-Preferences" module #f 37 18 37 60 ("jazz")
      {Lisp-Entry "Debug-Preferences" class #f 46 7 46 24 ("title:" "initialize" "Preferences")
        {Lisp-Entry "debug-depot?" property #f 49 12 49 24 ()}
        {Lisp-Entry "get-debug-depot?" accessor #f 49 49 49 57 ()}
        {Lisp-Entry "set-debug-depot?" accessor #f 49 49 49 57 ()}
        {Lisp-Entry "get-class-descriptor" method #f 61 25 61 45 ("Debug-Preferences-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 70 11 70 17 ()
        {Lisp-Entry "Debug-Preferences-Descriptor" class #f 76 7 76 35 ("domain" "debug-depot?" "name:" "can-copy?:" "can-move?:" "can-delete?:" "can-rename?:" "Preferences-Descriptor")}}}})
"Debugged"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "debugged" "Debugged.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.debugged.Debugged" module #f 37 18 37 49 ("jazz")
      {Lisp-Entry "Debugged" class #f 43 7 43 15 ("Object")
        {Lisp-Entry "debugger" slot #f 46 8 46 16 ()}
        {Lisp-Entry "get-debugger" accessor #f 46 25 46 33 ()}
        {Lisp-Entry "process" slot #f 47 8 47 15 ()}
        {Lisp-Entry "get-process" accessor #f 47 25 47 33 ()}
        {Lisp-Entry "reference" slot #f 48 8 48 17 ()}
        {Lisp-Entry "get-reference" accessor #f 48 25 48 33 ()}
        {Lisp-Entry "initialize" method #f 51 20 51 30 ("reference~self" "process~self" "debugger~self" "set!" "nextmethod" "reference" "process" "debugger")}
        {Lisp-Entry "hash-object" method #f 58 20 58 31 ("self" "debugged-hash")}
        {Lisp-Entry "print" method #f 62 20 62 25 ("reference" "format" "lambda" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "shared-process?" method #f 73 18 73 33 ("get-process" "process" "debugger" "process=?" "Debugged" "is?" "and" "debugged")}
        {Lisp-Entry "same?" method #f 78 26 78 31 ("debugged")}}}})
"Debugged-Frame"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "debugged" "Debugged-Frame.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.debugged.Debugged-Frame" module #f 37 18 37 55 ("jazz")
      {Lisp-Entry "Debugged-Frame" class #f 43 7 43 21 ("Debugged")
        {Lisp-Entry "same?" method #f 51 20 51 25 ("get-reference" "reference" "debugger" "frame=?" "Debugged-Frame" "is?" "and" "debugged")}
        {Lisp-Entry "get-name" method #f 61 18 61 26 ("reference" "process" "debugger" "frame-name")}
        {Lisp-Entry "get-interpreted?" method #f 65 18 65 34 ("reference" "process" "debugger" "frame-interpreted?")}
        {Lisp-Entry "get-location" method #f 69 18 69 30 ("reference" "process" "debugger" "frame-location")}
        {Lisp-Entry "get-variables" method #f 73 18 73 31 ("reference" "process" "debugger" "frame-variables" "kind")}}}})
"Debugged-Process"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "debugged" "Debugged-Process.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.debugged.Debugged-Process" module #f 37 18 37 57 ("jazz")
      {Lisp-Entry "Debugged-Process" class #f 44 7 44 23 ("initialize" "Debugged")
        {Lisp-Entry "alive?" slot #f 47 8 47 14 ()}
        {Lisp-Entry "get-alive?" accessor #f 47 39 47 47 ()}
        {Lisp-Entry "set-alive?" accessor #f 47 39 47 47 ()}
        {Lisp-Entry "same?" method #f 55 20 55 25 ("get-reference" "reference" "debugger" "process=?" "Debugged-Process" "is?" "and" "debugged")}
        {Lisp-Entry "live?" method #f 65 18 65 23 ("reference" "debugger" "process-live?")}
        {Lisp-Entry "get-title" method #f 69 18 69 27 ("reference" "debugger" "process-title" "or")}
        {Lisp-Entry "get-icon" method #f 74 18 74 26 ("reference" "debugger" "process-icon" "or" "Image-Resource" "new")}
        {Lisp-Entry "get-threads" method #f 80 18 80 29 ("reference" "process-threads" "process" "debugger" "Debugged-Thread" "new" "thread" "lambda" "map")}
        {Lisp-Entry "present" method #f 86 18 86 25 ("reference" "debugger" "present-process")}
        {Lisp-Entry "reload-process" method #f 90 18 90 32 ("reference" "debugger" "reload-process")}
        {Lisp-Entry "focusable?" method #f 94 18 94 28 ("reference" "debugger" "process-focusable?")}
        {Lisp-Entry "restart-stop" method #f 98 18 98 30 ("get-reference" "reference" "debugger" "restart-stop" "restart")}
        {Lisp-Entry "break-thread" method #f 102 18 102 30 ("get-reference" "reference" "debugger" "break-thread" "thread")}
        {Lisp-Entry "continue-stop" method #f 106 18 106 31 ("get-reference" "reference" "debugger" "continue-stop" "stop")}
        {Lisp-Entry "step-stop" method #f 110 18 110 27 ("get-reference" "reference" "debugger" "step-stop" "command" "stop")}
        {Lisp-Entry "evaluate-expressions" method #f 114 18 114 38 ("reference" "debugger" "evaluate-expressions" "col" "line" "container" "str" "syntax")}
        {Lisp-Entry "profiler-start" method #f 118 18 118 32 ("reference" "debugger" "profiler-start" "name")}
        {Lisp-Entry "profiler-stop" method #f 122 18 122 31 ("reference" "debugger" "profiler-stop" "name")}
        {Lisp-Entry "profiler-profiles" method #f 126 18 126 35 ("reference" "debugger" "profiler-profiles")}
        {Lisp-Entry "profiler-profile" method #f 130 18 130 34 ("reference" "debugger" "profiler-profile" "name")}
        {Lisp-Entry "profile-reset" method #f 134 18 134 31 ("reference" "debugger" "profile-reset" "depth" "profiler" "name")}
        {Lisp-Entry "inspect-serial" method #f 138 18 138 32 ("reference" "debugger" "inspect-serial" "serial")}
        {Lisp-Entry "exit" method #f 142 18 142 22 ("detach-process" "reference" "debugger" "process-exit" "alive?" "if")}}}})
"Debugged-Restart"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "debugged" "Debugged-Restart.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.debugged.Debugged-Restart" module #f 37 18 37 57 ("jazz")
      {Lisp-Entry "Debugged-Restart" class #f 43 7 43 23 ("Debugged")
        {Lisp-Entry "same?" method #f 51 20 51 25 ("get-reference" "reference" "debugger" "restart=?" "Debugged-Restart" "is?" "and" "debugged")}
        {Lisp-Entry "get-name" method #f 61 18 61 26 ("reference" "process" "debugger" "restart-name")}
        {Lisp-Entry "get-message" method #f 65 18 65 29 ("reference" "process" "debugger" "restart-message")}}}})
"Debugged-Stop"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "debugged" "Debugged-Stop.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.debugged.Debugged-Stop" module #f 37 18 37 54 ("jazz")
      {Lisp-Entry "Debugged-Stop" class #f 43 7 43 20 ("Debugged")
        {Lisp-Entry "same?" method #f 51 20 51 25 ("get-reference" "reference" "debugger" "stop=?" "Debugged-Stop" "is?" "and" "debugged")}
        {Lisp-Entry "get-kind" method #f 61 18 61 26 ("reference" "process" "debugger" "stop-kind")}
        {Lisp-Entry "get-reason" method #f 65 18 65 28 ("reference" "process" "debugger" "stop-reason")}
        {Lisp-Entry "get-detail" method #f 69 18 69 28 ("reference" "process" "debugger" "stop-detail")}
        {Lisp-Entry "get-location" method #f 73 18 73 30 ("reference" "process" "debugger" "stop-location")}
        {Lisp-Entry "get-restarts" method #f 77 18 77 30 ("reference" "stop-restarts" "process" "debugger" "Debugged-Restart" "new" "restart" "lambda" "map")}
        {Lisp-Entry "get-frames" method #f 83 18 83 28 ("reference" "stop-frames" "process" "debugger" "Debugged-Frame" "new" "frame" "lambda" "map")}}}})
"Debugged-Thread"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "debugged" "Debugged-Thread.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.debugged.Debugged-Thread" module #f 37 18 37 56 ("jazz")
      {Lisp-Entry "Debugged-Thread" class #f 43 7 43 22 ("Debugged")
        {Lisp-Entry "same?" method #f 51 20 51 25 ("get-reference" "reference" "debugger" "thread=?" "Debugged-Thread" "is?" "and" "debugged")}
        {Lisp-Entry "get-name" method #f 61 18 61 26 ("reference" "process" "debugger" "thread-name")}
        {Lisp-Entry "get-state" method #f 65 18 65 27 ("reference" "process" "debugger" "thread-state")}
        {Lisp-Entry "get-stops" method #f 69 18 69 27 ("reference" "thread-stops" "process" "debugger" "Debugged-Stop" "new" "stop" "lambda" "map")}
        {Lisp-Entry "get-active-stop" method #f 75 18 75 33 ("Debugged-Stop" "new" "when" "reference" "process" "debugger" "thread-active-stop" "stop" "let")}
        {Lisp-Entry "set-repl-frame" method #f 81 18 81 32 ("reference" "process" "debugger" "set-repl-frame" "frame")}}}})
"Debugger"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "debugger" "Debugger.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.debugger.Debugger" module #f 37 18 37 49 ("jazz")
      {Lisp-Entry "Debugger" class #f 43 7 43 15 ("Object")
        {Lisp-Entry "start-debugger" method #f 51 26 51 40 ()}
        {Lisp-Entry "stop-debugger" method #f 52 26 52 39 ()}
        {Lisp-Entry "get-processes" method #f 53 26 53 39 ("rest")}
        {Lisp-Entry "validate-processes" method #f 54 26 54 44 ()}
        {Lisp-Entry "detach-processes" method #f 55 26 55 42 ()}
        {Lisp-Entry "process=?" method #f 63 26 63 35 ("y-process" "x-process")}
        {Lisp-Entry "process-live?" method #f 64 26 64 39 ("process")}
        {Lisp-Entry "process-title" method #f 65 26 65 39 ("process")}
        {Lisp-Entry "process-icon" method #f 66 26 66 38 ("process")}
        {Lisp-Entry "process-threads" method #f 67 26 67 41 ("process")}
        {Lisp-Entry "present-process" method #f 68 26 68 41 ("process")}
        {Lisp-Entry "reload-process" method #f 69 26 69 40 ("process")}
        {Lisp-Entry "process-focusable?" method #f 70 26 70 44 ("process")}
        {Lisp-Entry "evaluate-expressions" method #f 71 26 71 46 ("col" "line" "container" "str" "syntax" "process")}
        {Lisp-Entry "profiler-start" method #f 72 26 72 40 ("name" "process")}
        {Lisp-Entry "profiler-stop" method #f 73 26 73 39 ("name" "process")}
        {Lisp-Entry "profiler-profiles" method #f 74 26 74 43 ("process")}
        {Lisp-Entry "profiler-profile" method #f 75 26 75 42 ("name" "process")}
        {Lisp-Entry "profile-reset" method #f 76 26 76 39 ("depth" "profiler" "name" "process")}
        {Lisp-Entry "inspect-serial" method #f 77 26 77 40 ("serial" "process")}
        {Lisp-Entry "process-detach" method #f 78 26 78 40 ("process")}
        {Lisp-Entry "process-exit" method #f 79 26 79 38 ("process")}
        {Lisp-Entry "thread=?" method #f 87 26 87 34 ("y-thread" "x-thread")}
        {Lisp-Entry "thread-name" method #f 88 26 88 37 ("thread" "process")}
        {Lisp-Entry "thread-state" method #f 89 26 89 38 ("thread" "process")}
        {Lisp-Entry "thread-stops" method #f 90 26 90 38 ("thread" "process")}
        {Lisp-Entry "thread-active-stop" method #f 91 26 91 44 ("thread" "process")}
        {Lisp-Entry "break-thread" method #f 92 26 92 38 ("thread" "process")}
        {Lisp-Entry "set-repl-frame" method #f 93 26 93 40 ("frame" "thread" "process")}
        {Lisp-Entry "restart=?" method #f 101 26 101 35 ("y-restart" "x-restart")}
        {Lisp-Entry "restart-name" method #f 102 26 102 38 ("restart" "process")}
        {Lisp-Entry "restart-message" method #f 103 26 103 41 ("restart" "process")}
        {Lisp-Entry "restart-stop" method #f 104 26 104 38 ("restart" "process")}
        {Lisp-Entry "stop=?" method #f 112 26 112 32 ("y-stop" "x-stop")}
        {Lisp-Entry "stop-kind" method #f 113 26 113 35 ("stop" "process")}
        {Lisp-Entry "stop-reason" method #f 114 26 114 37 ("stop" "process")}
        {Lisp-Entry "stop-detail" method #f 115 26 115 37 ("stop" "process")}
        {Lisp-Entry "stop-location" method #f 116 26 116 39 ("stop" "process")}
        {Lisp-Entry "stop-restarts" method #f 117 26 117 39 ("stop" "process")}
        {Lisp-Entry "stop-frames" method #f 118 26 118 37 ("stop" "process")}
        {Lisp-Entry "continue-stop" method #f 119 26 119 39 ("stop" "process")}
        {Lisp-Entry "step-stop" method #f 120 26 120 35 ("command" "stop" "process")}
        {Lisp-Entry "frame=?" method #f 128 26 128 33 ("y-frame" "x-frame")}
        {Lisp-Entry "frame-name" method #f 129 26 129 36 ("frame" "process")}
        {Lisp-Entry "frame-interpreted?" method #f 130 26 130 44 ("frame" "process")}
        {Lisp-Entry "frame-location" method #f 131 26 131 40 ("frame" "process")}
        {Lisp-Entry "frame-variables" method #f 132 26 132 41 ("kind" "frame" "process")}
        {Lisp-Entry "frame-variable-name" method #f 133 26 133 45 ("variable" "frame" "process")}
        {Lisp-Entry "frame-variable-value" method #f 134 26 134 46 ("variable" "frame" "process")}}}})
"Debugger-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "debugger" "Debugger-Event.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.debugger.Debugger-Event" module #f 37 18 37 55 ("jazz")
      {Lisp-Entry "Debugger-Event" class #f 40 7 40 21 ("Object")}}})
"Debugger-Listener"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "debugger" "Debugger-Listener.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.debugger.Debugger-Listener" module #f 37 18 37 58 ("jazz")
      {Lisp-Entry "Debugger-Listener" interface #f 40 11 40 28 ()
        {Lisp-Entry "display-output" method #f 43 35 43 49 ("string")}
        {Lisp-Entry "newline-output" method #f 44 35 44 49 ()}
        {Lisp-Entry "debug-output" method #f 45 35 45 47 ("output")}}}})
"Debugger-Manager"
 ({Lisp-File-Entry {File jazz.debugger "src" "jazz" "debugger" "debugger" "Debugger-Manager.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.debugger.Debugger-Manager" module #f 37 18 37 57 ("jazz")
      {Lisp-Entry "stopped-frame-color" constant #f 50 10 50 29 ("Dark-Red" "name:" "Color")}
      {Lisp-Entry "visited-highlight-color" constant #f 51 10 51 33 ("blue:" "205" "green:" "255" "red:" "Color")}
      {Lisp-Entry "Debugger-Manager" class #f 54 7 54 23 ("debugged-hash" "hash:" "debugged=?" "test:" "make-table" "initialize" "Object")
        {Lisp-Entry "active-stops" slot #f 57 8 57 20 ()}
        {Lisp-Entry "unvisited-stops" slot #f 58 8 58 23 ()}
        {Lisp-Entry "focused-process" slot #f 59 8 59 23 ()}
        {Lisp-Entry "get-focused-process" accessor #f 59 45 59 53 ()}
        {Lisp-Entry "process" slot #f 61 8 61 15 ()}
        {Lisp-Entry "get-process" accessor #f 61 45 61 53 ()}
        {Lisp-Entry "thread" slot #f 62 8 62 14 ()}
        {Lisp-Entry "get-thread" accessor #f 62 45 62 53 ()}
        {Lisp-Entry "frame" slot #f 63 8 63 13 ()}
        {Lisp-Entry "get-frame" accessor #f 63 45 63 53 ()}
        {Lisp-Entry "debugging?" method #f 66 18 66 28 ("active-stops" "table-length" "0" "/=")}
        {Lisp-Entry "visit-debugged" method #f 75 18 75 32 ("update-status" "unvisited-stops" "table-set!" "debugged-visited?" "unless" "debugged")}
        {Lisp-Entry "update-status" method #f 82 18 82 31 ("notify" "active-stops" "stopped?" "0" "unvisited-stops" "table-length" ">" "visited?" "debugger" "'debugger" "find-component" "button" "when" "get-application" "find-toolbar" "toolbar" "let")}
        {Lisp-Entry "get-stopped-frame-color" method #f 92 18 92 41 ("stopped-frame-color" "debugged-stopped?" "when" "debugged")}
        {Lisp-Entry "get-visited-highlight-color" method #f 97 18 97 45 ("visited-highlight-color" "debugged-visited?" "unless" "debugged")}
        {Lisp-Entry "debugged-stopped?" method #f 102 11 102 28 ("active-stops" "table-ref" "not-null?" "debugged")}
        {Lisp-Entry "debugged-visited?" method #f 106 11 106 28 ("unvisited-stops" "table-ref" "not" "debugged")}
        {Lisp-Entry "get-active-stops" method #f 110 18 110 34 ("active-stops" "table-ref" "debugged")}
        {Lisp-Entry "require-focused-process" method #f 119 18 119 41 ("throw-cancel" "message-box" "begin" "get-focused-process" "or")}
        {Lisp-Entry "focus-process" method #f 126 18 126 31 ("update" "get-processes-view" "when" "set-focus-process" "focused-process" "debugged=?" "unless" "process")}
        {Lisp-Entry "set-focus-process" method #f 133 11 133 28 ("update-focused-process" "when" "get-application" "find-status-bar" "focus-status-view" "let" "focused-process" "set!" "process")}
        {Lisp-Entry "attach-process" method #f 145 18 145 32 ("update" "get-processes-view" "set-focus-process" "focusable?" "and" "when" "focus?" "process")}
        {Lisp-Entry "detach-process" method #f 152 18 152 32 ("update-status" "process-changed" "selected-process" "update" "get-processes-view" "view" "unvisited-stops" "active-stops" "close-process-debugger-resources" "set-focus-process" "unless" "let" "focused-process" "table-keys" "table-clear" "shared-process?" "key" "for-each" "table" "cleanup-stops" "continuation-return" "debugged=?" "not" "focusable?" "and" "when" "focused?" "live?" "debugged-process" "debugger" "for-each-process" "return" "lambda" "continuation-capture" "best-process" "define" "process")}
        {Lisp-Entry "for-each-process" method #f 185 18 185 34 ("get-debuggers" "get-processes" "focused-process" "debugged=?" "focused?" "live?" "Debugged-Process" "new" "debugged-process" "let" "process" "debugger" "lambda" "for-each" "proc")}
        {Lisp-Entry "process-changed" method #f 196 18 196 33 ("thread-changed" "selected-thread" "process-changed" "get-threads-view" "view" "update-processes-highlight" "visit-debugged" "set!" "update" "get-processes-view" "exc" "Cancel-Signal" "catch" "process" "debugged=?" "unless" "get-alive?" "and" "when" "let" "new-process")}
        {Lisp-Entry "update-processes-highlight" definition #f 212 15 212 41 ("update-highlight" "get-processes-view" "when" "process")}
        {Lisp-Entry "for-each-thread" method #f 222 18 222 33 ("get-threads" "with-jrm-exception-handler" "get-active-stop" "stop" "not" "lambda" "for-each" "get-debugger" "debugger" "process" "when" "symbol->string" "starts-with?" "symbol?" "and" "memq?" "or" "get-name" "name" "let" "thread" "system-thread?" "hovering" "caret" "autoscroll" "autorepeat" "catalog" "remote-connection" "remote-listener" "debugger-console-pump" "debuggee-console-pump" "message-pump" "system-threads" "define" "detailed?" "detailed?:" "proc")}
        {Lisp-Entry "thread-changed" method #f 252 18 252 32 ("get-exception-view" "get-restarts-view" "thread-changed" "get-frames-view" "update-threads-highlight" "visit-debugged" "view-visible?" "get-threads-view" "and" "when" "set!" "thread" "debugged=?" "unless" "new-thread")}
        {Lisp-Entry "update-threads-highlight" definition #f 266 15 266 39 ("update-highlight" "get-threads-view" "when" "thread")}
        {Lisp-Entry "for-each-frame" method #f 276 18 276 32 ("for-each" "get-active-stop" "let" "thread" "process" "and" "when" "get-frames" "lambda" "with-jrm-exception-handler" "stop" "frames" "define" "proc")}
        {Lisp-Entry "frame-changed" method #f 288 18 288 31 ("get-reference" "set-repl-frame" "lambda" "with-jrm-exception-handler" "get-active-stop" "thread" "edit-frame" "frame-changed" "get-variables-view" "view-visible?" "not" "or" "get-frames-view" "and" "when" "frame" "set!" "user-origin?" "user-origin?:" "new-frame")}
        {Lisp-Entry "*frame-indicator*" definition #f 301 14 301 31 ("Light-Green" "name:" "Color" "color:" "Frame-Indicator" "new")}
        {Lisp-Entry "edit-frame" method #f 305 18 305 28 ("*frame-indicator*" "edit" "get-location" "and" "location" "let" "select?" "select?:" "frame")}
        {Lisp-Entry "register-stop" method #f 315 18 315 31 ("error-sound" "unless" "unvisited-stops" "table-set!" "add-unvisited-stops" "active-stops" "table-add" "debugged" "add-active-stop" "update-status" "get-exception-view" "get-restarts-view" "get-frames-view" "update-others" "update-threads-highlight" "visit-debugged" "view-visible?" "and" "thread-changed" "set-selected-thread" "get-threads-view" "thread~self" "debugged=?" "update-thread" "update-processes-highlight" "process-changed" "set-selected-process" "if" "when" "get-processes-view" "view" "process~self" "not" "empty?" "let" "update-process" "define" "step?" "step?:" "stop" "thread" "process")}
        {Lisp-Entry "unregister-stop" method #f 366 18 366 33 ("process~self" "process-changed" "get-threads-view" "view" "update-processes-highlight" "lambda" "some?" "unvisited-stops" "and" "unless" "remove-unvisited-stops" "table-set!" "not-null?" "if" "test:" "active-stops" "table-ref" "remove!" "stops" "let" "debugged" "remove-active-stop" "update-status" "get-exception-view" "get-restarts-view" "thread-changed" "get-frames-view" "thread~self" "debugged=?" "when" "update-others" "define" "stop" "thread" "process")}}}})
"Debugger-Resource"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "debugger" "Debugger-Resource.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.debugger.Debugger-Resource" module #f 37 18 37 58 ("jazz")
      {Lisp-Entry "Debugger-Resource" class #f 43 7 43 24 ("Object")
        {Lisp-Entry "process" slot #f 46 8 46 15 ()}
        {Lisp-Entry "get-process" accessor #f 46 25 46 33 ()}
        {Lisp-Entry "thread" slot #f 47 8 47 14 ()}
        {Lisp-Entry "get-thread" accessor #f 47 25 47 33 ()}
        {Lisp-Entry "reference" slot #f 48 8 48 17 ()}
        {Lisp-Entry "get-reference" accessor #f 48 25 48 33 ()}
        {Lisp-Entry "close" slot #f 49 8 49 13 ()}
        {Lisp-Entry "get-close" accessor #f 49 25 49 33 ()}
        {Lisp-Entry "closed?" slot #f 50 8 50 15 ()}
        {Lisp-Entry "get-closed?" accessor #f 50 25 50 33 ()}
        {Lisp-Entry "initialize" method #f 53 20 53 30 ("closed?~self" "close~self" "reference~self" "thread~self" "process~self" "set!" "nextmethod" "close" "reference" "thread" "process")}
        {Lisp-Entry "print" method #f 62 20 62 25 ("reference" "format" "lambda" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "close-resource" method #f 68 11 68 25 ("set!" "self" "process" "unregister-debugger-resource" "close" "closed?" "not" "when")}}}})
"Exception-Snapshot"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "snapshot" "Exception-Snapshot.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.snapshot.Exception-Snapshot" module #f 37 18 37 59 ("jazz")
      {Lisp-Entry "Exception-Snapshot" class #f 43 7 43 25 ("initialize" "Component")
        {Lisp-Entry "address" property #f 46 12 46 19 ()}
        {Lisp-Entry "get-address" accessor #f 46 48 46 56 ()}
        {Lisp-Entry "set-address" accessor #f 46 48 46 56 ()}
        {Lisp-Entry "code" property #f 47 12 47 16 ()}
        {Lisp-Entry "get-code" accessor #f 47 48 47 56 ()}
        {Lisp-Entry "set-code" accessor #f 47 48 47 56 ()}
        {Lisp-Entry "description" property #f 48 12 48 23 ()}
        {Lisp-Entry "get-description" accessor #f 48 48 48 56 ()}
        {Lisp-Entry "set-description" accessor #f 48 48 48 56 ()}
        {Lisp-Entry "construct-literal" method #f 52 16 52 33 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "print" method #f 56 20 56 25 ("description" "description:" "code" "code:" "address" "address:" "list" "self" "class-of" "category-name" "format" "readably" "printer")}}}})
"Exception-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "debugger" "Exception-View.jazz"} 1289506007
    {Lisp-Entry "jazz.debugger.debugger.Exception-View" module #f 37 18 37 55 ("jazz")
      {Lisp-Entry "Exception-View" class #f 49 7 49 21 ("on-edit-stop/detail" ":form" "Selection-Handler" "selection-handler:" "row" "selection-mode:" "multiple-selection?:" "detail" "shown?:" "header" "fill" "content" "tool" "style:" "vscroll?:" "center" "location:" "scroller" "tools" "name:" "border" "layout-type:" "initialize" "Layout-View")
        {Lisp-Entry "thread" property #f 52 12 52 18 ()}
        {Lisp-Entry "stop" slot #f 55 8 55 12 ()}
        {Lisp-Entry "external-name" method #f 68 25 68 38 ("exception-view" "'exception-view" "rest")}
        {Lisp-Entry "host-icon" method #f 77 25 77 34 ("Image-Resource")}
        {Lisp-Entry "host-title" method #f 81 25 81 35 ()}
        {Lisp-Entry "get-tools-view" method #f 90 20 90 34 ("tools" "'tools" "locate")}
        {Lisp-Entry "focus-default" method #f 94 20 94 33 ("acquire-focus" "detail" "'detail" "locate" "tree" "let")}
        {Lisp-Entry "get-thread" method #f 104 18 104 28 ("thread")}
        {Lisp-Entry "set-thread" method #f 108 18 108 28 ("update" "get-active-stop" "and" "stop" "thread" "set!" "value")}
        {Lisp-Entry "thread-changed" method #f 114 18 114 32 ("edit-stop/detail" "update" "get-active-stop" "and" "stop" "thread" "set!" "new-thread")}
        {Lisp-Entry "*indicators*" definition #f 126 14 126 26 ()}
        {Lisp-Entry "edit-stop/detail" method #f 130 11 130 27 ("null?" "Exception-Detail" "bell" "begin" "if" "Debugged-Stop" "is?" "not" "cond" "selected-data" "data" "queue-list" "get-children" "enqueue" "recurse" "new-queue" "queue" "detail-subdetails" "get-path" "locat->file/line/col" "info" "get-locat" "locat" "get-location" "collect" "detail" "detail-locations" "get-guest" "values" "Range$Cell$" "visible?:" "activate-focus?:" "get-application" "edit-document" "1" "+" "end" "Cell" "start" "list" "File" "new" "file" "let" "col" "line" "filename" "bind" "when" "get-default-style" "uninstall-indicators" "*indicators*" "set!" "set-visible?" "bring-to-front" "reset-tooltip" "ensure-cell-displayed" "get-end" "get-start" "Walk-Fatal" "'Walk-Fatal" "apply-style" "find-location" "range" "text" "frame" "receive" "location" "lambda" "for-each" "uninstall-active-indicators" "locations" "install-indicators" "define")}
        {Lisp-Entry "resize" method #f 216 20 216 26 ("scroller" "'scroller" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-edit-stop/detail" method #f 221 11 221 30 ("edit-stop/detail" "evt")}
        {Lisp-Entry "update" method #f 231 21 231 27 ("cdr" "empty-string?" "stop-row" "get-detail" "and" "when" "with-update-locked" "remove-every-row" "'detail" "locate" "with-system-exception-debugger" "get-children" "subdetail" "lambda" "for-each" "user-data:" "image:" "title:" "Tree-Node" "list" "children:" "expanded" "'expanded" "state:" "father:" "add-row" "row" "new" "image" "get-icon" "icon" "get-title" "title" "detail" "father" "tree" "insert-detail" "or" "stop-reason-lines" "else" "Image-Resource" "exception" "get-kind" "case" "stop-image" "split" "car" "line" "not" "if" "get-reason" "reason" "let" "stop" "stop-title" "define")}
        {Lisp-Entry "selected-data" method #f 283 11 283 24 ("selected-row" "get-father" "get-user-data" "or" "when" "row" "row-data" "define")}
        {Lisp-Entry "selected-row" method #f 292 11 292 23 ("get-row" "when" "get-single-selection" "n" "detail" "'detail" "locate" "tree" "let*")}}
      {Lisp-Entry "Detail-Tree" class #f 304 7 304 18 ("toplevel-controls?:" "431" "width:" "title:" ":images" "portfolio:" "Tree-View")}}})
"Frame-Indicator"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "debugger" "Frame-Indicator.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.debugger.Frame-Indicator" module #f 37 18 37 56 ("jazz")
      {Lisp-Entry "Frame-Indicator" class #f 45 7 45 22 ("initialize" "Object")
        {Lisp-Entry "color" slot #f 48 8 48 13 ()}
        {Lisp-Entry "location" slot #f 49 8 49 16 ()}
        {Lisp-Entry "initialize" method #f 52 20 52 30 ("color~self" "set!" "nextmethod" "color" "color:")}
        {Lisp-Entry "edit" method #f 62 18 62 22 ("get-guest" "values" "Range$Cell$" "visible?:" "activate-focus?:" "get-application" "edit-document" "1" "+" "end" "Cell" "tokenise-filename" "File" "new" "anchorize" "find-unit-source" "symbol?" "if" "file" "col" "line" "container" "bind" "uninstall-active-indicator" "unfill" "uninstall-indicator" "set-caret" "when" "focus-host" "reset-tooltip" "location" "set!" "ensure-cell-displayed" "color" "fill" "get-start" "start" "let" "find-location" "range" "text" "frame" "receive" "install-indicator" "define" "select?" "select?:" "loc")}}}})
"Frame-Snapshot"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "snapshot" "Frame-Snapshot.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.snapshot.Frame-Snapshot" module #f 37 18 37 55 ("jazz")
      {Lisp-Entry "Frame-Snapshot" class #f 43 7 43 21 ("Object")
        {Lisp-Entry "thread" slot #f 46 8 46 14 ()}
        {Lisp-Entry "get-thread" accessor #f 46 22 46 30 ()}
        {Lisp-Entry "parameters" slot #f 47 8 47 18 ()}
        {Lisp-Entry "initialize" method #f 50 20 50 30 ("parameters~self" "thread~self" "set!" "nextmethod" "parameters" "thread")}
        {Lisp-Entry "compare-object" method #f 56 20 56 34 (":not-equal" "else" ":equal" "present" "=" ":incompatible" "Frame-Snapshot" "is-not?" "cond" "target")}
        {Lisp-Entry "get-parameters" method #f 70 26 70 40 ("parameters")}
        {Lisp-Entry "present" method #f 79 26 79 33 ()}
        {Lisp-Entry "get-image" method #f 83 26 83 35 ()}
        {Lisp-Entry "edit" method #f 92 26 92 30 ()}}}})
"Frames-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "debugger" "Frames-View.jazz"} 1289506007
    {Lisp-Entry "jazz.debugger.debugger.Frames-View" module #f 37 18 37 52 ("jazz")
      {Lisp-Entry "Frames-View" class #f 49 7 49 18 ("on-return-press" "return-press-handler:" "on-double-click" "Event-Handler" "double-click-handler:" "on-select-frame" ":form" "Selection-Handler" "selection-handler:" "row" "selection-mode:" "multiple-selection?:" "frames" "shown?:" "header" "fill" "content" "tool" "style:" "vscroll?:" "center" "location:" "scroller" "tools" "name:" "border" "layout-type:" "initialize" "Layout-View")
        {Lisp-Entry "process" property #f 52 12 52 19 ()}
        {Lisp-Entry "get-process" accessor #f 52 44 52 52 ()}
        {Lisp-Entry "set-process" accessor #f 52 44 52 52 ()}
        {Lisp-Entry "thread" property #f 53 12 53 18 ()}
        {Lisp-Entry "external-name" method #f 66 25 66 38 ("frames-view" "'frames-view" "rest")}
        {Lisp-Entry "host-icon" method #f 75 25 75 34 ("Image-Resource")}
        {Lisp-Entry "host-title" method #f 79 25 79 35 ()}
        {Lisp-Entry "get-tools-view" method #f 88 20 88 34 ("tools" "'tools" "locate")}
        {Lisp-Entry "focus-default" method #f 92 20 92 33 ("acquire-focus" "frames" "'frames" "locate" "tree" "let")}
        {Lisp-Entry "get-thread" method #f 102 18 102 28 ("thread")}
        {Lisp-Entry "set-thread" method #f 106 18 106 28 ("update-frames" "thread" "set!" "value")}
        {Lisp-Entry "thread-changed" method #f 111 18 111 32 ("select-first-frame" "view-visible?" "when" "update-frames" "thread" "get-debugger-manager" "get-process" "process" "set!" "new-thread")}
        {Lisp-Entry "resize" method #f 124 20 124 26 ("scroller" "'scroller" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-select-frame" method #f 129 11 129 26 ("frames" "'frames" "locate" "acquire-focus" "when" "user-origin?:" "selected-frame" "get-debugger-manager" "frame-changed" "get-user-origin?" "user-origin?" "let" "evt")}
        {Lisp-Entry "on-double-click" method #f 138 11 138 26 ("select?:" "selected-frame" "get-debugger-manager" "edit-frame" "evt")}
        {Lisp-Entry "on-return-press" method #f 142 20 142 35 ("select?:" "selected-frame" "get-debugger-manager" "edit-frame" "evt")}
        {Lisp-Entry "update-frames" method #f 151 11 151 24 ("generate-event?:" "debugged=?" "test:" "data" "'data" "use:" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "image" "title" "get-debugger-manager" "for-each-frame" "with-update-locked" "remove-every-row" "with-preserved-selection" "frames" "'frames" "locate" "tree" "lambda" "with-system-exception-debugger" "Image-Resource" "get-interpreted?" "frame-image" "else" "present-identifier" "string-length" "1" "substring" "format" "0" "string-ref" "eqv?" "if" "symbol->string" "str" "symbol?" "not" "cond" "get-name" "name" "let" "frame" "frame-title" "define")}
        {Lisp-Entry "select-first-frame" method #f 192 18 192 36 ("force?:" "set-single-selection" "0" "get-visible-count" ">" "get-single-selection" "not" "and" "when" "frames" "'frames" "locate" "tree" "let")}
        {Lisp-Entry "selected-frame" method #f 199 18 199 32 ("get-user-data" "when" "selected-row" "row" "let")}
        {Lisp-Entry "selected-row" method #f 205 11 205 23 ("get-row" "when" "get-single-selection" "n" "frames" "'frames" "locate" "tree" "let*")}}
      {Lisp-Entry "Frames-Tree" class #f 217 7 217 18 ("toplevel-controls?:" "431" "width:" "title:" ":images" "portfolio:" "Tree-View")}}})
"Process-Snapshot"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "snapshot" "Process-Snapshot.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.snapshot.Process-Snapshot" module #f 37 18 37 57 ("jazz")
      {Lisp-Entry "Process-Snapshot" class #f 43 7 43 23 ("initialize" "Component")
        {Lisp-Entry "process" property #f 46 12 46 19 ()}
        {Lisp-Entry "get-process" accessor #f 46 49 46 57 ()}
        {Lisp-Entry "set-process" accessor #f 46 49 46 57 ()}
        {Lisp-Entry "date" property #f 47 12 47 16 ()}
        {Lisp-Entry "get-date" accessor #f 47 49 47 57 ()}
        {Lisp-Entry "set-date" accessor #f 47 49 47 57 ()}
        {Lisp-Entry "info" property #f 48 12 48 16 ()}
        {Lisp-Entry "get-info" accessor #f 48 49 48 57 ()}
        {Lisp-Entry "set-info" accessor #f 48 49 48 57 ()}
        {Lisp-Entry "computer" property #f 49 12 49 20 ()}
        {Lisp-Entry "get-computer" accessor #f 49 49 49 57 ()}
        {Lisp-Entry "set-computer" accessor #f 49 49 49 57 ()}
        {Lisp-Entry "exception" property #f 50 12 50 21 ()}
        {Lisp-Entry "get-exception" accessor #f 50 49 50 57 ()}
        {Lisp-Entry "set-exception" accessor #f 50 49 50 57 ()}
        {Lisp-Entry "memory" property #f 51 12 51 18 ()}
        {Lisp-Entry "get-memory" accessor #f 51 49 51 57 ()}
        {Lisp-Entry "set-memory" accessor #f 51 49 51 57 ()}
        {Lisp-Entry "collector" property #f 52 12 52 21 ()}
        {Lisp-Entry "get-collector" accessor #f 52 49 52 57 ()}
        {Lisp-Entry "set-collector" accessor #f 52 49 52 57 ()}
        {Lisp-Entry "threads" property #f 53 12 53 19 ()}
        {Lisp-Entry "get-threads" accessor #f 53 49 53 57 ()}
        {Lisp-Entry "set-threads" accessor #f 53 49 53 57 ()}
        {Lisp-Entry "construct-literal" method #f 57 16 57 33 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "print" method #f 61 20 61 25 ("threads" "threads:" "collector" "collector:" "memory" "memory:" "exception" "exception:" "computer" "computer:" "date" "date:" "process" "process:" "list" "self" "class-of" "category-name" "format" "readably" "printer")}}}})
"Processes-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "debugger" "Processes-View.jazz"} 1289844298
    {Lisp-Entry "jazz.debugger.debugger.Processes-View" module #f 37 18 37 55 ("jazz")
      {Lisp-Entry "Processes-View" class #f 51 7 51 21 ("on-double-click" "double-click-handler:" "on-context-menu" "context-menu-handler:" "on-select-process" ":form" "Selection-Handler" "selection-handler:" "row" "selection-mode:" "multiple-selection?:" "processes" "shown?:" "header" "fill" "content" "tool" "style:" "vscroll?:" "center" "scroller" "on-update" "update" "2" "on-focus" "tail" "location:" "enabled?:" "focus" "0" "6" "on-open-snapshot" ":guest" "Event-Handler" "action-handler:" ":images" "portfolio:" "Image-Resource" "resource:" "tooltip-text:" "tooltip?:" "22" "Dimension" "size:" "open" "tools" "name:" "border" "layout-type:" "Layout-View")
        {Lisp-Entry "external-name" method #f 69 25 69 38 ("processes-view" "'processes-view" "rest")}
        {Lisp-Entry "host-icon" method #f 78 25 78 34 ("Image-Resource")}
        {Lisp-Entry "host-title" method #f 82 25 82 35 ()}
        {Lisp-Entry "client-activate" method #f 86 20 86 35 ("update-highlight" "when" "selected-process" "let")}
        {Lisp-Entry "get-tools-view" method #f 97 20 97 34 ("tools" "'tools" "locate")}
        {Lisp-Entry "focus-default" method #f 101 20 101 33 ("acquire-focus" "processes" "'processes" "locate" "tree" "let")}
        {Lisp-Entry "install" method #f 111 20 111 27 ("update" "nextmethod" "rest")}
        {Lisp-Entry "resize" method #f 121 20 121 26 ("scroller" "'scroller" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-context-menu" method #f 126 11 126 26 ("track-popup-menu" "when" "selected-object" "new-context-menu" "menu" "let" "lambda" "with-context-click" "acquire" "acquired" "get-position" "pos" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-double-click" method #f 137 11 137 26 ("focus-selected-process" "focusable?" "and" "when" "selected-process" "process" "let" "evt")}
        {Lisp-Entry "Snapshot-Extensions" definition #f 143 14 143 33 ()}
        {Lisp-Entry "on-open-snapshot" method #f 147 11 147 27 ("processes" "'processes" "locate" "acquire-focus" "open-snapshot" "set-selected-process" "Snapshot-Extensions" "extensions:" "Home" "Directory" "directory:" "choose-file" "with-preserved-current-directory" "file" "let" "lambda" ":wait" "with-cursor" "evt")}
        {Lisp-Entry "on-select-process" method #f 157 11 157 28 ("process-change" "update-tools" "evt")}
        {Lisp-Entry "on-focus" method #f 162 11 162 19 ("focus-selected-process" "evt")}
        {Lisp-Entry "on-update" method #f 166 11 166 20 ("user-origin?:" "update" "get-debuggers" "validate-processes" "for-each" "get-shift?" "when" "evt")}
        {Lisp-Entry "process-change" method #f 172 11 172 25 ("selected-process" "get-debugger-manager" "process-changed")}
        {Lisp-Entry "update-tools" method #f 176 11 176 23 ("focusable?" "and" "focus" "'focus" "locate" "set-enabled?" "selected-process" "process" "let")}
        {Lisp-Entry "update" method #f 186 18 186 24 ("generate-event?:" "debugged=?" "test:" "data" "'data" "use:" "with-update-locked" "remove-every-row" "with-preserved-selection" "processes" "'processes" "locate" "with-system-exception-debugger" "user-data:" "background:" "frame-color:" "image:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "set-alive?" "get-visited-highlight-color" "background" "get-stopped-frame-color" "frame-color" "image" "present" "title" "debugger" "lambda" "for-each-process" "get-debugger-manager" "manager" "let" "tree" "update-processes" "else" "get-icon" "or" "Image-Resource" "not" "cond" "focused?" "live?" "process" "process-image" "define" "user-origin?" "user-origin?:")}
        {Lisp-Entry "update-highlight" method #f 225 18 225 34 ("invalidate-cell" "get-visited-highlight-color" "set-background" "get-stopped-frame-color" "set-frame-color" "manager" "get-cell-data" "data" "0" "row->line" "Cell" "new" "cell" "process-row" "line" "processes" "'processes" "locate" "tree" "get-debugger-manager" "visit-debugged" "debugged=?" "when" "selected-process" "let" "process")}
        {Lisp-Entry "selected-process" method #f 245 18 245 34 ("selected-object")}
        {Lisp-Entry "selected-object" method #f 249 18 249 33 ("get-user-data" "when" "selected-row" "row" "let")}
        {Lisp-Entry "selected-row" method #f 255 11 255 23 ("get-row" "when" "get-single-selection" "n" "processes" "'processes" "locate" "tree" "let*")}
        {Lisp-Entry "set-selected-process" method #f 262 18 262 38 ("row->line" "set-single-selection" "when" "process-row" "row" "processes" "'processes" "locate" "tree" "let" "process")}
        {Lisp-Entry "process-row" definition #f 269 15 269 26 ("continuation-return" "get-user-data" "debugged=?" "when" "rank" "row" "for-each-row" "return" "lambda" "continuation-capture" "assert" "process" "tree")}
        {Lisp-Entry "new-context-menu" method #f 285 11 285 27 ("else" "Debugged-Process" "typecase" "layout-menu" "cleanup-separators" "exit" "'exit" "set-title" "when" "focus" "'focus" "locate" "set-visible?" "and" "unless" "focusable?" "get-alive?" "alive?" "self" "client:" "Process-Menu" "new" "menu" "let" "new-process-menu" "define" "object")}
        {Lisp-Entry "exit-selected-process" method #f 306 11 306 32 ("set-selection" "processes" "'processes" "locate" "tree" "exit" "selected-object" "object" "let")}
        {Lisp-Entry "focus-selected-process" method #f 313 11 313 33 ("selected-process" "get-debugger-manager" "focus-process")}
        {Lisp-Entry "select-toplevel" method #f 318 11 318 26 ("get-toplevel" "select-foreground")}
        {Lisp-Entry "open-snapshot" method #f 322 18 322 31 ("add-snapshot" "'file" "set-property" "load-jml" "snapshot" "let" "file")}
        {Lisp-Entry "add-snapshot" method #f 328 18 328 30 ("get-application" "get-snapshot-debugger" "attach-process" "snapshot")}}
      {Lisp-Entry "Processes-Tree" class #f 337 7 337 21 ("toplevel-controls?:" "431" "width:" "title:" ":images" "portfolio:" "Tree-View")}
      {Lisp-Entry "Process-Menu" class #f 350 7 350 19 ("on-exit" "exit" "on-select" "select" "on-focus" ":form" "Event-Handler" "action-handler:" "Image-Resource" "icon:" "default?:" "title:" "focus" "name:" "Context-Menu")
        {Lisp-Entry "on-focus" method #f 364 11 364 19 ("client" "focus-selected-process" "evt")}
        {Lisp-Entry "on-select" method #f 369 11 369 20 ("client" "select-toplevel" "evt")}
        {Lisp-Entry "on-exit" method #f 373 11 373 18 ("client" "exit-selected-process" "evt")}}}})
"Restarts-View"
 ({Lisp-File-Entry {File jazz.debugger "src" "jazz" "debugger" "debugger" "Restarts-View.jazz"} 1289844262
    {Lisp-Entry "jazz.debugger.debugger.Restarts-View" module #f 37 18 37 54 ("jazz")
      {Lisp-Entry "Restarts-View" class #f 48 7 48 20 ("double-click-handler:" "on-selection-change" ":form" "Selection-Handler" "selection-handler:" "row" "selection-mode:" "multiple-selection?:" "restarts" "shown?:" "header" "fill" "content" "tool" "style:" "vscroll?:" "center" "scroller" "on-invoke-restart" ":guest" "Event-Handler" "action-handler:" ":images" "portfolio:" "Image-Resource" "resource:" "tooltip-text:" "tooltip?:" "tail" "location:" "enabled?:" "22" "Dimension" "size:" "restart" "tools" "name:" "border" "layout-type:" "initialize" "Layout-View")
        {Lisp-Entry "process" property #f 51 12 51 19 ()}
        {Lisp-Entry "get-process" accessor #f 51 44 51 52 ()}
        {Lisp-Entry "set-process" accessor #f 51 44 51 52 ()}
        {Lisp-Entry "thread" property #f 52 12 52 18 ()}
        {Lisp-Entry "external-name" method #f 66 25 66 38 ("restarts-view" "'restarts-view" "rest")}
        {Lisp-Entry "host-icon" method #f 75 25 75 34 ("Image-Resource")}
        {Lisp-Entry "host-title" method #f 79 25 79 35 ()}
        {Lisp-Entry "get-tools-view" method #f 88 20 88 34 ("tools" "'tools" "locate")}
        {Lisp-Entry "focus-default" method #f 92 20 92 33 ("acquire-focus" "restarts" "'restarts" "locate" "tree" "let")}
        {Lisp-Entry "get-thread" method #f 102 18 102 28 ("thread")}
        {Lisp-Entry "set-thread" method #f 106 18 106 28 ("update-restarts" "thread" "set!" "value")}
        {Lisp-Entry "thread-changed" method #f 111 18 111 32 ("update-restarts" "thread" "get-debugger-manager" "get-process" "process" "set!" "new-thread")}
        {Lisp-Entry "resize" method #f 122 20 122 26 ("scroller" "'scroller" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-selection-change" method #f 127 11 127 30 ("selected-restart" "restart" "'restart" "locate" "set-enabled?" "evt")}
        {Lisp-Entry "on-invoke-restart" method #f 131 11 131 28 ("process" "restart-stop" "lambda" "with-jrm-exception-handler" "when" "selected-restart" "restart" "let" "evt")}
        {Lisp-Entry "update-restarts" method #f 144 11 144 26 ("generate-event?:" "debugged=?" "test:" "data" "'data" "use:" "get-restarts" "with-jrm-exception-handler" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "Image-Resource" "image" "get-message" "title" "restart" "for-each" "get-active-stop" "stop" "thread" "when" "with-update-locked" "remove-every-row" "with-preserved-selection" "restarts" "'restarts" "locate" "tree" "let" "lambda" "with-system-exception-debugger")}
        {Lisp-Entry "selected-restart" method #f 173 18 173 34 ("get-user-data" "when" "selected-row" "row" "let")}
        {Lisp-Entry "selected-row" method #f 179 11 179 23 ("get-row" "when" "get-single-selection" "n" "restarts" "'restarts" "locate" "tree" "let*")}}
      {Lisp-Entry "Restarts-Tree" class #f 191 7 191 20 ("toplevel-controls?:" "431" "width:" "title:" ":images" "portfolio:" "Tree-View")}}})
"Stack-Snapshot"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "snapshot" "Stack-Snapshot.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.snapshot.Stack-Snapshot" module #f 37 18 37 55 ("frame-variables" "variable-value" "variable" "local-variables" "frame-context" "self" "'self" "catch" "binding" "or" "in-manifest?" "values" "object-name" "field-creator" "category-identifier" "and" "object-definer" "definer" "frame-name" "function-method" "present-function" "present-method" "receive" "closure-function" "Interpreter" "function-method?" "method?" "frame-procedure" "procedure" "let*" "format" "if" "lexicon-forward-lexicon" "forward" "let" "Image-Resource" "list" "info" "name" "image" "present-frame-info" "present-unknown-frame" "else" "present-compiled-procedure-frame" "present-external-frame" "present-closure-frame" "present-lexical-frame" "lexical" "case" "present-variables" "present-frame" "cons" "map" "2" "tail" "compiled-procedure" "external" "closure" "frame-type" "memq?" "frame" "lambda" "collect-if" "get-stack" "public" "Stack-Viewer" "get-viewer-class" "get-title" "runtime-stack" "collect-presented" "remove-frames" "present-stack" "set!" "nextmethod" "initialize" "method" "stack" "slot" "Viewable" "implements" "Object" "extends" "Stack-Snapshot" "class" "jazz")
      {Lisp-Entry "Stack-Snapshot" class #f 43 7 43 21 ("Viewable" "Object")}}})
"Thread-Snapshot"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "snapshot" "Thread-Snapshot.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.snapshot.Thread-Snapshot" module #f 37 18 37 56 ("jazz")
      {Lisp-Entry "Thread-Snapshot" class #f 43 7 43 22 ("Component")}
      {Lisp-Entry "Thread-Snapshot" class #f 49 7 49 22 ("initialize" "Component")
        {Lisp-Entry "model" property #f 52 12 52 17 ()}
        {Lisp-Entry "get-model" accessor #f 52 49 52 57 ()}
        {Lisp-Entry "set-model" accessor #f 52 49 52 57 ()}
        {Lisp-Entry "label" property #f 53 12 53 17 ()}
        {Lisp-Entry "get-label" accessor #f 53 49 53 57 ()}
        {Lisp-Entry "set-label" accessor #f 53 49 53 57 ()}
        {Lisp-Entry "state" property #f 54 12 54 17 ()}
        {Lisp-Entry "get-state" accessor #f 54 49 54 57 ()}
        {Lisp-Entry "set-state" accessor #f 54 49 54 57 ()}
        {Lisp-Entry "system-stack" property #f 55 12 55 24 ()}
        {Lisp-Entry "get-system-stack" accessor #f 55 49 55 57 ()}
        {Lisp-Entry "set-system-stack" accessor #f 55 49 55 57 ()}
        {Lisp-Entry "data-stack" property #f 56 12 56 22 ()}
        {Lisp-Entry "get-data-stack" accessor #f 56 49 56 57 ()}
        {Lisp-Entry "set-data-stack" accessor #f 56 49 56 57 ()}
        {Lisp-Entry "call-stack" property #f 57 12 57 22 ()}
        {Lisp-Entry "get-call-stack" accessor #f 57 49 57 57 ()}
        {Lisp-Entry "set-call-stack" accessor #f 57 49 57 57 ()}
        {Lisp-Entry "construct-literal" method #f 61 16 61 33 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "print" method #f 65 11 65 16 ("call-stack" "call-stack:" "data-stack" "data-stack:" "system-stack" "system-stack:" "state" "state:" "label" "label:" "model" "model:" "list" "self" "class-of" "category-name" "format" "readably" "printer")}}}})
"Threads-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "debugger" "Threads-View.jazz"} 1289844205
    {Lisp-Entry "jazz.debugger.debugger.Threads-View" module #f 37 18 37 53 ("jazz")
      {Lisp-Entry "Threads-View" class #f 50 7 50 19 ("on-double-click" "double-click-handler:" "on-context-menu" "context-menu-handler:" "on-select-thread" ":form" "Selection-Handler" "selection-handler:" "row" "selection-mode:" "multiple-selection?:" "threads" "shown?:" "header" "fill" "content" "tool" "style:" "vscroll?:" "center" "scroller" "on-update" "update" "2" "on-toggle-detailed" "tail" "location:" "detailed" "0" "5" "on-continue" "continue" "on-break" "break" "on-restart" ":guest" "Event-Handler" "action-handler:" ":images" "portfolio:" "Image-Resource" "resource:" "tooltip-text:" "tooltip?:" "enabled?:" "22" "Dimension" "size:" "visible?:" "restart" "tools" "name:" "border" "layout-type:" "explicit" "initialize" "Layout-View")
        {Lisp-Entry "process" property #f 53 12 53 19 ()}
        {Lisp-Entry "external-name" method #f 75 25 75 38 ("threads-view" "'threads-view" "rest")}
        {Lisp-Entry "host-icon" method #f 84 25 84 34 ("Image-Resource")}
        {Lisp-Entry "host-title" method #f 88 25 88 35 ()}
        {Lisp-Entry "client-activate" method #f 92 20 92 35 ("update-highlight" "when" "selected-thread" "let")}
        {Lisp-Entry "get-tools-view" method #f 103 20 103 34 ("tools" "'tools" "locate")}
        {Lisp-Entry "focus-default" method #f 107 20 107 33 ("acquire-focus" "threads" "'threads" "locate" "tree" "let")}
        {Lisp-Entry "install" method #f 117 20 117 27 ("update-threads" "nextmethod" "rest")}
        {Lisp-Entry "get-process" method #f 127 18 127 29 ("process")}
        {Lisp-Entry "set-process" method #f 131 18 131 29 ("update-threads" "process" "set!" "value")}
        {Lisp-Entry "show-detailed?" method #f 136 11 136 25 ("detailed" "'detailed" "locate" "get-selected?")}
        {Lisp-Entry "process-changed" method #f 140 18 140 33 ("update-threads" "process" "set!" "new-process")}
        {Lisp-Entry "resize" method #f 150 20 150 26 ("scroller" "'scroller" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-context-menu" method #f 155 11 155 26 ("track-popup-menu" "when" "selected-thread" "new-context-menu" "menu" "let" "lambda" "with-context-click" "acquire" "acquired" "get-position" "pos" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-double-click" method #f 166 11 166 26 ("evt")}
        {Lisp-Entry "on-toggle-detailed" method #f 170 11 170 29 ("update-threads" "evt")}
        {Lisp-Entry "on-select-thread" method #f 174 11 174 27 ("thread-change" "update-tools" "evt")}
        {Lisp-Entry "on-break" method #f 179 11 179 19 ("process" "break-thread" "with-jrm-exception-handler" "lambda" "with-thread-refresh" "selected-thread" "thread" "let" "evt")}
        {Lisp-Entry "on-continue" method #f 188 11 188 22 ("continue-stop" "evt")}
        {Lisp-Entry "on-update" method #f 192 11 192 20 ("user-origin?:" "update-threads" "evt")}
        {Lisp-Entry "with-thread-refresh" method #f 196 11 196 30 ("update-tools" "update-threads" "execute-event" ".1" "sleep" "lambda" "new-thread" "thread-start!" "thunk" "thread")}
        {Lisp-Entry "event-thread-local-proxy?" definition #f 209 15 209 40 ("event-thread" "get-object" "get-thread" "Debuggee-Thread-Local-Proxy" "is?" "and" "get-reference" "thread-proxy" "let" "get-application" "get-local-debugger" "get-debugger" "eq?" "when" "thread")}
        {Lisp-Entry "restart-stop" method #f 216 11 216 23 ("process" "restart-stop" "with-jrm-exception-handler" "lambda" "with-thread-refresh" "selected-thread" "thread" "let" "restart")}
        {Lisp-Entry "continue-stop" method #f 225 11 225 24 ("process" "continue-stop" "with-jrm-exception-handler" "lambda" "with-thread-refresh" "get-active-stop" "stop" "selected-thread" "thread" "let")}
        {Lisp-Entry "step-stop" method #f 235 19 235 28 ("process" "step-stop" "with-jrm-exception-handler" "lambda" "with-thread-refresh" "get-active-stop" "stop" "selected-thread" "thread" "let" "command")}
        {Lisp-Entry "update-tools" method #f 245 11 245 23 ("get-kind" "eq?" "get-active-stop" "stop" "not" "if" "selected-thread" "thread" "let" "'continue" "'break" "'restart" "locate" "set-enabled?" "continue" "break" "restart" "enable" "define")}
        {Lisp-Entry "update-threads" method #f 264 21 264 35 ("generate-event?:" "debugged=?" "test:" "data" "'data" "use:" "continuation-return" "thread-change" "set-selected-thread" "debugged-visited?" "return" "continuation-capture" "get-installed?" "when" "selected-thread" "unless" "show-detailed?" "detailed?:" "user-data:" "background:" "frame-color:" "image:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "get-visited-highlight-color" "background" "get-stopped-frame-color" "frame-color" "image" "title" "for-each-thread" "with-update-locked" "remove-every-row" "with-preserved-selection" "threads" "'threads" "locate" "tree" "lambda" "with-system-exception-debugger" "get-debugger-manager" "manager" "Image-Resource" "thread-image" "->string" "get-state" "else" "break" "format" "exception" "run" "'run" "get-kind" "case" "get-name" "present-thread-name" "name" "split" "car" "if" "get-reason" "reason" "let" "default" "stop-title" "detailed?" "stop" "thread" "thread-title" "define" "user-origin?" "user-origin?:")}
        {Lisp-Entry "update-highlight" method #f 319 18 319 34 ("invalidate-cell" "get-visited-highlight-color" "set-background" "get-stopped-frame-color" "set-frame-color" "manager" "get-cell-data" "data" "0" "row->line" "Cell" "new" "cell" "thread-row" "row" "threads" "'threads" "locate" "tree" "get-debugger-manager" "visit-debugged" "debugged=?" "when" "selected-thread" "let" "thread")}
        {Lisp-Entry "thread-change" method #f 339 11 339 24 ("selected-thread" "get-debugger-manager" "thread-changed")}
        {Lisp-Entry "selected-thread" method #f 348 18 348 33 ("get-user-data" "when" "selected-row" "row" "let")}
        {Lisp-Entry "selected-row" method #f 354 11 354 23 ("threads" "'threads" "locate" "get-selected-row")}
        {Lisp-Entry "set-selected-thread" method #f 358 18 358 37 ("row->line" "set-single-selection" "when" "thread-row" "row" "threads" "'threads" "locate" "tree" "let" "thread")}
        {Lisp-Entry "thread-row" definition #f 365 15 365 25 ("continuation-return" "get-user-data" "debugged=?" "when" "rank" "row" "for-each-row" "return" "lambda" "continuation-capture" "assert" "thread" "tree")}
        {Lisp-Entry "new-context-menu" method #f 381 11 381 27 ("else" "Debugged-Thread" "typecase" "layout-menu" "cleanup-separators" "on-continue" "Separator-Item" "break" "'break" "get-kind" "eq?" "when" "get-restarts" "icon" "get-message" "title" "for-each" "on-break" ":form" "action-handler:" "Image-Resource" "icon:" "title:" "parent:" "Label-Item" "not" "if" "get-active-stop" "stop" "Thread-Menu" "menu" "let" "thread" "new-thread-menu" "restart-stop" "with-jrm-exception-handler" "event" "lambda" "execute:" "Event-Handler" "new" "restart" "make-handler" "define" "object")}}
      {Lisp-Entry "Threads-Tree" class #f 420 7 420 19 ("toplevel-controls?:" "431" "width:" "title:" ":images" "portfolio:" "Tree-View")}
      {Lisp-Entry "Thread-Menu" class #f 433 7 433 18 ("Context-Menu")}}})
"Variables-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "debugger" "Variables-View.jazz"} 1289844162
    {Lisp-Entry "jazz.debugger.debugger.Variables-View" module #f 37 18 37 55 ("jazz")
      {Lisp-Entry "Variables-View" class #f 49 7 49 21 ("303" "value" "130" "width:" "name" "row" "selection-mode:" "multiple-selection?:" "variables" "fill" "content" "tool" "style:" "hscroll?:" "vscroll?:" "center" "scroller" "on-toggle-dynamic" ":guest" "Event-Handler" "action-handler:" ":images" "portfolio:" "Image-Resource" "resource:" "tooltip-text:" "tooltip?:" "tail" "location:" "22" "Dimension" "size:" "dynamic" "tools" "name:" "border" "layout-type:" "explicit" "initialize" "Layout-View")
        {Lisp-Entry "process" property #f 52 12 52 19 ()}
        {Lisp-Entry "continuation-frame" property #f 53 12 53 30 ()}
        {Lisp-Entry "external-name" method #f 69 25 69 38 ("variables-view" "'variables-view" "rest")}
        {Lisp-Entry "host-icon" method #f 78 25 78 34 ("Image-Resource")}
        {Lisp-Entry "host-title" method #f 82 25 82 35 ()}
        {Lisp-Entry "get-tools-view" method #f 91 20 91 34 ("tools" "'tools" "locate")}
        {Lisp-Entry "focus-default" method #f 95 20 95 33 ("acquire-focus" "variables" "'variables" "locate" "tree" "let")}
        {Lisp-Entry "get-process" method #f 105 18 105 29 ("variables" "'variables" "locate" "get-process")}
        {Lisp-Entry "set-process" method #f 109 18 109 29 ("variables" "'variables" "locate" "set-process" "process")}
        {Lisp-Entry "get-continuation-frame" method #f 113 18 113 40 ("continuation-frame")}
        {Lisp-Entry "set-continuation-frame" method #f 117 18 117 40 ("determine-frame-client" "variables" "'variables" "locate" "set-client" "continuation-frame" "set!" "frm")}
        {Lisp-Entry "frame-changed" method #f 122 18 122 31 ("set-continuation-frame" "get-debugger-manager" "get-process" "set-process" "new-frame")}
        {Lisp-Entry "determine-frame-client" method #f 127 11 127 33 ("cons" ":lexical" ":all" "if" "kind" "let" "continuation-frame" "when" "dynamic" "'dynamic" "locate" "get-selected?" "show-dynamic?" "define")}
        {Lisp-Entry "resize" method #f 141 20 141 26 ("scroller" "'scroller" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-frame-change" method #f 146 19 146 34 ("else" "Frame-Snapshot" "typecase" "set-continuation-frame" "set-process" "frame:" "frame" "process:" "get-property" "process" "let" "evt")}
        {Lisp-Entry "on-toggle-dynamic" method #f 161 11 161 28 ("determine-frame-client" "variables" "'variables" "locate" "set-client" "continuation-frame" "when" "evt")}}
      {Lisp-Entry "Variables-Inspector" class #f 171 7 171 26 ("Inspector")
        {Lisp-Entry "inspect" method #f 174 20 174 27 ("nextmethod" "else" "frame:" "case" "get-variables" "with-jrm-exception-handler" "Debugged-Frame" "is?" "length" "naturals" "0" "list" "value" "name" "bind" "pair?" "if" "rank" "parameter" "lambda" "map" "get-parameters" "parameters" "let" "Frame-Snapshot" "typecase" "frame" "inspect-frame" "define" "kind" "data")}}}})
"_debugger"
 ({Lisp-File-Entry {File jazz.debugger "src" "jazz" "debugger" "_debugger.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger" module #f 37 8 37 21 ("jazz")
      {Lisp-Entry "with-jrm-exception-handler" definition #f 56 20 56 46 ("catch" "throw-cancel" "message-box" "lambda" "execute-event" "process-jrm-exception" "Remote-Connection-Broke" "is?" "object?" "and" "os-exception?" "or" "exc" "jrm-exception?" "define" "thunk")}
      {Lisp-Entry "*debugger-manager*" definition #f 77 12 77 30 ()}
      {Lisp-Entry "get-debugger-manager" definition #f 81 20 81 40 ("*debugger-manager*")}
      {Lisp-Entry "set-debugger-manager" definition #f 85 20 85 40 ("*debugger-manager*" "set!" "debugger-manager")}
      {Lisp-Entry "*debuggers*" definition #f 94 12 94 23 ()}
      {Lisp-Entry "*current-debugger*" definition #f 97 12 97 30 ()}
      {Lisp-Entry "*current-debugger-cookie*" definition #f 100 12 100 37 ("0")}
      {Lisp-Entry "*debugger-cookies*" definition #f 103 12 103 30 ("eqv?" "test:" "make-table")}
      {Lisp-Entry "with-debuggers-mutex" definition #f 107 12 107 32 ("mutex-unlock!" "mutex-lock!" "thunk" "lambda" "debuggers" "'debuggers" "make-mutex" "mutex" "let")}
      {Lisp-Entry "register-debugger" definition #f 115 21 115 38 ("list" "append" "*debuggers*" "set!" "lambda" "with-debuggers-mutex" "debugger")}
      {Lisp-Entry "unregister-debugger" definition #f 121 21 121 40 ("remove!" "*debuggers*" "set!" "lambda" "with-debuggers-mutex" "debugger")}
      {Lisp-Entry "get-debuggers" definition #f 127 20 127 33 ("*debuggers*")}
      {Lisp-Entry "current-debugger" definition #f 131 20 131 36 ("*current-debugger*")}
      {Lisp-Entry "set-current-debugger" definition #f 135 20 135 40 ("*current-debugger*" "set!" "debugger")}
      {Lisp-Entry "register-debugger-cookie" definition #f 139 20 139 44 ("increase!" "*debugger-cookies*" "table-set!" "*current-debugger-cookie*" "cookie" "let" "proc")}
      {Lisp-Entry "get-registered-cookie" definition #f 146 20 146 41 ("table-set!" "*debugger-cookies*" "table-ref" "prog1" "cookie")}
      {Lisp-Entry "debugged=?" definition #f 156 20 156 30 ("same?" "eq?" "dy" "get-debugger" "dx" "let" "not" "and" "or" "y" "x")}
      {Lisp-Entry "debugged-hash" definition #f 166 20 166 33 ("get-reference" "get-process" "get-debugger" "eq?-hash" "fxwrap+" "0" "not" "if" "debugged")}
      {Lisp-Entry "collect-processes" definition #f 181 20 181 37 ("queue-list" "get-debuggers" "validate-liveness?:" "get-processes" "enqueue" "Debugged-Process" "new" "debugged" "process" "debugger" "lambda" "for-each" "new-queue" "queue" "let")}
      {Lisp-Entry "*debugger-resources*" definition #f 197 12 197 32 ("debugged-hash" "hash:" "debugged=?" "test:" "make-table")}
      {Lisp-Entry "get-debugger-resources" definition #f 201 20 201 42 ("*debugger-resources*" "table-ref" "process")}
      {Lisp-Entry "set-debugger-resources" definition #f 204 20 204 42 ("*debugger-resources*" "table-set!" "resources" "process")}
      {Lisp-Entry "register-debugger-resource" definition #f 208 20 208 46 ("get-debugger-resources" "cons" "set-debugger-resources" "resource" "process")}
      {Lisp-Entry "unregister-debugger-resource" definition #f 211 20 211 48 ("get-debugger-resources" "remove!" "set-debugger-resources" "resource" "process")}
      {Lisp-Entry "close-process-debugger-resources" definition #f 215 21 215 53 ("*debugger-resources*" "table-clear" "get-debugger-resources" "close-resource" "for-each" "process")}
      {Lisp-Entry "Once-Breaks" definition #f 225 12 225 23 ("eq?" "test:" "make-table")}
      {Lisp-Entry "add-break-once" definition #f 229 20 229 34 ("Once-Breaks" "table-set!" "name")}
      {Lisp-Entry "break-once" definition #f 233 20 233 30 ("break" "table-set!" "Once-Breaks" "table-ref" "when" "name")}
      {Lisp-Entry "Once-Executes" definition #f 239 12 239 25 ("eq?" "test:" "make-table")}
      {Lisp-Entry "add-execute-once" definition #f 243 20 243 36 ("Once-Executes" "table-set!" "name")}
      {Lisp-Entry "execute-once" definition #f 247 20 247 32 ("table-set!" "Once-Executes" "table-ref" "when" "proc" "name")}
      {Lisp-Entry "register-debugger-console" definition #f 258 20 258 45 ("present-process-title" "register-console" "get-console-manager" "manager" "let" "debugger-console-pump" "'debugger-console-pump" "console-input" "with-jrm-exception-handler" "str" "start-pump" "lambda" "new-system-thread" "thread-start!" "port" "start-debugger-console-pump" "set-console-pump" "set-console-port" "permanent-close:" "list" "open-string-pipe" "tail" "head" "receive" "text" "setup-debugger-console-ports" "define" "select?" "thread-proxy" "process-proxy")}
      {Lisp-Entry "unregister-debugger-console" definition #f 281 20 281 47 ("get-console-text-manager" "unregister-console" "lambda" "execute-event" "thread-exit" "thread-interrupt!" "when" "get-console-pump" "pump" "let" "text")}
      {Lisp-Entry "debugger-console-output" definition #f 291 20 291 43 ("insert-formatted-line" "text-ending" "set-caret" "lambda" "execute-event" "str" "text")}
      {Lisp-Entry "present-process-title" definition #f 298 20 298 41 ("get-name" "present-thread-name" "format" "not" "if" "get-title" "process-title" "let" "thread-proxy" "process-proxy")}
      {Lisp-Entry "on-call-step-over" definition #f 310 20 310 37 ("on-step-over" "evt")}
      {Lisp-Entry "on-call-step-into" definition #f 314 20 314 37 ("on-step-into" "on-step-into-function" "get-shift?" "if" "evt")}
      {Lisp-Entry "on-call-step-out" definition #f 320 20 320 36 ("on-step-out" "on-step-outside-function" "get-shift?" "if" "evt")}
      {Lisp-Entry "on-call-run-to" definition #f 326 20 326 34 ("on-run-to-cursor" "on-run-to-result" "get-shift?" "if" "evt")}
      {Lisp-Entry "on-restart" definition #f 337 20 337 30 ("restart" "evt")}
      {Lisp-Entry "on-break" definition #f 341 20 341 28 ("break-next" "evt")}
      {Lisp-Entry "on-continue" definition #f 346 20 346 31 ("continue" "bell" "debugging?" "not" "if" "evt")}
      {Lisp-Entry "on-step-over" definition #f 352 20 352 32 ("step-over" "continue" "bell" "debugging?" "not" "if" "evt")}
      {Lisp-Entry "on-step-into" definition #f 360 20 360 32 ("step-into" "continue" "bell" "debugging?" "not" "if" "evt")}
      {Lisp-Entry "on-step-into-function" definition #f 368 20 368 41 ("step-into-function" "continue" "bell" "debugging?" "not" "if" "evt")}
      {Lisp-Entry "on-step-out" definition #f 376 20 376 31 ("step-out" "continue" "bell" "debugging?" "not" "if" "evt")}
      {Lisp-Entry "on-step-outside-function" definition #f 384 20 384 44 ("step-outside-function" "continue" "bell" "debugging?" "not" "if" "evt")}
      {Lisp-Entry "on-run-to-cursor" definition #f 392 20 392 36 ("evt")}
      {Lisp-Entry "on-run-to-result" definition #f 396 20 396 36 ("evt")}
      {Lisp-Entry "restart" definition #f 400 20 400 27 ("get-application" "get-loop" "restart")}
      {Lisp-Entry "continue" definition #f 404 20 404 28 ("get-application" "get-loop" "continue")}
      {Lisp-Entry "debugging?" definition #f 408 20 408 30 ("0" "get-application" "get-loop" "get-level" "/=")}
      {Lisp-Entry "get-processes-view" definition #f 417 20 417 38 ("Processes-View" "singleton-docked" "get-guest")}
      {Lisp-Entry "get-threads-view" definition #f 421 20 421 36 ("Threads-View" "singleton-docked" "get-guest")}
      {Lisp-Entry "get-frames-view" definition #f 425 20 425 35 ("Frames-View" "singleton-docked" "get-guest")}
      {Lisp-Entry "get-restarts-view" definition #f 429 20 429 37 ("Restarts-View" "singleton-docked" "get-guest")}
      {Lisp-Entry "get-exception-view" definition #f 433 20 433 38 ("Exception-View" "singleton-docked" "get-guest")}
      {Lisp-Entry "get-variables-view" definition #f 437 20 437 38 ("Variables-View" "singleton-docked" "get-guest")}}})
"autoload"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.debugger" "src" "jazz" "debugger" "autoload.jazz"} 1288732033
    {Lisp-Entry "jazz.debugger.autoload" module #f 37 18 37 40 ("jazz")}})
