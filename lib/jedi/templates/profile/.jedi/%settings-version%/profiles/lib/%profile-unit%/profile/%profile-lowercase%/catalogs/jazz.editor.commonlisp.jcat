"CommonLisp-Explorer"
 ({Lisp-File-Entry {File jazz.editor.commonlisp "src" "jazz" "editor" "commonlisp" "text" "CommonLisp-Explorer.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.commonlisp.text.CommonLisp-Explorer" module #f 37 18 37 65 ("jazz")
      {Lisp-Entry "CommonLisp-Explorer" class #f 46 7 46 26 ("Lisp-Explorer")
        {Lisp-Entry "find-named-walker" method #f 54 20 54 37 ("nextmethod" "else" "walk-eval-when" ":eval-when" "walk-define-variable" ":define-variable" "walk-define-macro" ":define-macro" "walk-define" ":define" "case" "name")}
        {Lisp-Entry "walk-define" method #f 63 11 63 22 ("code" "'code" "walk-expressions" "exit-list" "walk-parameters" "get-marked" "define" "'define" "set!" "'symbol" "kind" "eq?" "forward-expr" "and" "enter-list" "when" "0" "char-forward" "eqv?" "list?" "forward-whites" "end" "start" "entry" "let" "doc" "expression" "keyword" "declaration" "form" "symbol" "context")}
        {Lisp-Entry "walk-define-macro" method #f 80 11 80 28 ("exit-list" "code" "'code" "walk-expressions" "get-marked" "define-macro" "'define-macro" "set!" "'symbol" "kind" "eq?" "forward-expr" "and" "enter-list" "when" "0" "char-forward" "eqv?" "list?" "forward-whites" "end" "start" "entry" "let" "doc" "expression" "keyword" "declaration" "form" "symbol" "context")}
        {Lisp-Entry "walk-define-variable" method #f 97 11 97 31 ("code" "'code" "walk-expressions" "exit-list" "walk-parameters" "get-marked" "define-variable" "'define-variable" "set!" "'symbol" "kind" "eq?" "forward-expr" "and" "enter-list" "when" "0" "char-forward" "eqv?" "list?" "forward-whites" "end" "start" "entry" "let" "doc" "expression" "keyword" "declaration" "form" "symbol" "context")}
        {Lisp-Entry "walk-eval-when" method #f 114 11 114 25 ("walk-declarations" "doc" "expression" "keyword" "declaration" "form" "symbol" "context")}}}})
"CommonLisp-Parser"
 ({Lisp-File-Entry {File jazz.editor.commonlisp "src" "jazz" "editor" "commonlisp" "parser" "CommonLisp-Parser.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.commonlisp.parser.CommonLisp-Parser" module #f 37 18 37 65 ("jazz")
      {Lisp-Entry "CommonLisp-Parser" class #f 44 7 44 24 ("Lisp-Parser")
        {Lisp-Entry "explorer-class" method #f 47 20 47 34 ("CommonLisp-Explorer" "file")}
        {Lisp-Entry "text-view-class" method #f 51 20 51 35 ("CommonLisp-Text-View")}}}})
"CommonLisp-Text-Preferences"
 ({Lisp-File-Entry {File jazz.editor.commonlisp "src" "jazz" "editor" "commonlisp" "text" "CommonLisp-Text-Preferences.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.commonlisp.text.CommonLisp-Text-Preferences" module #f 37 18 37 73 ("jazz")
      {Lisp-Entry "CommonLisp-Text-Preferences" class #f 48 7 48 34 ("completions:" "quotation-style:" "named-string-style:" "delimited-string-style:" "string-style:" "boolean-style:" "number-style:" "Ochre" "char-style:" "keyword-style:" "Dark-Green" "declaration-style:" "Dark-Blue" "declaration-keyword-style:" "Text-Gray" "expr-comment-style:" "Purple" "comment-style:" "Dark-Red" "color:" "Text-Style-Preference" "title-style:" "title:" "Lisp-Text-Preferences")}}})
"CommonLisp-Text-View"
 ({Lisp-File-Entry {File jazz.editor.commonlisp "src" "jazz" "editor" "commonlisp" "text" "CommonLisp-Text-View.jazz"} 1289940794
    {Lisp-Entry "jazz.editor.commonlisp.text.CommonLisp-Text-View" module #f 37 18 37 66 ("jazz")
      {Lisp-Entry "CommonLisp-Text-View" class #f 50 7 50 27 ("tooltip?:" "Lisp-Text-View")
        {Lisp-Entry "install" method #f 57 20 57 27 ("Color" "frame:" "base:" "Reference" "'Reference" "name:" "Text-Style" "new" "add-style" "get-quotation-style" "Quotation" "'Quotation" "get-named-string-style" "Named-String" "'Named-String" "get-delimited-string-style" "Delimited-String" "'Delimited-String" "get-string-style" "String" "'String" "get-boolean-style" "Boolean" "'Boolean" "get-char-style" "Char" "'Char" "get-keyword-style" "Keyword" "'Keyword" "get-declaration-style" "Declaration" "'Declaration" "get-declaration-keyword-style" "Declaration-Keyword" "'Declaration-Keyword" "get-expr-comment-style" "Expr-Comment" "'Expr-Comment" "get-comment-style" "Comment" "'Comment" "get-title-style" "Title" "'Title" "add-style-preference" "default-style" "get-name" "default" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" method #f 76 25 76 38 ("commonlisp-text" "'commonlisp-text" "rest")}
        {Lisp-Entry "default-extension" method #f 80 20 80 37 ()}
        {Lisp-Entry "extensions" method #f 84 20 84 30 ()}
        {Lisp-Entry "get-context-menu" method #f 93 20 93 36 ("CommonLisp-Text-Menu" "new")}
        {Lisp-Entry "default-preferences" definition #f 102 14 102 33 ("completions:" "Dark-Blue" "keyword-style:" "Dark-Green" "declaration-style:" "Dark-Orange" "expr-comment-style:" "Purple" "comment-style:" "Dark-Red" "color:" "Text-Style-Preference" "title-style:" "instantiate")}
        {Lisp-Entry "preferences" method #f 114 20 114 31 ("commonlisp-text" "documents" "get-preferences")}
        {Lisp-Entry "declaration-style" method #f 118 20 118 37 ("Declaration" "'Declaration" "documented?")}
        {Lisp-Entry "explorer-class" method #f 127 20 127 34 ("CommonLisp-Explorer")}}
      {Lisp-Entry "CommonLisp-Text-Menu" class #f 136 7 136 27 ("paste" "copy" "view" "french:" "english:" "Locales" "cut" "edit-references" "code-text" "Action" "action-handler:" "Image-Resource" "icon:" "title:" "edit-definitions" "name:" "Context-Menu")}}})
"_commonlisp"
 ({Lisp-File-Entry {File jazz.editor.commonlisp "src" "jazz" "editor" "commonlisp" "_commonlisp.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.commonlisp" module #f 37 8 37 30 ("jazz")}})
"autoload"
 ({Lisp-File-Entry {File jazz.editor.commonlisp "src" "jazz" "editor" "commonlisp" "autoload.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.commonlisp.autoload" module #f 37 18 37 49 ("jazz")}})
"forms"
 ({Lisp-File-Entry {File jazz.editor.commonlisp "src" "jazz" "editor" "commonlisp" "forms.jazz"} 1288732033
    {Lisp-Entry "jazz.editor.commonlisp.forms" module #f 37 8 37 36 ("jazz")
      {Lisp-Entry "defclass" define ("expression") 49 19 49 27 (":define-variable" "walk:" "2" "tabulate:" "declaration?:" "commonlisp" "dialect:")}
      {Lisp-Entry "defgeneric" define ("expression") 55 19 55 29 (":define" "walk:" "2" "tabulate:" "declaration?:" "commonlisp" "dialect:")}
      {Lisp-Entry "defmacro" define ("expression") 61 19 61 27 (":define-macro" "walk:" "2" "tabulate:" "declaration?:" "commonlisp" "dialect:")}
      {Lisp-Entry "defmethod" define ("expression") 67 19 67 28 (":define" "walk:" "2" "tabulate:" "declaration?:" "commonlisp" "dialect:")}
      {Lisp-Entry "defpackage" define ("expression") 73 19 73 29 (":define-variable" "walk:" "1" "tabulate:" "declaration?:" "commonlisp" "dialect:")}
      {Lisp-Entry "defparameter" define ("expression") 79 19 79 31 (":define-variable" "walk:" "1" "tabulate:" "declaration?:" "commonlisp" "dialect:")}
      {Lisp-Entry "defstruct" define ("expression") 85 19 85 28 (":define-variable" "walk:" "1" "tabulate:" "declaration?:" "commonlisp" "dialect:")}
      {Lisp-Entry "deftype" define ("expression") 91 19 91 26 (":define" "walk:" "2" "tabulate:" "declaration?:" "commonlisp" "dialect:")}
      {Lisp-Entry "defun" define ("expression") 97 19 97 24 (":define" "walk:" "2" "tabulate:" "declaration?:" "commonlisp" "dialect:")}
      {Lisp-Entry "defvar" define ("expression") 103 19 103 25 (":define-variable" "walk:" "1" "tabulate:" "declaration?:" "commonlisp" "dialect:")}
      {Lisp-Entry "define-condition" define ("expression") 109 19 109 35 (":define-variable" "walk:" "3" "tabulate:" "declaration?:" "commonlisp" "dialect:")}
      {Lisp-Entry "define-modify-macro" define ("expression") 115 19 115 38 (":define-variable" "walk:" "2" "tabulate:" "declaration?:" "commonlisp" "dialect:")}
      {Lisp-Entry "eval-when" define ("expression") 127 19 127 28 (":eval-when" "walk:" "0" "tabulate:" "commonlisp" "dialect:")}}})
