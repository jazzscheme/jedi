"_dialect"
 ({Lisp-File-Entry {File gambit "src" "gambit" "dialect" "_dialect.scm"} 1288732032
    {Lisp-Entry "gambit.dialect" module #f 37 18 37 32 ("core")}})
"_gambit"
 ({Lisp-File-Entry {File gambit "src" "gambit" "_gambit.scm"} 1288732032
    {Lisp-Entry "gambit" module #f 37 8 37 14 ("scheme")}})
"classes"
 ({Lisp-File-Entry {File gambit "src" "gambit" "dialect" "classes.scm"} 1288732032
    {Lisp-Entry "gambit.dialect.classes" unit #f 37 16 37 38 ()
      {Lisp-Entry "jazz.Gambit-Dialect" define-class ("class") 45 19 45 38 ("jazz.allocate-gambit-dialect" "jazz.Object-Class" "bindings" "jazz.Scheme-Dialect")}
      {Lisp-Entry "jazz.Gambit-Walker" define-class ("class") 54 19 54 37 ("jazz.allocate-gambit-walker" "jazz.Object-Class" "autoloads" "references" "variables" "literals" "errors" "warnings" "jazz.Scheme-Walker")}}})
"dialect"
 ({Lisp-File-Entry {File gambit "src" "gambit" "dialect" "dialect.scm"} 1288732032
    {Lisp-Entry "gambit.dialect.dialect" unit #f 37 16 37 38 ("jazz.Gambit-Walker" "jazz.Gambit-Dialect" "jazz.encapsulate-class")
      {Lisp-Entry "jazz.Gambit-Dialect" define-class ("class runtime") 45 27 45 46 ()}
      {Lisp-Entry "jazz.new-gambit-dialect" define #f 48 9 48 32 ("jazz.Gambit-Dialect" "jazz.allocate-gambit-dialect")}
      {Lisp-Entry "jazz.dialect-name" generic/specific ("jazz.Gambit-Dialect") 52 21 52 38 ("gambit" "'gambit")}
      {Lisp-Entry "jazz.dialect-walker" generic/specific ("jazz.Gambit-Dialect") 56 21 56 40 ("jazz.new-gambit-walker")}
      {Lisp-Entry "jazz.Gambit-Walker" define-class ("class runtime") 68 27 68 45 ()}
      {Lisp-Entry "jazz.new-gambit-walker" define #f 71 9 71 31 ("eq?" "test:" "%%make-table" "jazz.new-queue" "jazz.Gambit-Walker" "jazz.allocate-gambit-walker")}
      {Lisp-Entry "jazz.walker-bindings" generic/specific ("jazz.Gambit-Walker") 83 21 83 41 ("walker" "nextmethod" "gambit" "'gambit" "jazz.get-dialect" "%%get-dialect-bindings" "append")}
      {Lisp-Entry "gambit" define ("dialect") 93 21 93 27 ("jazz.new-gambit-dialect")}}})
"kernel"
 ({Lisp-File-Entry {File gambit "src" "gambit" "dialect" "kernel.scm"} 1288732032
    {Lisp-Entry "gambit.dialect.kernel" module #f 37 18 37 39 ("scheme")
      {Lisp-Entry "default-random-source" native #f 40 8 40 29 ()}
      {Lisp-Entry "abandoned-mutex-exception?" native #f 41 8 41 34 ()}
      {Lisp-Entry "abort" native #f 42 8 42 13 ()}
      {Lisp-Entry "all-bits-set?" native #f 43 8 43 21 ()}
      {Lisp-Entry "any-bits-set?" native #f 44 8 44 21 ()}
      {Lisp-Entry "arithmetic-shift" native #f 45 8 45 24 ()}
      {Lisp-Entry "bit-count" native #f 46 8 46 17 ()}
      {Lisp-Entry "bit-set?" native #f 47 8 47 16 ()}
      {Lisp-Entry "bitwise-and" native #f 48 8 48 19 ()}
      {Lisp-Entry "bitwise-ior" native #f 49 8 49 19 ()}
      {Lisp-Entry "bitwise-merge" native #f 50 8 50 21 ()}
      {Lisp-Entry "bitwise-not" native #f 51 8 51 19 ()}
      {Lisp-Entry "bitwise-xor" native #f 52 8 52 19 ()}
      {Lisp-Entry "box" native #f 53 8 53 11 ()}
      {Lisp-Entry "box?" native #f 54 8 54 12 ()}
      {Lisp-Entry "break" native #f 55 8 55 13 ()}
      {Lisp-Entry "call-with-input-string" native #f 56 8 56 30 ()}
      {Lisp-Entry "call-with-input-u8vector" native #f 57 8 57 32 ()}
      {Lisp-Entry "call-with-input-vector" native #f 58 8 58 30 ()}
      {Lisp-Entry "call-with-output-string" native #f 59 8 59 31 ()}
      {Lisp-Entry "call-with-output-u8vector" native #f 60 8 60 33 ()}
      {Lisp-Entry "call-with-output-vector" native #f 61 8 61 31 ()}
      {Lisp-Entry "call/cc" native #f 62 8 62 15 ()}
      {Lisp-Entry "cfun-conversion-exception-arguments" native #f 63 8 63 43 ()}
      {Lisp-Entry "cfun-conversion-exception-code" native #f 64 8 64 38 ()}
      {Lisp-Entry "cfun-conversion-exception-message" native #f 65 8 65 41 ()}
      {Lisp-Entry "cfun-conversion-exception-procedure" native #f 66 8 66 43 ()}
      {Lisp-Entry "cfun-conversion-exception?" native #f 67 8 67 34 ()}
      {Lisp-Entry "clear-bit-field" native #f 68 8 68 23 ()}
      {Lisp-Entry "close-port" native #f 69 8 69 18 ()}
      {Lisp-Entry "command-line" native #f 70 8 70 20 ()}
      {Lisp-Entry "compile-file" native #f 71 8 71 20 ()}
      {Lisp-Entry "compile-file-to-c" native #f 72 8 72 25 ()}
      {Lisp-Entry "condition-variable-broadcast!" native #f 73 8 73 37 ()}
      {Lisp-Entry "condition-variable-name" native #f 74 8 74 31 ()}
      {Lisp-Entry "condition-variable-signal!" native #f 75 8 75 34 ()}
      {Lisp-Entry "condition-variable-specific" native #f 76 8 76 35 ()}
      {Lisp-Entry "condition-variable-specific-set!" native #f 77 8 77 40 ()}
      {Lisp-Entry "condition-variable?" native #f 78 8 78 27 ()}
      {Lisp-Entry "console-port" native #f 79 8 79 20 ()}
      {Lisp-Entry "continuation-capture" native #f 80 8 80 28 ()}
      {Lisp-Entry "continuation-graft" native #f 81 8 81 26 ()}
      {Lisp-Entry "continuation-return" native #f 82 8 82 27 ()}
      {Lisp-Entry "continuation?" native #f 83 8 83 21 ()}
      {Lisp-Entry "copy-bit-field" native #f 84 8 84 22 ()}
      {Lisp-Entry "copy-file" native #f 85 8 85 17 ()}
      {Lisp-Entry "cpu-time" native #f 86 8 86 16 ()}
      {Lisp-Entry "create-directory" native #f 87 8 87 24 ()}
      {Lisp-Entry "create-fifo" native #f 88 8 88 19 ()}
      {Lisp-Entry "create-link" native #f 89 8 89 19 ()}
      {Lisp-Entry "create-symbolic-link" native #f 90 8 90 28 ()}
      {Lisp-Entry "current-directory" native #f 91 8 91 25 ()}
      {Lisp-Entry "current-error-port" native #f 92 8 92 26 ()}
      {Lisp-Entry "current-exception-handler" native #f 93 8 93 33 ()}
      {Lisp-Entry "current-readtable" native #f 94 8 94 25 ()}
      {Lisp-Entry "current-thread" native #f 95 8 95 22 ()}
      {Lisp-Entry "current-time" native #f 96 8 96 20 ()}
      {Lisp-Entry "current-user-interrupt-handler" native #f 97 8 97 38 ()}
      {Lisp-Entry "datum-parsing-exception-kind" native #f 98 8 98 36 ()}
      {Lisp-Entry "datum-parsing-exception-parameters" native #f 99 8 99 42 ()}
      {Lisp-Entry "datum-parsing-exception-readenv" native #f 100 8 100 39 ()}
      {Lisp-Entry "datum-parsing-exception?" native #f 101 8 101 32 ()}
      {Lisp-Entry "deadlock-exception?" native #f 102 8 102 27 ()}
      {Lisp-Entry "defer-user-interrupts" native #f 103 8 103 29 ()}
      {Lisp-Entry "delete-directory" native #f 104 8 104 24 ()}
      {Lisp-Entry "delete-file" native #f 105 8 105 19 ()}
      {Lisp-Entry "directory-files" native #f 106 8 106 23 ()}
      {Lisp-Entry "display-continuation-backtrace" native #f 107 8 107 38 ()}
      {Lisp-Entry "display-continuation-dynamic-environment" native #f 108 8 108 48 ()}
      {Lisp-Entry "display-continuation-environment" native #f 109 8 109 40 ()}
      {Lisp-Entry "display-dynamic-environment?" native #f 110 8 110 36 ()}
      {Lisp-Entry "display-environment-set!" native #f 111 8 111 32 ()}
      {Lisp-Entry "display-exception" native #f 112 8 112 25 ()}
      {Lisp-Entry "display-exception-in-context" native #f 113 8 113 36 ()}
      {Lisp-Entry "display-procedure-environment" native #f 114 8 114 37 ()}
      {Lisp-Entry "divide-by-zero-exception-arguments" native #f 115 8 115 42 ()}
      {Lisp-Entry "divide-by-zero-exception-procedure" native #f 116 8 116 42 ()}
      {Lisp-Entry "divide-by-zero-exception?" native #f 117 8 117 33 ()}
      {Lisp-Entry "eq?-hash" native #f 118 8 118 16 ()}
      {Lisp-Entry "equal?-hash" native #f 119 8 119 19 ()}
      {Lisp-Entry "eqv?-hash" native #f 120 8 120 17 ()}
      {Lisp-Entry "err-code->string" native #f 121 8 121 24 ()}
      {Lisp-Entry "error" native #f 122 8 122 13 ()}
      {Lisp-Entry "error-exception-message" native #f 123 8 123 31 ()}
      {Lisp-Entry "error-exception-parameters" native #f 124 8 124 34 ()}
      {Lisp-Entry "error-exception?" native #f 125 8 125 24 ()}
      {Lisp-Entry "exit" native #f 126 8 126 12 ()}
      {Lisp-Entry "expression-parsing-exception-kind" native #f 127 8 127 41 ()}
      {Lisp-Entry "expression-parsing-exception-parameters" native #f 128 8 128 47 ()}
      {Lisp-Entry "expression-parsing-exception-source" native #f 129 8 129 43 ()}
      {Lisp-Entry "expression-parsing-exception?" native #f 130 8 130 37 ()}
      {Lisp-Entry "extract-bit-field" native #f 131 8 131 25 ()}
      {Lisp-Entry "f32vector" native #f 132 8 132 17 ()}
      {Lisp-Entry "f32vector->list" native #f 133 8 133 23 ()}
      {Lisp-Entry "f32vector-append" native #f 134 8 134 24 ()}
      {Lisp-Entry "f32vector-copy" native #f 135 8 135 22 ()}
      {Lisp-Entry "f32vector-fill!" native #f 136 8 136 23 ()}
      {Lisp-Entry "f32vector-length" native #f 137 8 137 24 ()}
      {Lisp-Entry "f32vector-ref" native #f 138 8 138 21 ()}
      {Lisp-Entry "f32vector-set!" native #f 139 8 139 22 ()}
      {Lisp-Entry "f32vector?" native #f 140 8 140 18 ()}
      {Lisp-Entry "f64vector" native #f 141 8 141 17 ()}
      {Lisp-Entry "f64vector->list" native #f 142 8 142 23 ()}
      {Lisp-Entry "f64vector-append" native #f 143 8 143 24 ()}
      {Lisp-Entry "f64vector-copy" native #f 144 8 144 22 ()}
      {Lisp-Entry "f64vector-fill!" native #f 145 8 145 23 ()}
      {Lisp-Entry "f64vector-length" native #f 146 8 146 24 ()}
      {Lisp-Entry "f64vector-ref" native #f 147 8 147 21 ()}
      {Lisp-Entry "f64vector-set!" native #f 148 8 148 22 ()}
      {Lisp-Entry "f64vector?" native #f 149 8 149 18 ()}
      {Lisp-Entry "file-attributes" native #f 150 8 150 23 ()}
      {Lisp-Entry "file-creation-time" native #f 151 8 151 26 ()}
      {Lisp-Entry "file-device" native #f 152 8 152 19 ()}
      {Lisp-Entry "file-exists?" native #f 153 8 153 20 ()}
      {Lisp-Entry "file-group" native #f 154 8 154 18 ()}
      {Lisp-Entry "file-info" native #f 155 8 155 17 ()}
      {Lisp-Entry "file-info-attributes" native #f 156 8 156 28 ()}
      {Lisp-Entry "file-info-creation-time" native #f 157 8 157 31 ()}
      {Lisp-Entry "file-info-device" native #f 158 8 158 24 ()}
      {Lisp-Entry "file-info-group" native #f 159 8 159 23 ()}
      {Lisp-Entry "file-info-inode" native #f 160 8 160 23 ()}
      {Lisp-Entry "file-info-last-access-time" native #f 161 8 161 34 ()}
      {Lisp-Entry "file-info-last-change-time" native #f 162 8 162 34 ()}
      {Lisp-Entry "file-info-last-modification-time" native #f 163 8 163 40 ()}
      {Lisp-Entry "file-info-mode" native #f 164 8 164 22 ()}
      {Lisp-Entry "file-info-number-of-links" native #f 165 8 165 33 ()}
      {Lisp-Entry "file-info-owner" native #f 166 8 166 23 ()}
      {Lisp-Entry "file-info-size" native #f 167 8 167 22 ()}
      {Lisp-Entry "file-info-type" native #f 168 8 168 22 ()}
      {Lisp-Entry "file-info?" native #f 169 8 169 18 ()}
      {Lisp-Entry "file-inode" native #f 170 8 170 18 ()}
      {Lisp-Entry "file-last-access-time" native #f 171 8 171 29 ()}
      {Lisp-Entry "file-last-change-time" native #f 172 8 172 29 ()}
      {Lisp-Entry "file-last-modification-time" native #f 173 8 173 35 ()}
      {Lisp-Entry "file-mode" native #f 174 8 174 17 ()}
      {Lisp-Entry "file-number-of-links" native #f 175 8 175 28 ()}
      {Lisp-Entry "file-owner" native #f 176 8 176 18 ()}
      {Lisp-Entry "file-size" native #f 177 8 177 17 ()}
      {Lisp-Entry "file-type" native #f 178 8 178 17 ()}
      {Lisp-Entry "finite?" native #f 179 8 179 15 ()}
      {Lisp-Entry "first-bit-set" native #f 180 8 180 21 ()}
      {Lisp-Entry "fixnum->flonum" native #f 181 8 181 22 ()}
      {Lisp-Entry "fixnum-overflow-exception-arguments" native #f 182 8 182 43 ()}
      {Lisp-Entry "fixnum-overflow-exception-procedure" native #f 183 8 183 43 ()}
      {Lisp-Entry "fixnum-overflow-exception?" native #f 184 8 184 34 ()}
      {Lisp-Entry "fixnum?" native #f 185 8 185 15 ()}
      {Lisp-Entry "fl*" native #f 186 8 186 11 ()}
      {Lisp-Entry "fl+" native #f 187 8 187 11 ()}
      {Lisp-Entry "fl-" native #f 188 8 188 11 ()}
      {Lisp-Entry "fl/" native #f 189 8 189 11 ()}
      {Lisp-Entry "fl<" native #f 190 8 190 11 ()}
      {Lisp-Entry "fl<=" native #f 191 8 191 12 ()}
      {Lisp-Entry "fl=" native #f 192 8 192 11 ()}
      {Lisp-Entry "fl>" native #f 193 8 193 11 ()}
      {Lisp-Entry "fl>=" native #f 194 8 194 12 ()}
      {Lisp-Entry "flabs" native #f 195 8 195 13 ()}
      {Lisp-Entry "flacos" native #f 196 8 196 14 ()}
      {Lisp-Entry "flasin" native #f 197 8 197 14 ()}
      {Lisp-Entry "flatan" native #f 198 8 198 14 ()}
      {Lisp-Entry "flceiling" native #f 199 8 199 17 ()}
      {Lisp-Entry "flcos" native #f 200 8 200 13 ()}
      {Lisp-Entry "fldenominator" native #f 201 8 201 21 ()}
      {Lisp-Entry "fleven?" native #f 202 8 202 15 ()}
      {Lisp-Entry "flexp" native #f 203 8 203 13 ()}
      {Lisp-Entry "flexpt" native #f 204 8 204 14 ()}
      {Lisp-Entry "flfinite?" native #f 205 8 205 17 ()}
      {Lisp-Entry "flfloor" native #f 206 8 206 15 ()}
      {Lisp-Entry "flinfinite?" native #f 207 8 207 19 ()}
      {Lisp-Entry "flinteger?" native #f 208 8 208 18 ()}
      {Lisp-Entry "fllog" native #f 209 8 209 13 ()}
      {Lisp-Entry "flmax" native #f 210 8 210 13 ()}
      {Lisp-Entry "flmin" native #f 211 8 211 13 ()}
      {Lisp-Entry "flnan?" native #f 212 8 212 14 ()}
      {Lisp-Entry "flnegative?" native #f 213 8 213 19 ()}
      {Lisp-Entry "flnumerator" native #f 214 8 214 19 ()}
      {Lisp-Entry "flodd?" native #f 215 8 215 14 ()}
      {Lisp-Entry "flonum?" native #f 216 8 216 15 ()}
      {Lisp-Entry "flpositive?" native #f 217 8 217 19 ()}
      {Lisp-Entry "flround" native #f 218 8 218 15 ()}
      {Lisp-Entry "flsin" native #f 219 8 219 13 ()}
      {Lisp-Entry "flsqrt" native #f 220 8 220 14 ()}
      {Lisp-Entry "fltan" native #f 221 8 221 13 ()}
      {Lisp-Entry "fltruncate" native #f 222 8 222 18 ()}
      {Lisp-Entry "flzero?" native #f 223 8 223 15 ()}
      {Lisp-Entry "force-output" native #f 224 8 224 20 ()}
      {Lisp-Entry "foreign-address" native #f 225 8 225 23 ()}
      {Lisp-Entry "foreign-release!" native #f 226 8 226 24 ()}
      {Lisp-Entry "foreign-released?" native #f 227 8 227 25 ()}
      {Lisp-Entry "foreign-tags" native #f 228 8 228 20 ()}
      {Lisp-Entry "foreign?" native #f 229 8 229 16 ()}
      {Lisp-Entry "fx*" native #f 230 8 230 11 ()}
      {Lisp-Entry "fx+" native #f 231 8 231 11 ()}
      {Lisp-Entry "fx-" native #f 232 8 232 11 ()}
      {Lisp-Entry "fx<" native #f 233 8 233 11 ()}
      {Lisp-Entry "fx<=" native #f 234 8 234 12 ()}
      {Lisp-Entry "fx=" native #f 235 8 235 11 ()}
      {Lisp-Entry "fx>" native #f 236 8 236 11 ()}
      {Lisp-Entry "fx>=" native #f 237 8 237 12 ()}
      {Lisp-Entry "fxabs" native #f 238 8 238 13 ()}
      {Lisp-Entry "fxand" native #f 239 8 239 13 ()}
      {Lisp-Entry "fxarithmetic-shift" native #f 240 8 240 26 ()}
      {Lisp-Entry "fxarithmetic-shift-left" native #f 241 8 241 31 ()}
      {Lisp-Entry "fxarithmetic-shift-right" native #f 242 8 242 32 ()}
      {Lisp-Entry "fxbit-count" native #f 243 8 243 19 ()}
      {Lisp-Entry "fxbit-set?" native #f 244 8 244 18 ()}
      {Lisp-Entry "fxeven?" native #f 245 8 245 15 ()}
      {Lisp-Entry "fxfirst-bit-set" native #f 246 8 246 23 ()}
      {Lisp-Entry "fxif" native #f 247 8 247 12 ()}
      {Lisp-Entry "fxior" native #f 248 8 248 13 ()}
      {Lisp-Entry "fxlength" native #f 249 8 249 16 ()}
      {Lisp-Entry "fxmax" native #f 250 8 250 13 ()}
      {Lisp-Entry "fxmin" native #f 251 8 251 13 ()}
      {Lisp-Entry "fxmodulo" native #f 252 8 252 16 ()}
      {Lisp-Entry "fxnegative?" native #f 253 8 253 19 ()}
      {Lisp-Entry "fxnot" native #f 254 8 254 13 ()}
      {Lisp-Entry "fxodd?" native #f 255 8 255 14 ()}
      {Lisp-Entry "fxpositive?" native #f 256 8 256 19 ()}
      {Lisp-Entry "fxquotient" native #f 257 8 257 18 ()}
      {Lisp-Entry "fxremainder" native #f 258 8 258 19 ()}
      {Lisp-Entry "fxwrap*" native #f 259 8 259 15 ()}
      {Lisp-Entry "fxwrap+" native #f 260 8 260 15 ()}
      {Lisp-Entry "fxwrap-" native #f 261 8 261 15 ()}
      {Lisp-Entry "fxwrapabs" native #f 262 8 262 17 ()}
      {Lisp-Entry "fxwraparithmetic-shift" native #f 263 8 263 30 ()}
      {Lisp-Entry "fxwraparithmetic-shift-left" native #f 264 8 264 35 ()}
      {Lisp-Entry "fxwraplogical-shift-right" native #f 265 8 265 33 ()}
      {Lisp-Entry "fxwrapquotient" native #f 266 8 266 22 ()}
      {Lisp-Entry "fxxor" native #f 267 8 267 13 ()}
      {Lisp-Entry "fxzero?" native #f 268 8 268 15 ()}
      {Lisp-Entry "gc-report-set!" native #f 269 8 269 22 ()}
      {Lisp-Entry "generate-proper-tail-calls" native #f 270 8 270 34 ()}
      {Lisp-Entry "gensym" native #f 271 8 271 14 ()}
      {Lisp-Entry "get-output-string" native #f 272 8 272 25 ()}
      {Lisp-Entry "get-output-u8vector" native #f 273 8 273 27 ()}
      {Lisp-Entry "get-output-vector" native #f 274 8 274 25 ()}
      {Lisp-Entry "getenv" native #f 275 8 275 14 ()}
      {Lisp-Entry "group-info" native #f 276 8 276 18 ()}
      {Lisp-Entry "group-info-gid" native #f 277 8 277 22 ()}
      {Lisp-Entry "group-info-members" native #f 278 8 278 26 ()}
      {Lisp-Entry "group-info-name" native #f 279 8 279 23 ()}
      {Lisp-Entry "group-info?" native #f 280 8 280 19 ()}
      {Lisp-Entry "heap-overflow-exception?" native #f 281 8 281 32 ()}
      {Lisp-Entry "host-info" native #f 282 8 282 17 ()}
      {Lisp-Entry "host-info-addresses" native #f 283 8 283 27 ()}
      {Lisp-Entry "host-info-aliases" native #f 284 8 284 25 ()}
      {Lisp-Entry "host-info-name" native #f 285 8 285 22 ()}
      {Lisp-Entry "host-info?" native #f 286 8 286 18 ()}
      {Lisp-Entry "host-name" native #f 287 8 287 17 ()}
      {Lisp-Entry "improper-length-list-exception-arg-num" native #f 288 8 288 46 ()}
      {Lisp-Entry "improper-length-list-exception-arguments" native #f 289 8 289 48 ()}
      {Lisp-Entry "improper-length-list-exception-procedure" native #f 290 8 290 48 ()}
      {Lisp-Entry "improper-length-list-exception?" native #f 291 8 291 39 ()}
      {Lisp-Entry "inactive-thread-exception-arguments" native #f 292 8 292 43 ()}
      {Lisp-Entry "inactive-thread-exception-procedure" native #f 293 8 293 43 ()}
      {Lisp-Entry "inactive-thread-exception?" native #f 294 8 294 34 ()}
      {Lisp-Entry "infinite?" native #f 295 8 295 17 ()}
      {Lisp-Entry "initialized-thread-exception-arguments" native #f 296 8 296 46 ()}
      {Lisp-Entry "initialized-thread-exception-procedure" native #f 297 8 297 46 ()}
      {Lisp-Entry "initialized-thread-exception?" native #f 298 8 298 37 ()}
      {Lisp-Entry "input-port-byte-position" native #f 299 8 299 32 ()}
      {Lisp-Entry "input-port-bytes-buffered" native #f 300 8 300 33 ()}
      {Lisp-Entry "input-port-char-position" native #f 301 8 301 32 ()}
      {Lisp-Entry "input-port-characters-buffered" native #f 302 8 302 38 ()}
      {Lisp-Entry "input-port-column" native #f 303 8 303 25 ()}
      {Lisp-Entry "input-port-line" native #f 304 8 304 23 ()}
      {Lisp-Entry "input-port-readtable" native #f 305 8 305 28 ()}
      {Lisp-Entry "input-port-readtable-set!" native #f 306 8 306 33 ()}
      {Lisp-Entry "input-port-timeout-set!" native #f 307 8 307 31 ()}
      {Lisp-Entry "integer-length" native #f 308 8 308 22 ()}
      {Lisp-Entry "integer-nth-root" native #f 309 8 309 24 ()}
      {Lisp-Entry "integer-sqrt" native #f 310 8 310 20 ()}
      {Lisp-Entry "invalid-hash-number-exception-arguments" native #f 311 8 311 47 ()}
      {Lisp-Entry "invalid-hash-number-exception-procedure" native #f 312 8 312 47 ()}
      {Lisp-Entry "invalid-hash-number-exception?" native #f 313 8 313 38 ()}
      {Lisp-Entry "join-timeout-exception-arguments" native #f 314 8 314 40 ()}
      {Lisp-Entry "join-timeout-exception-procedure" native #f 315 8 315 40 ()}
      {Lisp-Entry "join-timeout-exception?" native #f 316 8 316 31 ()}
      {Lisp-Entry "keyword->string" native #f 317 8 317 23 ()}
      {Lisp-Entry "keyword-expected-exception-arguments" native #f 318 8 318 44 ()}
      {Lisp-Entry "keyword-expected-exception-procedure" native #f 319 8 319 44 ()}
      {Lisp-Entry "keyword-expected-exception?" native #f 320 8 320 35 ()}
      {Lisp-Entry "keyword-hash" native #f 321 8 321 20 ()}
      {Lisp-Entry "keyword?" native #f 322 8 322 16 ()}
      {Lisp-Entry "link-flat" native #f 323 8 323 17 ()}
      {Lisp-Entry "link-incremental" native #f 324 8 324 24 ()}
      {Lisp-Entry "list->f32vector" native #f 325 8 325 23 ()}
      {Lisp-Entry "list->f64vector" native #f 326 8 326 23 ()}
      {Lisp-Entry "list->s16vector" native #f 327 8 327 23 ()}
      {Lisp-Entry "list->s32vector" native #f 328 8 328 23 ()}
      {Lisp-Entry "list->s64vector" native #f 329 8 329 23 ()}
      {Lisp-Entry "list->s8vector" native #f 330 8 330 22 ()}
      {Lisp-Entry "list->table" native #f 331 8 331 19 ()}
      {Lisp-Entry "list->u16vector" native #f 332 8 332 23 ()}
      {Lisp-Entry "list->u32vector" native #f 333 8 333 23 ()}
      {Lisp-Entry "list->u64vector" native #f 334 8 334 23 ()}
      {Lisp-Entry "list->u8vector" native #f 335 8 335 22 ()}
      {Lisp-Entry "mailbox-receive-timeout-exception-arguments" native #f 336 8 336 51 ()}
      {Lisp-Entry "mailbox-receive-timeout-exception-procedure" native #f 337 8 337 51 ()}
      {Lisp-Entry "mailbox-receive-timeout-exception?" native #f 338 8 338 42 ()}
      {Lisp-Entry "main" native #f 339 8 339 12 ()}
      {Lisp-Entry "make-condition-variable" native #f 340 8 340 31 ()}
      {Lisp-Entry "make-f32vector" native #f 341 8 341 22 ()}
      {Lisp-Entry "make-f64vector" native #f 342 8 342 22 ()}
      {Lisp-Entry "make-mutex" native #f 343 8 343 18 ()}
      {Lisp-Entry "make-parameter" native #f 344 8 344 22 ()}
      {Lisp-Entry "make-random-source" native #f 345 8 345 26 ()}
      {Lisp-Entry "make-root-thread" native #f 346 8 346 24 ()}
      {Lisp-Entry "make-s16vector" native #f 347 8 347 22 ()}
      {Lisp-Entry "make-s32vector" native #f 348 8 348 22 ()}
      {Lisp-Entry "make-s64vector" native #f 349 8 349 22 ()}
      {Lisp-Entry "make-s8vector" native #f 350 8 350 21 ()}
      {Lisp-Entry "make-table" native #f 351 8 351 18 ()}
      {Lisp-Entry "make-thread" native #f 352 8 352 19 ()}
      {Lisp-Entry "make-thread-group" native #f 353 8 353 25 ()}
      {Lisp-Entry "make-u16vector" native #f 354 8 354 22 ()}
      {Lisp-Entry "make-u32vector" native #f 355 8 355 22 ()}
      {Lisp-Entry "make-u64vector" native #f 356 8 356 22 ()}
      {Lisp-Entry "make-u8vector" native #f 357 8 357 21 ()}
      {Lisp-Entry "make-uninterned-keyword" native #f 358 8 358 31 ()}
      {Lisp-Entry "make-uninterned-symbol" native #f 359 8 359 30 ()}
      {Lisp-Entry "make-will" native #f 360 8 360 17 ()}
      {Lisp-Entry "multiple-c-return-exception?" native #f 361 8 361 36 ()}
      {Lisp-Entry "mutex-lock!" native #f 362 8 362 19 ()}
      {Lisp-Entry "mutex-name" native #f 363 8 363 18 ()}
      {Lisp-Entry "mutex-specific" native #f 364 8 364 22 ()}
      {Lisp-Entry "mutex-specific-set!" native #f 365 8 365 27 ()}
      {Lisp-Entry "mutex-state" native #f 366 8 366 19 ()}
      {Lisp-Entry "mutex-unlock!" native #f 367 8 367 21 ()}
      {Lisp-Entry "mutex?" native #f 368 8 368 14 ()}
      {Lisp-Entry "nan?" native #f 369 8 369 12 ()}
      {Lisp-Entry "network-info" native #f 370 8 370 20 ()}
      {Lisp-Entry "network-info-aliases" native #f 371 8 371 28 ()}
      {Lisp-Entry "network-info-name" native #f 372 8 372 25 ()}
      {Lisp-Entry "network-info-number" native #f 373 8 373 27 ()}
      {Lisp-Entry "network-info?" native #f 374 8 374 21 ()}
      {Lisp-Entry "no-such-file-or-directory-exception-arguments" native #f 375 8 375 53 ()}
      {Lisp-Entry "no-such-file-or-directory-exception-procedure" native #f 376 8 376 53 ()}
      {Lisp-Entry "no-such-file-or-directory-exception?" native #f 377 8 377 44 ()}
      {Lisp-Entry "noncontinuable-exception-reason" native #f 378 8 378 39 ()}
      {Lisp-Entry "noncontinuable-exception?" native #f 379 8 379 33 ()}
      {Lisp-Entry "nonempty-input-port-character-buffer-exception-arguments" native #f 380 8 380 64 ()}
      {Lisp-Entry "nonempty-input-port-character-buffer-exception-procedure" native #f 381 8 381 64 ()}
      {Lisp-Entry "nonempty-input-port-character-buffer-exception?" native #f 382 8 382 55 ()}
      {Lisp-Entry "nonprocedure-operator-exception-arguments" native #f 383 8 383 49 ()}
      {Lisp-Entry "nonprocedure-operator-exception-code" native #f 384 8 384 44 ()}
      {Lisp-Entry "nonprocedure-operator-exception-operator" native #f 385 8 385 48 ()}
      {Lisp-Entry "nonprocedure-operator-exception-rte" native #f 386 8 386 43 ()}
      {Lisp-Entry "nonprocedure-operator-exception?" native #f 387 8 387 40 ()}
      {Lisp-Entry "number-of-arguments-limit-exception-arguments" native #f 388 8 388 53 ()}
      {Lisp-Entry "number-of-arguments-limit-exception-procedure" native #f 389 8 389 53 ()}
      {Lisp-Entry "number-of-arguments-limit-exception?" native #f 390 8 390 44 ()}
      {Lisp-Entry "object->serial-number" native #f 391 8 391 29 ()}
      {Lisp-Entry "object->string" native #f 392 8 392 22 ()}
      {Lisp-Entry "object->u8vector" native #f 393 8 393 24 ()}
      {Lisp-Entry "open-directory" native #f 394 8 394 22 ()}
      {Lisp-Entry "open-dummy" native #f 395 8 395 18 ()}
      {Lisp-Entry "open-event-queue" native #f 396 8 396 24 ()}
      {Lisp-Entry "open-file" native #f 397 8 397 17 ()}
      {Lisp-Entry "open-input-string" native #f 398 8 398 25 ()}
      {Lisp-Entry "open-input-u8vector" native #f 399 8 399 27 ()}
      {Lisp-Entry "open-input-vector" native #f 400 8 400 25 ()}
      {Lisp-Entry "open-output-string" native #f 401 8 401 26 ()}
      {Lisp-Entry "open-output-u8vector" native #f 402 8 402 28 ()}
      {Lisp-Entry "open-output-vector" native #f 403 8 403 26 ()}
      {Lisp-Entry "open-process" native #f 404 8 404 20 ()}
      {Lisp-Entry "open-string" native #f 405 8 405 19 ()}
      {Lisp-Entry "open-string-pipe" native #f 406 8 406 24 ()}
      {Lisp-Entry "open-tcp-client" native #f 407 8 407 23 ()}
      {Lisp-Entry "open-tcp-server" native #f 408 8 408 23 ()}
      {Lisp-Entry "open-u8vector" native #f 409 8 409 21 ()}
      {Lisp-Entry "open-u8vector-pipe" native #f 410 8 410 26 ()}
      {Lisp-Entry "open-vector" native #f 411 8 411 19 ()}
      {Lisp-Entry "open-vector-pipe" native #f 412 8 412 24 ()}
      {Lisp-Entry "os-exception-arguments" native #f 413 8 413 30 ()}
      {Lisp-Entry "os-exception-code" native #f 414 8 414 25 ()}
      {Lisp-Entry "os-exception-message" native #f 415 8 415 28 ()}
      {Lisp-Entry "os-exception-procedure" native #f 416 8 416 30 ()}
      {Lisp-Entry "os-exception?" native #f 417 8 417 21 ()}
      {Lisp-Entry "output-port-byte-position" native #f 418 8 418 33 ()}
      {Lisp-Entry "output-port-char-position" native #f 419 8 419 33 ()}
      {Lisp-Entry "output-port-column" native #f 420 8 420 26 ()}
      {Lisp-Entry "output-port-line" native #f 421 8 421 24 ()}
      {Lisp-Entry "output-port-readtable" native #f 422 8 422 29 ()}
      {Lisp-Entry "output-port-readtable-set!" native #f 423 8 423 34 ()}
      {Lisp-Entry "output-port-timeout-set!" native #f 424 8 424 32 ()}
      {Lisp-Entry "output-port-width" native #f 425 8 425 25 ()}
      {Lisp-Entry "path-directory" native #f 426 8 426 22 ()}
      {Lisp-Entry "path-expand" native #f 427 8 427 19 ()}
      {Lisp-Entry "path-extension" native #f 428 8 428 22 ()}
      {Lisp-Entry "path-normalize" native #f 429 8 429 22 ()}
      {Lisp-Entry "path-strip-directory" native #f 430 8 430 28 ()}
      {Lisp-Entry "path-strip-extension" native #f 431 8 431 28 ()}
      {Lisp-Entry "path-strip-trailing-directory-separator" native #f 432 8 432 47 ()}
      {Lisp-Entry "path-strip-volume" native #f 433 8 433 25 ()}
      {Lisp-Entry "path-volume" native #f 434 8 434 19 ()}
      {Lisp-Entry "port-settings-set!" native #f 435 8 435 26 ()}
      {Lisp-Entry "port?" native #f 436 8 436 13 ()}
      {Lisp-Entry "pp" native #f 437 8 437 10 ()}
      {Lisp-Entry "pretty-print" native #f 438 8 438 20 ()}
      {Lisp-Entry "primordial-exception-handler" native #f 439 8 439 36 ()}
      {Lisp-Entry "print" native #f 440 8 440 13 ()}
      {Lisp-Entry "println" native #f 441 8 441 15 ()}
      {Lisp-Entry "process-pid" native #f 442 8 442 19 ()}
      {Lisp-Entry "process-status" native #f 443 8 443 22 ()}
      {Lisp-Entry "process-times" native #f 444 8 444 21 ()}
      {Lisp-Entry "protocol-info" native #f 445 8 445 21 ()}
      {Lisp-Entry "protocol-info-aliases" native #f 446 8 446 29 ()}
      {Lisp-Entry "protocol-info-name" native #f 447 8 447 26 ()}
      {Lisp-Entry "protocol-info-number" native #f 448 8 448 28 ()}
      {Lisp-Entry "protocol-info?" native #f 449 8 449 22 ()}
      {Lisp-Entry "raise" native #f 450 8 450 13 ()}
      {Lisp-Entry "random-f64vector" native #f 451 8 451 24 ()}
      {Lisp-Entry "random-integer" native #f 452 8 452 22 ()}
      {Lisp-Entry "random-real" native #f 453 8 453 19 ()}
      {Lisp-Entry "random-source-make-f64vectors" native #f 454 8 454 37 ()}
      {Lisp-Entry "random-source-make-integers" native #f 455 8 455 35 ()}
      {Lisp-Entry "random-source-make-reals" native #f 456 8 456 32 ()}
      {Lisp-Entry "random-source-make-u8vectors" native #f 457 8 457 36 ()}
      {Lisp-Entry "random-source-pseudo-randomize!" native #f 458 8 458 39 ()}
      {Lisp-Entry "random-source-randomize!" native #f 459 8 459 32 ()}
      {Lisp-Entry "random-source-state-ref" native #f 460 8 460 31 ()}
      {Lisp-Entry "random-source-state-set!" native #f 461 8 461 32 ()}
      {Lisp-Entry "random-source?" native #f 462 8 462 22 ()}
      {Lisp-Entry "random-u8vector" native #f 463 8 463 23 ()}
      {Lisp-Entry "range-exception-arg-num" native #f 464 8 464 31 ()}
      {Lisp-Entry "range-exception-arguments" native #f 465 8 465 33 ()}
      {Lisp-Entry "range-exception-procedure" native #f 466 8 466 33 ()}
      {Lisp-Entry "range-exception?" native #f 467 8 467 24 ()}
      {Lisp-Entry "read-all" native #f 468 8 468 16 ()}
      {Lisp-Entry "read-line" native #f 469 8 469 17 ()}
      {Lisp-Entry "read-substring" native #f 470 8 470 22 ()}
      {Lisp-Entry "read-subu8vector" native #f 471 8 471 24 ()}
      {Lisp-Entry "read-u8" native #f 472 8 472 15 ()}
      {Lisp-Entry "readtable-case-conversion?" native #f 473 8 473 34 ()}
      {Lisp-Entry "readtable-case-conversion?-set" native #f 474 8 474 38 ()}
      {Lisp-Entry "readtable-eval-allowed?" native #f 475 8 475 31 ()}
      {Lisp-Entry "readtable-eval-allowed?-set" native #f 476 8 476 35 ()}
      {Lisp-Entry "readtable-keywords-allowed?" native #f 477 8 477 35 ()}
      {Lisp-Entry "readtable-keywords-allowed?-set" native #f 478 8 478 39 ()}
      {Lisp-Entry "readtable-max-unescaped-char" native #f 479 8 479 36 ()}
      {Lisp-Entry "readtable-max-unescaped-char-set" native #f 480 8 480 40 ()}
      {Lisp-Entry "readtable-max-write-length" native #f 481 8 481 34 ()}
      {Lisp-Entry "readtable-max-write-length-set" native #f 482 8 482 38 ()}
      {Lisp-Entry "readtable-max-write-level" native #f 483 8 483 33 ()}
      {Lisp-Entry "readtable-max-write-level-set" native #f 484 8 484 37 ()}
      {Lisp-Entry "readtable-sharing-allowed?" native #f 485 8 485 34 ()}
      {Lisp-Entry "readtable-sharing-allowed?-set" native #f 486 8 486 38 ()}
      {Lisp-Entry "readtable-start-syntax" native #f 487 8 487 30 ()}
      {Lisp-Entry "readtable-start-syntax-set" native #f 488 8 488 34 ()}
      {Lisp-Entry "readtable-write-cdr-read-macros?" native #f 489 8 489 40 ()}
      {Lisp-Entry "readtable-write-cdr-read-macros?-set" native #f 490 8 490 44 ()}
      {Lisp-Entry "readtable-write-extended-read-macros?" native #f 491 8 491 45 ()}
      {Lisp-Entry "readtable-write-extended-read-macros?-set" native #f 492 8 492 49 ()}
      {Lisp-Entry "readtable?" native #f 493 8 493 18 ()}
      {Lisp-Entry "real-time" native #f 494 8 494 17 ()}
      {Lisp-Entry "rename-file" native #f 495 8 495 19 ()}
      {Lisp-Entry "repl-display-environment?" native #f 496 8 496 33 ()}
      {Lisp-Entry "repl-input-port" native #f 497 8 497 23 ()}
      {Lisp-Entry "repl-output-port" native #f 498 8 498 24 ()}
      {Lisp-Entry "repl-result-history-max-length-set!" native #f 499 8 499 43 ()}
      {Lisp-Entry "repl-result-history-ref" native #f 500 8 500 31 ()}
      {Lisp-Entry "replace-bit-field" native #f 501 8 501 25 ()}
      {Lisp-Entry "rpc-remote-error-exception-arguments" native #f 502 8 502 44 ()}
      {Lisp-Entry "rpc-remote-error-exception-message" native #f 503 8 503 42 ()}
      {Lisp-Entry "rpc-remote-error-exception-procedure" native #f 504 8 504 44 ()}
      {Lisp-Entry "rpc-remote-error-exception?" native #f 505 8 505 35 ()}
      {Lisp-Entry "s16vector" native #f 506 8 506 17 ()}
      {Lisp-Entry "s16vector->list" native #f 507 8 507 23 ()}
      {Lisp-Entry "s16vector-append" native #f 508 8 508 24 ()}
      {Lisp-Entry "s16vector-copy" native #f 509 8 509 22 ()}
      {Lisp-Entry "s16vector-fill!" native #f 510 8 510 23 ()}
      {Lisp-Entry "s16vector-length" native #f 511 8 511 24 ()}
      {Lisp-Entry "s16vector-ref" native #f 512 8 512 21 ()}
      {Lisp-Entry "s16vector-set!" native #f 513 8 513 22 ()}
      {Lisp-Entry "s16vector?" native #f 514 8 514 18 ()}
      {Lisp-Entry "s32vector" native #f 515 8 515 17 ()}
      {Lisp-Entry "s32vector->list" native #f 516 8 516 23 ()}
      {Lisp-Entry "s32vector-append" native #f 517 8 517 24 ()}
      {Lisp-Entry "s32vector-copy" native #f 518 8 518 22 ()}
      {Lisp-Entry "s32vector-fill!" native #f 519 8 519 23 ()}
      {Lisp-Entry "s32vector-length" native #f 520 8 520 24 ()}
      {Lisp-Entry "s32vector-ref" native #f 521 8 521 21 ()}
      {Lisp-Entry "s32vector-set!" native #f 522 8 522 22 ()}
      {Lisp-Entry "s32vector?" native #f 523 8 523 18 ()}
      {Lisp-Entry "s64vector" native #f 524 8 524 17 ()}
      {Lisp-Entry "s64vector->list" native #f 525 8 525 23 ()}
      {Lisp-Entry "s64vector-append" native #f 526 8 526 24 ()}
      {Lisp-Entry "s64vector-copy" native #f 527 8 527 22 ()}
      {Lisp-Entry "s64vector-fill!" native #f 528 8 528 23 ()}
      {Lisp-Entry "s64vector-length" native #f 529 8 529 24 ()}
      {Lisp-Entry "s64vector-ref" native #f 530 8 530 21 ()}
      {Lisp-Entry "s64vector-set!" native #f 531 8 531 22 ()}
      {Lisp-Entry "s64vector?" native #f 532 8 532 18 ()}
      {Lisp-Entry "s8vector" native #f 533 8 533 16 ()}
      {Lisp-Entry "s8vector->list" native #f 534 8 534 22 ()}
      {Lisp-Entry "s8vector-append" native #f 535 8 535 23 ()}
      {Lisp-Entry "s8vector-copy" native #f 536 8 536 21 ()}
      {Lisp-Entry "s8vector-fill!" native #f 537 8 537 22 ()}
      {Lisp-Entry "s8vector-length" native #f 538 8 538 23 ()}
      {Lisp-Entry "s8vector-ref" native #f 539 8 539 20 ()}
      {Lisp-Entry "s8vector-set!" native #f 540 8 540 21 ()}
      {Lisp-Entry "s8vector?" native #f 541 8 541 17 ()}
      {Lisp-Entry "scheduler-exception-reason" native #f 542 8 542 34 ()}
      {Lisp-Entry "scheduler-exception?" native #f 543 8 543 28 ()}
      {Lisp-Entry "seconds->time" native #f 544 8 544 21 ()}
      {Lisp-Entry "serial-number->object" native #f 545 8 545 29 ()}
      {Lisp-Entry "service-info" native #f 546 8 546 20 ()}
      {Lisp-Entry "service-info-aliases" native #f 547 8 547 28 ()}
      {Lisp-Entry "service-info-name" native #f 548 8 548 25 ()}
      {Lisp-Entry "service-info-port-number" native #f 549 8 549 32 ()}
      {Lisp-Entry "service-info-protocol" native #f 550 8 550 29 ()}
      {Lisp-Entry "service-info?" native #f 551 8 551 21 ()}
      {Lisp-Entry "set-box!" native #f 552 8 552 16 ()}
      {Lisp-Entry "setenv" native #f 553 8 553 14 ()}
      {Lisp-Entry "sfun-conversion-exception-arguments" native #f 554 8 554 43 ()}
      {Lisp-Entry "sfun-conversion-exception-code" native #f 555 8 555 38 ()}
      {Lisp-Entry "sfun-conversion-exception-message" native #f 556 8 556 41 ()}
      {Lisp-Entry "sfun-conversion-exception-procedure" native #f 557 8 557 43 ()}
      {Lisp-Entry "sfun-conversion-exception?" native #f 558 8 558 34 ()}
      {Lisp-Entry "shell-command" native #f 559 8 559 21 ()}
      {Lisp-Entry "socket-info-address" native #f 560 8 560 27 ()}
      {Lisp-Entry "socket-info-family" native #f 561 8 561 26 ()}
      {Lisp-Entry "socket-info-port-number" native #f 562 8 562 31 ()}
      {Lisp-Entry "socket-info?" native #f 563 8 563 20 ()}
      {Lisp-Entry "stack-overflow-exception?" native #f 564 8 564 33 ()}
      {Lisp-Entry "started-thread-exception-arguments" native #f 565 8 565 42 ()}
      {Lisp-Entry "started-thread-exception-procedure" native #f 566 8 566 42 ()}
      {Lisp-Entry "started-thread-exception?" native #f 567 8 567 33 ()}
      {Lisp-Entry "step" native #f 568 8 568 12 ()}
      {Lisp-Entry "step-level-set!" native #f 569 8 569 23 ()}
      {Lisp-Entry "string->keyword" native #f 570 8 570 23 ()}
      {Lisp-Entry "string-ci=?-hash" native #f 571 8 571 24 ()}
      {Lisp-Entry "string=?-hash" native #f 572 8 572 21 ()}
      {Lisp-Entry "subf32vector" native #f 573 8 573 20 ()}
      {Lisp-Entry "subf64vector" native #f 574 8 574 20 ()}
      {Lisp-Entry "subs16vector" native #f 575 8 575 20 ()}
      {Lisp-Entry "subs32vector" native #f 576 8 576 20 ()}
      {Lisp-Entry "subs64vector" native #f 577 8 577 20 ()}
      {Lisp-Entry "subs8vector" native #f 578 8 578 19 ()}
      {Lisp-Entry "subu16vector" native #f 579 8 579 20 ()}
      {Lisp-Entry "subu32vector" native #f 580 8 580 20 ()}
      {Lisp-Entry "subu64vector" native #f 581 8 581 20 ()}
      {Lisp-Entry "subu8vector" native #f 582 8 582 19 ()}
      {Lisp-Entry "subvector" native #f 583 8 583 17 ()}
      {Lisp-Entry "symbol-hash" native #f 584 8 584 19 ()}
      {Lisp-Entry "system-stamp" native #f 585 8 585 20 ()}
      {Lisp-Entry "system-type" native #f 586 8 586 19 ()}
      {Lisp-Entry "system-type-string" native #f 587 8 587 26 ()}
      {Lisp-Entry "system-version" native #f 588 8 588 22 ()}
      {Lisp-Entry "system-version-string" native #f 589 8 589 29 ()}
      {Lisp-Entry "table->list" native #f 590 8 590 19 ()}
      {Lisp-Entry "table-copy" native #f 591 8 591 18 ()}
      {Lisp-Entry "table-for-each" native #f 592 8 592 22 ()}
      {Lisp-Entry "table-length" native #f 593 8 593 20 ()}
      {Lisp-Entry "table-merge" native #f 594 8 594 19 ()}
      {Lisp-Entry "table-merge!" native #f 595 8 595 20 ()}
      {Lisp-Entry "table-ref" native #f 596 8 596 17 ()}
      {Lisp-Entry "table-search" native #f 597 8 597 20 ()}
      {Lisp-Entry "table-set!" native #f 598 8 598 18 ()}
      {Lisp-Entry "table?" native #f 599 8 599 14 ()}
      {Lisp-Entry "tcp-client-peer-socket-info" native #f 600 8 600 35 ()}
      {Lisp-Entry "tcp-client-self-socket-info" native #f 601 8 601 35 ()}
      {Lisp-Entry "tcp-server-socket-info" native #f 602 8 602 30 ()}
      {Lisp-Entry "tcp-service-register!" native #f 603 8 603 29 ()}
      {Lisp-Entry "tcp-service-unregister!" native #f 604 8 604 31 ()}
      {Lisp-Entry "terminated-thread-exception-arguments" native #f 605 8 605 45 ()}
      {Lisp-Entry "terminated-thread-exception-procedure" native #f 606 8 606 45 ()}
      {Lisp-Entry "terminated-thread-exception?" native #f 607 8 607 36 ()}
      {Lisp-Entry "test-bit-field?" native #f 608 8 608 23 ()}
      {Lisp-Entry "thread-base-priority" native #f 609 8 609 28 ()}
      {Lisp-Entry "thread-base-priority-set!" native #f 610 8 610 33 ()}
      {Lisp-Entry "thread-group->thread-group-list" native #f 611 8 611 39 ()}
      {Lisp-Entry "thread-group->thread-group-vector" native #f 612 8 612 41 ()}
      {Lisp-Entry "thread-group->thread-list" native #f 613 8 613 33 ()}
      {Lisp-Entry "thread-group->thread-vector" native #f 614 8 614 35 ()}
      {Lisp-Entry "thread-group-name" native #f 615 8 615 25 ()}
      {Lisp-Entry "thread-group-parent" native #f 616 8 616 27 ()}
      {Lisp-Entry "thread-group-resume!" native #f 617 8 617 28 ()}
      {Lisp-Entry "thread-group-suspend!" native #f 618 8 618 29 ()}
      {Lisp-Entry "thread-group-terminate!" native #f 619 8 619 31 ()}
      {Lisp-Entry "thread-group?" native #f 620 8 620 21 ()}
      {Lisp-Entry "thread-init!" native #f 621 8 621 20 ()}
      {Lisp-Entry "thread-interrupt!" native #f 622 8 622 25 ()}
      {Lisp-Entry "thread-join!" native #f 623 8 623 20 ()}
      {Lisp-Entry "thread-mailbox-extract-and-rewind" native #f 624 8 624 41 ()}
      {Lisp-Entry "thread-mailbox-next" native #f 625 8 625 27 ()}
      {Lisp-Entry "thread-mailbox-rewind" native #f 626 8 626 29 ()}
      {Lisp-Entry "thread-name" native #f 627 8 627 19 ()}
      {Lisp-Entry "thread-priority-boost" native #f 628 8 628 29 ()}
      {Lisp-Entry "thread-priority-boost-set!" native #f 629 8 629 34 ()}
      {Lisp-Entry "thread-quantum" native #f 630 8 630 22 ()}
      {Lisp-Entry "thread-quantum-set!" native #f 631 8 631 27 ()}
      {Lisp-Entry "thread-receive" native #f 632 8 632 22 ()}
      {Lisp-Entry "thread-resume!" native #f 633 8 633 22 ()}
      {Lisp-Entry "thread-send" native #f 634 8 634 19 ()}
      {Lisp-Entry "thread-sleep!" native #f 635 8 635 21 ()}
      {Lisp-Entry "thread-specific" native #f 636 8 636 23 ()}
      {Lisp-Entry "thread-specific-set!" native #f 637 8 637 28 ()}
      {Lisp-Entry "thread-start!" native #f 638 8 638 21 ()}
      {Lisp-Entry "thread-state" native #f 639 8 639 20 ()}
      {Lisp-Entry "thread-state-abnormally-terminated-reason" native #f 640 8 640 49 ()}
      {Lisp-Entry "thread-state-abnormally-terminated?" native #f 641 8 641 43 ()}
      {Lisp-Entry "thread-state-active-timeout" native #f 642 8 642 35 ()}
      {Lisp-Entry "thread-state-active-waiting-for" native #f 643 8 643 39 ()}
      {Lisp-Entry "thread-state-active?" native #f 644 8 644 28 ()}
      {Lisp-Entry "thread-state-initialized?" native #f 645 8 645 33 ()}
      {Lisp-Entry "thread-state-normally-terminated-result" native #f 646 8 646 47 ()}
      {Lisp-Entry "thread-state-normally-terminated?" native #f 647 8 647 41 ()}
      {Lisp-Entry "thread-state-uninitialized?" native #f 648 8 648 35 ()}
      {Lisp-Entry "thread-suspend!" native #f 649 8 649 23 ()}
      {Lisp-Entry "thread-terminate!" native #f 650 8 650 25 ()}
      {Lisp-Entry "thread-thread-group" native #f 651 8 651 27 ()}
      {Lisp-Entry "thread-yield!" native #f 652 8 652 21 ()}
      {Lisp-Entry "thread?" native #f 653 8 653 15 ()}
      {Lisp-Entry "time->seconds" native #f 654 8 654 21 ()}
      {Lisp-Entry "time?" native #f 655 8 655 13 ()}
      {Lisp-Entry "timeout->time" native #f 656 8 656 21 ()}
      {Lisp-Entry "top" native #f 657 8 657 11 ()}
      {Lisp-Entry "touch" native #f 658 8 658 13 ()}
      {Lisp-Entry "trace" native #f 659 8 659 13 ()}
      {Lisp-Entry "tty-history" native #f 660 8 660 19 ()}
      {Lisp-Entry "tty-history-max-length-set!" native #f 661 8 661 35 ()}
      {Lisp-Entry "tty-history-set!" native #f 662 8 662 24 ()}
      {Lisp-Entry "tty-mode-set!" native #f 663 8 663 21 ()}
      {Lisp-Entry "tty-paren-balance-duration-set!" native #f 664 8 664 39 ()}
      {Lisp-Entry "tty-text-attributes-set!" native #f 665 8 665 32 ()}
      {Lisp-Entry "tty-type-set!" native #f 666 8 666 21 ()}
      {Lisp-Entry "tty?" native #f 667 8 667 12 ()}
      {Lisp-Entry "type-exception-arg-num" native #f 668 8 668 30 ()}
      {Lisp-Entry "type-exception-arguments" native #f 669 8 669 32 ()}
      {Lisp-Entry "type-exception-procedure" native #f 670 8 670 32 ()}
      {Lisp-Entry "type-exception-type-id" native #f 671 8 671 30 ()}
      {Lisp-Entry "type-exception?" native #f 672 8 672 23 ()}
      {Lisp-Entry "u16vector" native #f 673 8 673 17 ()}
      {Lisp-Entry "u16vector->list" native #f 674 8 674 23 ()}
      {Lisp-Entry "u16vector-append" native #f 675 8 675 24 ()}
      {Lisp-Entry "u16vector-copy" native #f 676 8 676 22 ()}
      {Lisp-Entry "u16vector-fill!" native #f 677 8 677 23 ()}
      {Lisp-Entry "u16vector-length" native #f 678 8 678 24 ()}
      {Lisp-Entry "u16vector-ref" native #f 679 8 679 21 ()}
      {Lisp-Entry "u16vector-set!" native #f 680 8 680 22 ()}
      {Lisp-Entry "u16vector?" native #f 681 8 681 18 ()}
      {Lisp-Entry "u32vector" native #f 682 8 682 17 ()}
      {Lisp-Entry "u32vector->list" native #f 683 8 683 23 ()}
      {Lisp-Entry "u32vector-append" native #f 684 8 684 24 ()}
      {Lisp-Entry "u32vector-copy" native #f 685 8 685 22 ()}
      {Lisp-Entry "u32vector-fill!" native #f 686 8 686 23 ()}
      {Lisp-Entry "u32vector-length" native #f 687 8 687 24 ()}
      {Lisp-Entry "u32vector-ref" native #f 688 8 688 21 ()}
      {Lisp-Entry "u32vector-set!" native #f 689 8 689 22 ()}
      {Lisp-Entry "u32vector?" native #f 690 8 690 18 ()}
      {Lisp-Entry "u64vector" native #f 691 8 691 17 ()}
      {Lisp-Entry "u64vector->list" native #f 692 8 692 23 ()}
      {Lisp-Entry "u64vector-append" native #f 693 8 693 24 ()}
      {Lisp-Entry "u64vector-copy" native #f 694 8 694 22 ()}
      {Lisp-Entry "u64vector-fill!" native #f 695 8 695 23 ()}
      {Lisp-Entry "u64vector-length" native #f 696 8 696 24 ()}
      {Lisp-Entry "u64vector-ref" native #f 697 8 697 21 ()}
      {Lisp-Entry "u64vector-set!" native #f 698 8 698 22 ()}
      {Lisp-Entry "u64vector?" native #f 699 8 699 18 ()}
      {Lisp-Entry "u8vector" native #f 700 8 700 16 ()}
      {Lisp-Entry "u8vector->list" native #f 701 8 701 22 ()}
      {Lisp-Entry "u8vector->object" native #f 702 8 702 24 ()}
      {Lisp-Entry "u8vector-append" native #f 703 8 703 23 ()}
      {Lisp-Entry "u8vector-copy" native #f 704 8 704 21 ()}
      {Lisp-Entry "u8vector-fill!" native #f 705 8 705 22 ()}
      {Lisp-Entry "u8vector-length" native #f 706 8 706 23 ()}
      {Lisp-Entry "u8vector-ref" native #f 707 8 707 20 ()}
      {Lisp-Entry "u8vector-set!" native #f 708 8 708 21 ()}
      {Lisp-Entry "u8vector?" native #f 709 8 709 17 ()}
      {Lisp-Entry "unbound-global-exception-code" native #f 710 8 710 37 ()}
      {Lisp-Entry "unbound-global-exception-rte" native #f 711 8 711 36 ()}
      {Lisp-Entry "unbound-global-exception-variable" native #f 712 8 712 41 ()}
      {Lisp-Entry "unbound-global-exception?" native #f 713 8 713 33 ()}
      {Lisp-Entry "unbound-os-environment-variable-exception-arguments" native #f 714 8 714 59 ()}
      {Lisp-Entry "unbound-os-environment-variable-exception-procedure" native #f 715 8 715 59 ()}
      {Lisp-Entry "unbound-os-environment-variable-exception?" native #f 716 8 716 50 ()}
      {Lisp-Entry "unbound-serial-number-exception-arguments" native #f 717 8 717 49 ()}
      {Lisp-Entry "unbound-serial-number-exception-procedure" native #f 718 8 718 49 ()}
      {Lisp-Entry "unbound-serial-number-exception?" native #f 719 8 719 40 ()}
      {Lisp-Entry "unbound-table-key-exception-arguments" native #f 720 8 720 45 ()}
      {Lisp-Entry "unbound-table-key-exception-procedure" native #f 721 8 721 45 ()}
      {Lisp-Entry "unbound-table-key-exception?" native #f 722 8 722 36 ()}
      {Lisp-Entry "unbox" native #f 723 8 723 13 ()}
      {Lisp-Entry "unbreak" native #f 724 8 724 15 ()}
      {Lisp-Entry "uncaught-exception-arguments" native #f 725 8 725 36 ()}
      {Lisp-Entry "uncaught-exception-procedure" native #f 726 8 726 36 ()}
      {Lisp-Entry "uncaught-exception-reason" native #f 727 8 727 33 ()}
      {Lisp-Entry "uncaught-exception?" native #f 728 8 728 27 ()}
      {Lisp-Entry "uninitialized-thread-exception-arguments" native #f 729 8 729 48 ()}
      {Lisp-Entry "uninitialized-thread-exception-procedure" native #f 730 8 730 48 ()}
      {Lisp-Entry "uninitialized-thread-exception?" native #f 731 8 731 39 ()}
      {Lisp-Entry "uninterned-keyword?" native #f 732 8 732 27 ()}
      {Lisp-Entry "uninterned-symbol?" native #f 733 8 733 26 ()}
      {Lisp-Entry "unknown-keyword-argument-exception-arguments" native #f 734 8 734 52 ()}
      {Lisp-Entry "unknown-keyword-argument-exception-procedure" native #f 735 8 735 52 ()}
      {Lisp-Entry "unknown-keyword-argument-exception?" native #f 736 8 736 43 ()}
      {Lisp-Entry "unterminated-process-exception-arguments" native #f 737 8 737 48 ()}
      {Lisp-Entry "unterminated-process-exception-procedure" native #f 738 8 738 48 ()}
      {Lisp-Entry "unterminated-process-exception?" native #f 739 8 739 39 ()}
      {Lisp-Entry "untrace" native #f 740 8 740 15 ()}
      {Lisp-Entry "user-info" native #f 741 8 741 17 ()}
      {Lisp-Entry "user-info-gid" native #f 742 8 742 21 ()}
      {Lisp-Entry "user-info-home" native #f 743 8 743 22 ()}
      {Lisp-Entry "user-info-name" native #f 744 8 744 22 ()}
      {Lisp-Entry "user-info-shell" native #f 745 8 745 23 ()}
      {Lisp-Entry "user-info-uid" native #f 746 8 746 21 ()}
      {Lisp-Entry "user-info?" native #f 747 8 747 18 ()}
      {Lisp-Entry "user-name" native #f 748 8 748 17 ()}
      {Lisp-Entry "vector-append" native #f 749 8 749 21 ()}
      {Lisp-Entry "vector-copy" native #f 750 8 750 19 ()}
      {Lisp-Entry "void" native #f 751 8 751 12 ()}
      {Lisp-Entry "will-execute!" native #f 752 8 752 21 ()}
      {Lisp-Entry "will-testator" native #f 753 8 753 21 ()}
      {Lisp-Entry "will?" native #f 754 8 754 13 ()}
      {Lisp-Entry "continuation-checkpoint" native #f 755 8 755 31 ()}
      {Lisp-Entry "with-exception-catcher" native #f 756 8 756 30 ()}
      {Lisp-Entry "with-exception-handler" native #f 757 8 757 30 ()}
      {Lisp-Entry "with-input-from-port" native #f 758 8 758 28 ()}
      {Lisp-Entry "with-input-from-string" native #f 759 8 759 30 ()}
      {Lisp-Entry "with-input-from-u8vector" native #f 760 8 760 32 ()}
      {Lisp-Entry "with-input-from-vector" native #f 761 8 761 30 ()}
      {Lisp-Entry "with-output-to-port" native #f 762 8 762 27 ()}
      {Lisp-Entry "with-output-to-string" native #f 763 8 763 29 ()}
      {Lisp-Entry "with-output-to-u8vector" native #f 764 8 764 31 ()}
      {Lisp-Entry "with-output-to-vector" native #f 765 8 765 29 ()}
      {Lisp-Entry "write-substring" native #f 766 8 766 23 ()}
      {Lisp-Entry "write-subu8vector" native #f 767 8 767 25 ()}
      {Lisp-Entry "write-u8" native #f 768 8 768 16 ()}
      {Lisp-Entry "wrong-number-of-arguments-exception-arguments" native #f 769 8 769 53 ()}
      {Lisp-Entry "wrong-number-of-arguments-exception-procedure" native #f 770 8 770 53 ()}
      {Lisp-Entry "wrong-number-of-arguments-exception?" native #f 771 8 771 44 ()}}})
