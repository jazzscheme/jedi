"C-Definition-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "C-Definition-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.C-Definition-Doc" module #f 37 18 37 47 ("jazz")
      {Lisp-Entry "C-Definition-Doc" class #f 44 7 44 23 ("Element-Doc")}}})
"C-Type-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "C-Type-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.C-Type-Doc" module #f 37 18 37 41 ("jazz")
      {Lisp-Entry "C-Type-Doc" class #f 44 7 44 17 ("Element-Doc")}}})
"Category-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Category-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Category-Doc" module #f 37 18 37 43 ("jazz")
      {Lisp-Entry "Category-Doc" class #f 44 7 44 19 ("Element-Doc")
        {Lisp-Entry "catalog" slot #f 47 8 47 15 ()}
        {Lisp-Entry "get-catalog" method #f 55 20 55 31 ("catalog")}
        {Lisp-Entry "set-catalog" method #f 59 20 59 31 ("children" "set-catalog" "child" "lambda" "for-each" "catalog" "set!" "cat")}
        {Lisp-Entry "update-indexes" method #f 71 20 71 34 ("children" "update-indexes" "child" "lambda" "for-each" "nextmethod" "references-index" "definitions-index")}
        {Lisp-Entry "print-catalog" method #f 79 11 79 24 ("children" "1" "+" "print-catalog" "child" "lambda" "for-each" "doc" "ascendant" "name" "self" "class-of" "category-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "present" method #f 96 11 96 18 ("doc" "name" "format")}
        {Lisp-Entry "get-class-descriptor" method #f 105 25 105 45 ("Category-Doc-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 114 11 114 17 ()
        {Lisp-Entry "Category-Doc-Descriptor" class #f 120 7 120 30 ("sort-components?:" "Element-Doc-Descriptor")}}}})
"Class-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Class-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Class-Doc" module #f 37 18 37 40 ("jazz")
      {Lisp-Entry "Class-Doc" class #f 45 7 45 16 ("initialize" "Category-Doc")
        {Lisp-Entry "ascendant" property #f 48 12 48 21 ()}
        {Lisp-Entry "get-ascendant" accessor #f 48 48 48 56 ()}
        {Lisp-Entry "set-ascendant" accessor #f 48 48 48 56 ()}
        {Lisp-Entry "interfaces" property #f 49 12 49 22 ()}
        {Lisp-Entry "get-interfaces" accessor #f 49 48 49 56 ()}
        {Lisp-Entry "set-interfaces" accessor #f 49 48 49 56 ()}
        {Lisp-Entry "print-catalog" method #f 58 11 58 24 ("children" "1" "+" "print-catalog" "child" "lambda" "for-each" "doc" "interfaces" "ascendant" "name" "self" "class-of" "category-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "present" method #f 74 20 74 27 ("name" "format")}
        {Lisp-Entry "get-class-descriptor" method #f 83 25 83 45 ("Class-Doc-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 92 11 92 17 ()
        {Lisp-Entry "Class-Doc-Descriptor" class #f 98 7 98 27 ("title:" "name:" "interfaces" "ascendant" "package-name" "categorized:" "Image-Resource" "image:" "Category-Doc-Descriptor")}}}})
"Component-Catalog"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "catalog" "Component-Catalog.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.catalog.Component-Catalog" module #f 37 18 37 52 ("jazz")
      {Lisp-Entry "Component-Catalog" class #f 44 7 44 24 ("Catalog")
        {Lisp-Entry "client" slot #f 47 8 47 14 ()}
        {Lisp-Entry "get-client" accessor #f 47 33 47 41 ()}
        {Lisp-Entry "definitions-index" slot #f 48 8 48 25 ()}
        {Lisp-Entry "get-definitions-index" accessor #f 48 33 48 41 ()}
        {Lisp-Entry "references-index" slot #f 49 8 49 24 ()}
        {Lisp-Entry "get-references-index" accessor #f 49 33 49 41 ()}
        {Lisp-Entry "initialize" method #f 52 20 52 30 ("update-catalog-indexes" "references-index~self" "eq?" "test:" "make-table" "definitions-index~self" "client~self" "set!" "nextmethod" "client" "name")}
        {Lisp-Entry "get-statistics" method #f 65 18 65 32 ("format-plural" "format" "references-index" "r" "definitions-index" "table-length" "d" "let")}
        {Lisp-Entry "update-catalog-indexes" method #f 78 11 78 33 ("definitions-index" "table-add" "when" "get-name" "name" "let" "level" "child" "lambda" "for-each-descendant" "self" "client" "set-catalog")}
        {Lisp-Entry "get-definitions" method #f 92 20 92 35 ("definitions-index" "table-ref" "name")}
        {Lisp-Entry "get-references" method #f 96 20 96 34 ("references-index" "table-ref" "name")}}}})
"Concept-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Concept-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Concept-Doc" module #f 37 18 37 42 ("jazz")
      {Lisp-Entry "Concept-Doc" class #f 45 7 45 18 ("Doc")
        {Lisp-Entry "get-class-descriptor" method #f 53 25 53 45 ("Concept-Doc-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 62 11 62 17 ()
        {Lisp-Entry "Concept-Doc-Descriptor" class #f 68 7 68 29 ("Image-Resource" "image:" "Doc-Descriptor")}}}})
"Constant-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Constant-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Constant-Doc" module #f 37 18 37 43 ("jazz")
      {Lisp-Entry "Constant-Doc" class #f 45 7 45 19 ("Element-Doc")
        {Lisp-Entry "construct-literal" method #f 49 16 49 33 ("doc:" "name:" "self" "new" "doc" "name" "context")}
        {Lisp-Entry "get-class-descriptor" method #f 58 25 58 45 ("Constant-Doc-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 67 11 67 17 ()
        {Lisp-Entry "Constant-Doc-Descriptor" class #f 73 7 73 30 ("categorized:" "Image-Resource" "image:" "Element-Doc-Descriptor")}}}})
"Definition-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Definition-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Definition-Doc" module #f 37 18 37 45 ("jazz")
      {Lisp-Entry "Definition-Doc" class #f 45 7 45 21 ("initialize" "Element-Doc")
        {Lisp-Entry "parameters" property #f 48 12 48 22 ()}
        {Lisp-Entry "get-parameters" accessor #f 48 48 48 56 ()}
        {Lisp-Entry "set-parameters" accessor #f 48 48 48 56 ()}
        {Lisp-Entry "print-catalog" method #f 57 11 57 24 ("doc" "parameters" "name" "self" "class-of" "category-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "present" method #f 69 20 69 27 ("parameters" "name" "cons" "format")}
        {Lisp-Entry "present-text" method #f 78 20 78 32 ("package-name" "get-children" "example" "lambda" "map" "examples" "null?" ",@paragraphs" "name" "cons" "->string" "form->node" "->jml" "paragraphs" "tag" "bind" "description" "when" "present-parameters" "get-effective-title" "class:" "parameters" "not" "if")}
        {Lisp-Entry "get-class-descriptor" method #f 112 25 112 45 ("Definition-Doc-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 121 11 121 17 ()
        {Lisp-Entry "Definition-Doc-Descriptor" class #f 127 7 127 32 ("domain" "title:" "name:" "parameters" "package-name" "categorized:" "Element-Doc-Descriptor")}}}})
"Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Doc.jazz"} 1290011726
    {Lisp-Entry "jazz.doc.doc.Doc" module #f 11 18 11 34 ("jazz")
      {Lisp-Entry "Doc" class #f 20 7 20 10 ("initialize" "Component")
        {Lisp-Entry "title" property #f 23 12 23 17 ()}
        {Lisp-Entry "get-title" accessor #f 23 48 23 56 ()}
        {Lisp-Entry "set-title" accessor #f 23 48 23 56 ()}
        {Lisp-Entry "description" property #f 24 12 24 23 ()}
        {Lisp-Entry "get-description" accessor #f 24 48 24 56 ()}
        {Lisp-Entry "set-description" accessor #f 24 48 24 56 ()}
        {Lisp-Entry "construct-literal" method #f 28 16 28 33 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "install-child" method #f 32 20 32 33 ("nextmethod" "else" "set-description" "description" "get-model" "case" "restore-form" "creator-branch" "creator" "form")}
        {Lisp-Entry "get-catalog" method #f 43 26 43 37 ("parent" "get-catalog")}
        {Lisp-Entry "set-catalog" method #f 47 26 47 37 ("cat")}
        {Lisp-Entry "get-effective-title" method #f 56 18 56 37 ("name" "->string" "title" "or")}
        {Lisp-Entry "update-indexes" method #f 65 26 65 40 ("self" "table-add" "name" "not-null?" "when" "references-index" "definitions-index")}
        {Lisp-Entry "print-catalog" method #f 70 26 70 39 ("description" "name" "self" "class-of" "category-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-documentation" method #f 82 18 82 35 ("get-definitions" "self" "get-parent" "eq?" "doc" "lambda" "find-if" "get-catalog" "catalog" "let" "symbol")}
        {Lisp-Entry "present" method #f 94 26 94 33 ("description")}
        {Lisp-Entry "present-text" method #f 98 26 98 38 ("null?" "if" "form->node" "->jml" "paragraphs" "tag" "bind" "description" "when")}
        {Lisp-Entry "present-parameters" method #f 107 21 107 39 ("join" "concatenate" "list" "if" "format" "->string" "parameter" "lambda" "map" "append" "all" "rest:" "rest" "named:" "named" "optional:" "optional" "not-found:" "positional:" "getf" "positional" "let" "else" "string?" "null?" "cond" "parameters")}
        {Lisp-Entry "Red-Ball" constant #f 140 12 140 20 ()}
        {Lisp-Entry "get-class-descriptor" method #f 149 25 149 45 ("Doc-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 158 11 158 17 ()
        {Lisp-Entry "Doc-Descriptor" class #f 164 7 164 21 ("title:" "domain" "name:" "description" "title" "categorized:" "Component-Descriptor")
          {Lisp-Entry "component-display-property?" method #f 175 20 175 47 ("visible?" "children" "before" "name-info" "field-name" "memq?" "not" "property" "component")}
          {Lisp-Entry "component-get-addable-classes" method #f 179 20 179 49 ("Method-Doc" "Syntax-Doc" "Constant-Doc" "Interface-Doc" "Class-Doc" "Package-Doc" "Concept-Doc" "Section-Doc" "list" "component")}}}}})
"Doc-Catalog"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "catalog" "Doc-Catalog.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.catalog.Doc-Catalog" module #f 37 18 37 46 ("jazz")
      {Lisp-Entry "Doc-Catalog" class #f 43 7 43 18 ("Component-Catalog")
        {Lisp-Entry "project" slot #f 46 8 46 15 ()}
        {Lisp-Entry "get-project" accessor #f 46 23 46 31 ()}
        {Lisp-Entry "initialize" method #f 49 20 49 30 ("project~self" "set!" "nextmethod" "project" "client" "name")}}}})
"Doc-Editor"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "tools" "Doc-Editor.jazz"} 1289506007
    {Lisp-Entry "jazz.doc.tools.Doc-Editor" module #f 37 18 37 43 ("jazz")
      {Lisp-Entry "Doc-Editor" class #f 48 7 48 17 ("card" "card-border" "second" "390" "card-contour" "183" "width:" "descendant" "descendants" "header" "fill" "content" "vscroll?:" "hscroll?:" "document" "scroller" "entry" "style:" "edge" "border-type:" "first" "366" "255" "descendants-border" "250" "division:" "horz" "orientation:" "center" "367" "splitter" "on-edit" "tail" "edit" "on-build" ":form" "Event-Handler" "action-handler:" ":images" "portfolio:" "Image-Resource" "resource:" "tooltip-text:" "tooltip?:" "22" "build" "6" "flow" "north" "location:" "33" "300" "toolbar" "name:" "0" "2" "Rect" "layout-insets:" "border" "layout-type:" "400" "650" "Dimension" "size:" "title:" "explicit" "initialize" "Component-Editor")
        {Lisp-Entry "entry" property #f 51 12 51 17 ()}
        {Lisp-Entry "type" slot #f 54 8 54 12 ()}
        {Lisp-Entry "location" slot #f 55 8 55 16 ()}
        {Lisp-Entry "expression" slot #f 56 8 56 18 ()}
        {Lisp-Entry "text-object" slot #f 57 8 57 19 ()}
        {Lisp-Entry "text-location" slot #f 58 8 58 21 ()}
        {Lisp-Entry "form-model" method #f 79 20 79 30 ("nextmethod" "else" "Docs-Tree" "descendants" "get-name" "case" "form")}
        {Lisp-Entry "install" method #f 85 20 85 27 ("self" "set-editor" "categorized" "'categorized" "card" "'card" "get-tree" "set-filter" "descendant" "'descendant" "descendants" "'descendants" "locate" "child" "set-title" "nextmethod" "rest")}
        {Lisp-Entry "focus-document" method #f 93 20 93 34 ("descendant" "'descendant" "descendants" "'descendants" "locate" "child" "acquire-focus")}
        {Lisp-Entry "get-tree" method #f 102 18 102 26 ("tree" "descendants" "locate")}
        {Lisp-Entry "host-icon" method #f 111 25 111 34 ("Image-Resource")}
        {Lisp-Entry "host-title" method #f 115 25 115 35 ()}
        {Lisp-Entry "host-position" method #f 119 25 119 38 ("59" "52" "Point")}
        {Lisp-Entry "host-size" method #f 123 25 123 34 ("500" "800" "Dimension")}
        {Lisp-Entry "host-workspaces" method #f 127 20 127 35 ("home")}
        {Lisp-Entry "new-controller" method #f 137 20 137 34 ("self" "Doc-Editor-Controller" "new")}
        {Lisp-Entry "Doc-Editor-Controller" class #f 142 9 142 30 ("Component-Editor-Controller")
          {Lisp-Entry "name-status" method #f 145 22 145 33 ("document" "editor-title")}}
        {Lisp-Entry "resize-center" method #f 154 11 154 24 ("card-contour" "'card-contour" "0" "descendants-border" "'descendants-border" "locate" "size-figure" "dv" "dh")}
        {Lisp-Entry "on-build" method #f 159 11 159 19 ("on-build" "'on-build" "unimplemented" "bell" "client" "null?" "if" "evt")}
        {Lisp-Entry "on-edit" method #f 165 11 165 18 ("edit-form" "evt")}
        {Lisp-Entry "get-entry" method #f 174 18 174 27 ("entry")}
        {Lisp-Entry "set-entry" method #f 178 18 178 27 ("setup" "text-location" "text" "object" "location" "bind" "entry" "set!" "info")}
        {Lisp-Entry "setup" method #f 184 11 184 16 ("text-location" "text-object" "expression" "location" "set!" "text-loc" "text" "object" "loc")}
        {Lisp-Entry "editor-title" method #f 196 20 196 32 ("get-form" "get-origin" "get-base" "format" "null?" "if" "get-reference" "reference" "let")}}}})
"Doc-Insert"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Doc-Insert.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Doc-Insert" module #f 11 18 11 41 ("jazz")
      {Lisp-Entry "Doc-Insert" class #f 17 7 17 17 ("initialize" "Doc")
        {Lisp-Entry "path" property #f 20 12 20 16 ()}
        {Lisp-Entry "get-path" accessor #f 20 41 20 49 ()}
        {Lisp-Entry "set-path" accessor #f 20 41 20 49 ()}}}})
"Doc-Text-Actions"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "designer" "Doc-Text-Actions.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.designer.Doc-Text-Actions" module #f 37 18 37 52 ("jazz")
      {Lisp-Entry "Doc-Text-Actions" class #f 46 7 46 23 (":control" "Shortcut" "shortcut:" "on-parameter" ":focus" "Event-Handler" "action-handler:" "parameter" "name:" "Actions")}}})
"Doc-Text-View"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "designer" "Doc-Text-View.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.designer.Doc-Text-View" module #f 37 18 37 49 ("jazz")
      {Lisp-Entry "Doc-Text-View" class #f 47 7 47 20 ("Text" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "4" "left-padding:" "Row-Formatted-Text-View")
        {Lisp-Entry "install" method #f 54 20 54 27 ("Variable" "Code" "Dark-Blue" "Hyperlink" "Reference" "Purple" "Comment" "Dark-Red" "Color" "color:" "Title" "Font" "font:" "Text-Style" "add-style" "Heading3" "Heading2" "Heading1" "Default" "base:" "Heading0" "name:" "Format" "add-format" "nextmethod" "rest")}
        {Lisp-Entry "focus-actions" method #f 79 20 79 33 ("nextmethod" "doc-text" "'doc-text" "find-actions" "cons")}
        {Lisp-Entry "get-context-menu" method #f 89 20 89 36 ()}
        {Lisp-Entry "on-parameter" method #f 93 11 93 23 ("12" "+" "get-end" "end" "copy" "start" "let" "1" "get-start" "-" "set-caret" "insert-string" "begin" "empty-selection?" "if" "evt")}}}})
"DocToHTML-Transformation"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "transformation" "DocToHTML-Transformation.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.transformation.DocToHTML-Transformation" module #f 37 18 37 66 ("jazz")
      {Lisp-Entry "DocToHTML-Transformation" class #f 43 7 43 31 ("JML-Transformation")
        {Lisp-Entry "<parameter>" method #f 46 12 46 23 (",text" "get-child-text" "text" "let" "node")}
        {Lisp-Entry "<code>" method #f 51 12 51 18 (",text" "get-child-text" "text" "let" "node")}
        {Lisp-Entry "<reference>" method #f 56 12 56 23 (",text" ",name" "href:" "->string" "get-text" "if" "text" "first-child" "child" "format" "name" "'href" "get-property" "href" "let*" "node")}
        {Lisp-Entry "<header>" method #f 64 12 64 20 (",text" "get-child-text" "text" "let" "node")}
        {Lisp-Entry "<node>" method #f 69 12 69 18 ("->jml" "get-children" "map" "'node" "get-tag" "eq?" "JML-Element" "is?" "and" "if" "expand" "define" "node")}
        {Lisp-Entry "<ordered>" method #f 78 12 78 21 ("->jml" "get-children" "map" "ordered" "'ordered" "get-tag" "eq?" "JML-Element" "is?" "and" "if" "expand" "define" "node")}
        {Lisp-Entry "<definition>" method #f 87 12 87 24 ("children->jml" ",title" "class:" "name" "'name" "->string" "'title" "get-property" "or" "title" "let" "node")}
        {Lisp-Entry "<properties>" method #f 94 12 94 24 ("JML-Text" "is?" "if" "get-text" "get-children" "value" "property" "bind" "prop" "lambda" "map" "class:" "node")}
        {Lisp-Entry "<terminology>" method #f 104 12 104 25 ("JML-Text" "is?" "get-text" "get-children" "bind" "definition" "lambda" "map" ",text" ",term" "if" "class:" "'text" "text" "'term" "get-property" "term" "let" "node")}
        {Lisp-Entry "<styled-table>" method #f 118 12 118 26 ("children->jml" "properties->jml" ",style" "style:" "red" "'red" "1" "solid" "'solid" "format" "style" "let" "node")}}}})
"DocToText-Transformation"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "transformation" "DocToText-Transformation.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.transformation.DocToText-Transformation" module #f 37 18 37 66 ("jazz")
      {Lisp-Entry "DocToText-Transformation" class #f 43 7 43 31 ("JML-Transformation")
        {Lisp-Entry "<parameter>" method #f 46 12 46 23 (",text" "Dark-Red" "color:" "get-child-text" "text" "let" "node")}
        {Lisp-Entry "<code>" method #f 51 12 51 18 (",text" "Dark-Red" "color:" "get-child-text" "text" "let" "node")}
        {Lisp-Entry "<hyperlink>" method #f 56 12 56 23 (",text" "Dark-Blue" "color:" "get-child-text" "text" "let" "node")}
        {Lisp-Entry "<node>" method #f 61 12 61 18 ("children->jml" "bulleted?:" "node")}
        {Lisp-Entry "<properties>" method #f 65 12 65 24 ("get-text" "get-children" "value" "property" "bind" "prop" "lambda" "map" "node")}
        {Lisp-Entry "<styled-table>" method #f 75 12 75 26 ("children->jml" "properties->jml" ",style" "style:" "red" "'red" "1" "solid" "'solid" "format" "style" "let" "node")}}}})
"Docs-Tree"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "tools" "Docs-Tree.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.tools.Docs-Tree" module #f 37 18 37 42 ("jazz")
      {Lisp-Entry "Docs-Tree" class #f 43 7 43 16 ("Descendants-Tree")
        {Lisp-Entry "row-state" method #f 46 20 46 29 ("collapsed" "'collapsed" "expanded" "'expanded" "1" "<" "if" "level" "update?" "component")}}}})
"Element-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Element-Doc.jazz"} 1290011726
    {Lisp-Entry "jazz.doc.doc.Element-Doc" module #f 37 18 37 42 ("jazz")
      {Lisp-Entry "Element-Doc" class #f 44 7 44 18 ("initialize" "Doc")
        {Lisp-Entry "access" property #f 47 12 47 18 ()}
        {Lisp-Entry "get-access" accessor #f 47 50 47 58 ()}
        {Lisp-Entry "set-access" accessor #f 47 50 47 58 ()}
        {Lisp-Entry "examples" property #f 48 12 48 20 ()}
        {Lisp-Entry "get-examples" accessor #f 48 50 48 58 ()}
        {Lisp-Entry "set-examples" accessor #f 48 50 48 58 ()}
        {Lisp-Entry "package-name" property #f 49 12 49 24 ()}
        {Lisp-Entry "get-package-name" accessor #f 49 50 49 58 ()}
        {Lisp-Entry "set-package-name" accessor #f 49 50 49 58 ()}
        {Lisp-Entry "install-child" method #f 52 20 52 33 ("nextmethod" "else" "set-examples" "examples" "get-model" "case" "restore-form" "creator-branch" "creator" "form")}
        {Lisp-Entry "get-class-descriptor" method #f 63 25 63 45 ("Element-Doc-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 72 11 72 17 ()
        {Lisp-Entry "Element-Doc-Descriptor" class #f 78 7 78 29 ("package-name" "title:" "examples" "access" "name:" "Doc-Descriptor")}}}})
"Export-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Export-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Export-Doc" module #f 37 18 37 41 ("jazz")
      {Lisp-Entry "Export-Doc" class #f 44 7 44 17 ("Element-Doc")}}})
"Field-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Field-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Field-Doc" module #f 37 18 37 40 ("jazz")
      {Lisp-Entry "Field-Doc" class #f 45 7 45 16 ("Definition-Doc")
        {Lisp-Entry "construct-literal" method #f 49 16 49 33 ("doc:" "name:" "self" "new" "doc" "name" "context")}
        {Lisp-Entry "get-class-descriptor" method #f 58 25 58 45 ("Field-Doc-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 67 11 67 17 ()
        {Lisp-Entry "Field-Doc-Descriptor" class #f 73 7 73 27 ("Image-Resource" "image:" "Definition-Doc-Descriptor")}}}})
"Form-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Form-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Form-Doc" module #f 37 18 37 39 ("jazz")
      {Lisp-Entry "Form-Doc" class #f 44 7 44 15 ("initialize" "Element-Doc")
        {Lisp-Entry "parameters" property #f 47 12 47 22 ()}
        {Lisp-Entry "get-parameters" accessor #f 47 47 47 55 ()}
        {Lisp-Entry "set-parameters" accessor #f 47 47 47 55 ()}}}})
"Generic-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Generic-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Generic-Doc" module #f 37 18 37 42 ("jazz")
      {Lisp-Entry "Generic-Doc" class #f 44 7 44 18 ("Definition-Doc")}}})
"Interface-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Interface-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Interface-Doc" module #f 37 18 37 44 ("jazz")
      {Lisp-Entry "Interface-Doc" class #f 45 7 45 20 ("initialize" "Category-Doc")
        {Lisp-Entry "ascendants" property #f 48 12 48 22 ()}
        {Lisp-Entry "get-ascendants" accessor #f 48 48 48 56 ()}
        {Lisp-Entry "set-ascendants" accessor #f 48 48 48 56 ()}
        {Lisp-Entry "construct-literal" method #f 52 16 52 33 ("definitions:" "doc:" "extends:" "name:" "self" "new" "definitions" "doc" "extends" "name" "context")}
        {Lisp-Entry "get-class-descriptor" method #f 61 25 61 45 ("Interface-Doc-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 70 11 70 17 ()
        {Lisp-Entry "Interface-Doc-Descriptor" class #f 76 7 76 31 ("ascendants" "name:" "Image-Resource" "image:" "Category-Doc-Descriptor")}}}})
"Method-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Method-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Method-Doc" module #f 37 18 37 41 ("jazz")
      {Lisp-Entry "Method-Doc" class #f 45 7 45 17 ("initialize" "Definition-Doc")
        {Lisp-Entry "propagation" property #f 48 12 48 23 ()}
        {Lisp-Entry "get-propagation" accessor #f 48 49 48 57 ()}
        {Lisp-Entry "set-propagation" accessor #f 48 49 48 57 ()}
        {Lisp-Entry "get-class-descriptor" method #f 56 25 56 45 ("Method-Doc-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 65 11 65 17 ()
        {Lisp-Entry "Method-Doc-Descriptor" class #f 71 7 71 28 ("propagation" "name:" "Image-Resource" "image:" "Definition-Doc-Descriptor")}}}})
"Module-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Module-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Module-Doc" module #f 37 18 37 41 ("jazz")
      {Lisp-Entry "Module-Doc" class #f 44 7 44 17 ("Doc")}}})
"Package-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Package-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Package-Doc" module #f 37 18 37 42 ("jazz")
      {Lisp-Entry "Package-Doc" class #f 45 7 45 18 ("Element-Doc")
        {Lisp-Entry "get-class-descriptor" method #f 53 25 53 45 ("Package-Doc-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 62 11 62 17 ()
        {Lisp-Entry "Package-Doc-Descriptor" class #f 68 7 68 29 ("extends" "package-name" "categorized:" "Image-Resource" "image:" "Element-Doc-Descriptor")}}}})
"Primitive-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Primitive-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Primitive-Doc" module #f 37 18 37 44 ("jazz")
      {Lisp-Entry "Primitive-Doc" class #f 45 7 45 20 ("Definition-Doc")
        {Lisp-Entry "get-class-descriptor" method #f 53 25 53 45 ("Primitive-Doc-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 62 11 62 17 ()
        {Lisp-Entry "Primitive-Doc-Descriptor" class #f 68 7 68 31 ("Image-Resource" "image:" "Definition-Doc-Descriptor")}}}})
"Project-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Project-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Project-Doc" module #f 37 18 37 42 ("jazz")
      {Lisp-Entry "Project-Doc" class #f 44 7 44 18 ("Doc")}}})
"Property-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Property-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Property-Doc" module #f 37 18 37 43 ("jazz")
      {Lisp-Entry "Property-Doc" class #f 45 7 45 19 ("initialize" "Slot-Doc")
        {Lisp-Entry "getter" property #f 48 12 48 18 ()}
        {Lisp-Entry "get-getter" accessor #f 48 43 48 51 ()}
        {Lisp-Entry "set-getter" accessor #f 48 43 48 51 ()}
        {Lisp-Entry "setter" property #f 49 12 49 18 ()}
        {Lisp-Entry "get-setter" accessor #f 49 43 49 51 ()}
        {Lisp-Entry "set-setter" accessor #f 49 43 49 51 ()}
        {Lisp-Entry "construct-literal" method #f 53 16 53 33 ("doc:" "name:" "self" "new" "doc" "name" "context")}
        {Lisp-Entry "present-text" method #f 62 20 62 32 ("get-effective-title" "class:")}
        {Lisp-Entry "get-class-descriptor" method #f 72 25 72 45 ("Property-Doc-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 81 11 81 17 ()
        {Lisp-Entry "Property-Doc-Descriptor" class #f 87 7 87 30 ("setter" "getter" "name:" "Image-Resource" "image:" "Slot-Doc-Descriptor")}}}})
"Section-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Section-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Section-Doc" module #f 37 18 37 42 ("jazz")
      {Lisp-Entry "Section-Doc" class #f 47 7 47 18 ("explicit" "initialize" "Doc")
        {Lisp-Entry "sort?" property #f 50 12 50 17 ()}
        {Lisp-Entry "catalog" slot #f 53 8 53 15 ()}
        {Lisp-Entry "get-catalog" method #f 61 20 61 31 ("catalog")}
        {Lisp-Entry "set-catalog" method #f 65 20 65 31 ("children" "set-catalog" "child" "lambda" "for-each" "catalog" "set!" "cat")}
        {Lisp-Entry "get-sort?" method #f 72 18 72 27 ("sort?")}
        {Lisp-Entry "set-sort?" method #f 76 18 76 27 ("designers" "descendants" "'descendants" "self" "process-refresh" "designer" "lambda" "for-each" "set!" "sort?" "neq?" "when" "value")}
        {Lisp-Entry "html-output-file" method #f 89 11 89 27 ("name" "format" "Jazz" "'Jazz" "list" "File" "new")}
        {Lisp-Entry "get-class-descriptor" method #f 98 25 98 45 ("Section-Doc-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 107 11 107 17 ()
        {Lisp-Entry "Section-Doc-Descriptor" class #f 113 7 113 29 ("domain" "title:" "name:" "sort?" "categorized:" "Image-Resource" "image:" "Doc-Descriptor")
          {Lisp-Entry "component-sort-components?" method #f 123 20 123 46 ("get-sort?" "component")}}}}})
"Slot-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Slot-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Slot-Doc" module #f 37 18 37 39 ("jazz")
      {Lisp-Entry "Slot-Doc" class #f 45 7 45 15 ("Definition-Doc")
        {Lisp-Entry "construct-literal" method #f 49 16 49 33 ("doc:" "name:" "self" "new" "doc" "name" "context")}
        {Lisp-Entry "present-text" method #f 58 20 58 32 ("get-effective-title" "class:")}
        {Lisp-Entry "get-class-descriptor" method #f 68 25 68 45 ("Slot-Doc-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 77 11 77 17 ()
        {Lisp-Entry "Slot-Doc-Descriptor" class #f 83 7 83 26 ("package-name" "categorized:" "Image-Resource" "image:" "Definition-Doc-Descriptor")}}}})
"Syntax-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Syntax-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Syntax-Doc" module #f 37 18 37 41 ("jazz")
      {Lisp-Entry "Syntax-Doc" class #f 45 7 45 17 ("Definition-Doc")
        {Lisp-Entry "get-class-descriptor" method #f 53 25 53 45 ("Syntax-Doc-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 62 11 62 17 ()
        {Lisp-Entry "Syntax-Doc-Descriptor" class #f 68 7 68 28 ("Image-Resource" "image:" "Definition-Doc-Descriptor")}}}})
"Unit-Doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "doc" "Unit-Doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.doc.Unit-Doc" module #f 37 18 37 39 ("jazz")
      {Lisp-Entry "Unit-Doc" class #f 43 7 43 15 ("Doc")}}})
"_doc"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "_doc.jazz"} 1288732033
    {Lisp-Entry "jazz.doc" module #f 37 8 37 16 ("jazz")}})
"autoload"
 ({Lisp-File-Entry {File jazz.doc "src" "jazz" "doc" "autoload.jazz"} 1288732033
    {Lisp-Entry "jazz.doc.autoload" module #f 37 18 37 35 ("jazz")}})
