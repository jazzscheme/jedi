"Diff-Syntax"
 ({Lisp-File-Entry {File :context "src" "jazz" "editor" "diff" "text" "Diff-Syntax.jazz"} 246587393. jazz
    {Lisp-Entry "jazz.editor.diff.text.Diff-Syntax" module (protected) () #f #f 37 18 37 51 ("jazz")
      {Lisp-Entry "import" import () () #f #f 40 1 40 7 ("jazz.ui" "jazz.system")}
      {Lisp-Entry "Diff-Syntax" class () ((extends . "Code-Syntax")) #f #f 44 7 44 18 ("Code-Syntax")
        {Lisp-Entry "preferences" method (override) () #f #f 52 20 52 31 ("diff-text" "documents" "get-preferences")}
        {Lisp-Entry "headers" constant () () #f #f 61 12 61 19 ("list")}
        {Lisp-Entry "get-headers" method (override) () #f #f 66 20 66 31 ("headers")}
        {Lisp-Entry "get-chapter-label" method (override) ("string" "col" "from" "to") #f #f 70 20 70 37 ("nextmethod" "1" "+" "subseq" "if" "reversed?:" "find" "pos" "let" "to" "from" "col" "string")}
        {Lisp-Entry "get-first-special?" method (override) () #f #f 77 20 77 38 ()}
        {Lisp-Entry "colorize-syntax" method (override) ("(recoloring?: recoloring? #f)" "(entries?: entries? #t)") #f #f 86 20 86 35 ("finish-current" "finish-current~" "new-colorizer" "new-colorizer~" "else" "Remove" "Add" "Diff" "File" "0" "Cell" "new" "apply-coloring" "starts-with?" "or" "cond" "cardinality" "len" "get-string" "get-string~" "str" "let" "paragraph" "line" "lambda" "model" "for-each-paragraph" "for-each-paragraph~" "colorizer" "colorize-diff" "define" "entries?" "entries?:" "recoloring?" "recoloring?:")}}}})
"Diff-Text-Preferences"
 ({Lisp-File-Entry {File :context "src" "jazz" "editor" "diff" "text" "Diff-Text-Preferences.jazz"} 246587393. jazz
    {Lisp-Entry "jazz.editor.diff.text.Diff-Text-Preferences" module (protected) () #f #f 37 18 37 61 ("jazz")
      {Lisp-Entry "import" import () () #f #f 40 1 40 7 ("jazz.ui" "jazz.jml" "jazz.designer")}
      {Lisp-Entry "Diff-Text-Preferences" class () ((extends . "Code-Text-Preferences")) #f #f 45 7 45 28 ("Code-Text-Preferences")
        {Lisp-Entry "file-style" property () ((initialize . "#f") (accessors . "generate")) #f #f 48 12 48 22 ()}
        {Lisp-Entry "get-file-style" accessor () () #f #f 48 49 48 57 ()}
        {Lisp-Entry "set-file-style" accessor () () #f #f 48 49 48 57 ()}
        {Lisp-Entry "diff-style" property () ((initialize . "#f") (accessors . "generate")) #f #f 49 12 49 22 ()}
        {Lisp-Entry "get-diff-style" accessor () () #f #f 49 49 49 57 ()}
        {Lisp-Entry "set-diff-style" accessor () () #f #f 49 49 49 57 ()}
        {Lisp-Entry "add-style" property () ((initialize . "#f") (accessors . "generate")) #f #f 50 12 50 21 ()}
        {Lisp-Entry "get-add-style" accessor () () #f #f 50 49 50 57 ()}
        {Lisp-Entry "set-add-style" accessor () () #f #f 50 49 50 57 ()}
        {Lisp-Entry "remove-style" property () ((initialize . "#f") (accessors . "generate")) #f #f 51 12 51 24 ()}
        {Lisp-Entry "get-remove-style" accessor () () #f #f 51 49 51 57 ()}
        {Lisp-Entry "set-remove-style" accessor () () #f #f 51 49 51 57 ()}
        {Lisp-Entry "form" form () () #f #f 54 3 54 7 ("Diff-Remove" "remove-style:" "Diff-Add" "add-style:" "Diff-Diff" "diff-style:" "Diff-File" "Base" "Text-Style" "file-style:" "title:" "install" "<install>")}
        {Lisp-Entry "get-class-descriptor" method (meta override) () #f #f 68 25 68 45 ("Diff-Text-Preferences-Descriptor" "new")}}
      {Lisp-Entry "design" submodule () () #f #f 77 11 77 17 ()
        {Lisp-Entry "import" import () () #f #f 80 1 80 7 ("jazz.designer")}
        {Lisp-Entry "Diff-Text-Preferences-Descriptor" class () ((extends . "Document-Preferences-Descriptor")) #f #f 83 7 83 39 ("Document-Preferences-Descriptor")
          {Lisp-Entry "form" form () () #f #f 86 3 86 7 ("name:" "Property-Descriptor" "<Property-Descriptor>" "remove-style" "add-style" "diff-style" "file-style" "categorized:" ">" "<properties" "<properties~>" "install" "<install>")}}}}})
"Diff-Text-View"
 ({Lisp-File-Entry {File :context "src" "jazz" "editor" "diff" "text" "Diff-Text-View.jazz"} 231466230. jazz
    {Lisp-Entry "jazz.editor.diff.text.Diff-Text-View" module (protected) () #f #f 37 18 37 54 ("jazz")
      {Lisp-Entry "import" import () () #f #f 40 1 40 7 ("jazz.ui" "jazz.system" "jazz.editor.diff")}
      {Lisp-Entry "Diff-Text-View" class () ((extends . "Code-Text-View")) #f #f 45 7 45 21 ("Code-Text-View")
        {Lisp-Entry "external-name" method (meta override) ("." "rest") #f #f 48 25 48 38 ("diff" "rest")}
        {Lisp-Entry "preferences" method (override) () #f #f 52 20 52 31 ("diff-text" "documents" "get-preferences")}
        {Lisp-Entry "new-syntax" method (override) () #f #f 56 20 56 30 ("model" "Diff-Syntax" "new")}
        {Lisp-Entry "install" method (override) ("rest") #f #f 60 20 60 27 ("get-remove-style" "get-remove-style~" "Remove" "get-add-style" "get-add-style~" "Add" "get-diff-style" "get-diff-style~" "Diff" "get-file-style" "get-file-style~" "File" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "host-workspaces" method (override) () #f #f 74 20 74 35 ("text")}}}})
"_diff"
 ({Lisp-File-Entry {File :context "src" "jazz" "editor" "diff" "_diff.jazz"} 222341473. jazz
    {Lisp-Entry "jazz.editor.diff" module () () #f #f 37 8 37 24 ("jazz")
      {Lisp-Entry "export" export () () #f #f 40 1 40 7 ("jazz.editor.diff.autoload")}}})
"autoload"
 ({Lisp-File-Entry {File :context "src" "jazz" "editor" "diff" "autoload.jazz"} 231466230. jazz
    {Lisp-Entry "jazz.editor.diff.autoload" module (protected) () #f #f 37 18 37 43 ("jazz")
      {Lisp-Entry "export" export () () #f #f 40 1 40 7 ("Diff-Text-View" "jazz.editor.diff.text.Diff-Text-View" "Diff-Text-Preferences" "jazz.editor.diff.text.Diff-Text-Preferences" "Diff-Syntax" "autoload" "jazz.editor.diff.text.Diff-Syntax")}}})
