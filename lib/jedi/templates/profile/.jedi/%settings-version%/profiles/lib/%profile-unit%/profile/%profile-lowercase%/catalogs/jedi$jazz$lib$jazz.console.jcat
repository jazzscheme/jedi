"Console-Manager"
 ({Lisp-File-Entry {File :context "src" "jazz" "console" "Console-Manager.jazz"} 1296083296 jazz
    {Lisp-Entry "jazz.console.Console-Manager" module #f 37 18 37 46 ("jazz")
      {Lisp-Entry "import" anonymous #f 40 1 40 7 ("jazz.ui.window" "jazz.ui.view" "jazz.ui.skin" "jazz.ui" "jazz.system" "jazz.platform" "jazz.literals" "jazz.library" "jazz.jml" "jazz.graphic" "jazz.debugger" "jazz.console")}
      {Lisp-Entry "Console-Manager" class #f 54 20 54 35 ("Layout-View")
        {Lisp-Entry "form" anonymous #f 57 3 57 7 ("center" "pad" "Pad-View" "<Pad-View>" "on-clear-console" "22" "clear" "Push-Tool" "<Push-Tool>" "tail" "location:" "Separator" "<Separator>" "pick" "on-print-detail-menu" ":guest" "Event-Handler" "action-handler:" "tooltip-text:" "tooltip?:" "Image-Resource" "resource:" ":images" "portfolio:" "body" "!" "<!>" "detail" "Push-Combo" "<Push-Combo>" "tools" "name:" "Layout-View" "<Layout-View>" "border" "layout-type:" "Dark" "Color" "background:" "400" "650" "Dimension" "size:" "install" "<install>")}
        {Lisp-Entry "external-name" method #f 69 25 69 38 ("console-manager" "rest")}
        {Lisp-Entry "host-icon" method #f 78 25 78 34 ("Image-Resource")}
        {Lisp-Entry "host-title" method #f 82 25 82 35 ()}
        {Lisp-Entry "get-tools-view" method #f 91 20 91 34 ("tools" "locate")}
        {Lisp-Entry "focus-default" method #f 95 20 95 33 ("acquire-focus" "acquire-focus~" "when" "get-text" "text" "let")}
        {Lisp-Entry "get-pad" method #f 106 11 106 18 ("pad" "locate")}
        {Lisp-Entry "get-text" method #f 110 18 110 26 ("get-text" "get-text~" "and" "get-pad" "get-selection" "get-selection~" "console" "let")}
        {Lisp-Entry "register-console" method #f 120 11 120 27 ("set-selected?" "set-selected?~" "acquire-focus" "acquire-focus~" "event" "lambda" "execute:" "Event-Handler" "set-action-handler" "set-action-handler~" "layout-view" "layout-view~" "set-selection" "set-selection~" "add-view" "add-view~" "get-selection" "get-selection~" "not" "get-text" "get-text~" "text" "button:" "Console-View" "or" "view" "get-pad" "pad" "get-host" "add-tool" "add-tool~" "when" ":images" "portfolio:" "Image-Resource" "resource:" "head" "location:" "auto-size?:" "title:" "Console-Button" "new" "and" "tool" "let" "console-button?" "console-button?:" "view-class" "view-class:" "select?" "title")}
        {Lisp-Entry "unregister-console" method #f 143 11 143 29 ("invalidate-view" "select-console" "and" "when" "remove-view" "remove-view~" "get-button" "get-button~" "remove-tool" "remove-tool~" "next-child" "next-child~" "next" "get-focused" "get-focused~" "get-focus" "eq?" "or" "focused?" "get-console" "get-console~" "view" "get-pad" "pad" "get-host" "host" "let" "console")}
        {Lisp-Entry "get-consoles" method #f 156 19 156 31 ("get-pad" "get-children" "get-children~")}
        {Lisp-Entry "select-console" method #f 160 11 160 25 ("set-focused" "set-focused~" "acquire-focus" "acquire-focus~" "get-focused-host" "eq?" "if" "get-text" "get-text~" "text" "get-button" "get-button~" "set-selected?" "set-selected?~" "set-selection" "set-selection~" "get-pad" "pad" "get-host" "host" "let" "console")}
        {Lisp-Entry "select-next-console" method #f 171 11 171 30 ("set-focused" "set-focused~" "acquire-focus" "acquire-focus~" "get-focused-host" "eq?" "if" "get-text" "get-text~" "text" "get-button" "get-button~" "set-selected?" "set-selected?~" "get-pad" "select-next" "select-next~" "console" "get-host" "host" "let")}
        {Lisp-Entry "update-console-buttons" method #f 186 19 186 41 ("get-host" "refresh-tools" "refresh-tools~" "get-debugger-resources" "present-process-title" "set-title" "set-title~" "get-thread" "get-thread~" "thread" "get-process" "get-process~" "get-console" "get-console~" "get-button" "get-button~" "button" "Console-Text-View" "is?" "when" "get-reference" "get-reference~" "reference" "resource" "for-each" "focused?" "live?" "process" "debugger" "lambda" "for-each-process" "for-each-process~" "get-debugger-manager" "manager" "let")}
        {Lisp-Entry "on-print-detail-menu" method #f 206 11 206 31 ("initiator:" "track-popup-menu" "track-popup-menu~" "layout-menu" "layout-menu~" "child" "child~" "set-checked?" "set-checked?~" "get-print-detail" "get-print-detail~" "detail" "console" "tools" "get-preferences" "pref" "self" "client:" "Print-Detail-Menu" "menu" "get-size" "get-size~" "get-height" "get-height~" "0" "Point" "new" "pos" "Combo-Button" "get-combo" "get-combo~" "Push-Icon" "typecase" "combo" "get-sender" "get-sender~" "sender" "let*" "evt")}
        {Lisp-Entry "on-print-detail" method #f 218 11 218 26 ("user-message" "print-detail" "set-preference" "detail:" "get-property" "get-property~" "detail" "console" "tools" "get-preferences" "pref" "let" "evt")}
        {Lisp-Entry "on-clear-console" method #f 225 11 225 27 ("acquire-focus" "acquire-focus~" "clear-console" "clear-console~" "bell" "not" "if" "get-text" "text" "let" "evt")}}
      {Lisp-Entry "Console-Button" class #f 238 7 238 21 ("Radio-Tool")
        {Lisp-Entry "draw-background" method #f 241 20 241 35 ("get-bounds" "fill-background" "fill-background~" "docked" "get-inactive-background" "get-inactive-background~" "White" "Color" "get-active-background" "get-active-background~" "or" "selected?" "if" "background" "tool" "find-look" "look" "let" "context" "surface")}}
      {Lisp-Entry "Print-Detail-Menu" class #f 254 7 254 24 ("Context-Menu")
        {Lisp-Entry "form" anonymous #f 257 3 257 7 (":describe" ":reader" ":text" "detail:" "on-print-detail" ":client" ":form" "Event-Handler" "action-handler:" "title:" ":human" "name:" "Check-Item" "<Check-Item>" "install" "<install>")}}}})
"Console-Preferences"
 ({Lisp-File-Entry {File :context "src" "jazz" "console" "Console-Preferences.jazz"} 1296083296 jazz
    {Lisp-Entry "jazz.console.Console-Preferences" module #f 37 18 37 50 ("jazz")
      {Lisp-Entry "import" anonymous #f 40 1 40 7 ("jazz.ui" "jazz.library" "jazz.jml" "jazz.console")}
      {Lisp-Entry "Console-Preferences" class #f 46 20 46 39 (":reader" ":default" "initialize" "Frame-Preferences")
        {Lisp-Entry "wrap?" property #f 49 12 49 17 ()}
        {Lisp-Entry "get-wrap?" accessor #f 49 55 49 63 ()}
        {Lisp-Entry "set-wrap?" accessor #f 49 55 49 63 ()}
        {Lisp-Entry "context" property #f 50 12 50 19 ()}
        {Lisp-Entry "get-context" accessor #f 50 55 50 63 ()}
        {Lisp-Entry "set-context" accessor #f 50 55 50 63 ()}
        {Lisp-Entry "print-detail" property #f 51 12 51 24 ()}
        {Lisp-Entry "get-print-detail" accessor #f 51 55 51 63 ()}
        {Lisp-Entry "set-print-detail" accessor #f 51 55 51 63 ()}
        {Lisp-Entry "form" anonymous #f 54 3 54 7 ("Image-Resource" "icon:" "title:" "install" "<install>")}}}})
"Console-Text-Actions"
 ({Lisp-File-Entry {File :context "src" "jazz" "console" "Console-Text-Actions.jazz"} 1296083296 jazz
    {Lisp-Entry "jazz.console.Console-Text-Actions" module #f 37 18 37 51 ("jazz")
      {Lisp-Entry "import" anonymous #f 40 1 40 7 ("jazz.ui" "jazz.library" "jazz.jml" "jazz.console")}
      {Lisp-Entry "Console-Text-Actions" class #f 46 20 46 40 ("Actions")
        {Lisp-Entry "form" anonymous #f 49 3 49 7 ("Down" "on-insert-next" "insert-next" "Up" "on-insert-previous" "insert-previous" ":alt" "on-fresh-prompt" "fresh-prompt" "Return" "Shortcut" "shortcut:" "on-console-evaluate" ":focus" "Event-Handler" "action-handler:" "console-evaluate" "name:" "Action-Item" "<Action-Item>" "install" "<install>")}}}})
"Console-Text-Preferences"
 ({Lisp-File-Entry {File :context "src" "jazz" "console" "Console-Text-Preferences.jazz"} 1296083296 jazz
    {Lisp-Entry "jazz.console.Console-Text-Preferences" module #f 37 18 37 55 ("jazz")
      {Lisp-Entry "import" anonymous #f 40 1 40 7 ("jazz.ui" "jazz.jml" "jazz.graphic" "jazz.designer")}
      {Lisp-Entry "Console-Text-Preferences" class #f 46 20 46 44 ("initialize" "Code-Text-Preferences")
        {Lisp-Entry "banner-style" property #f 49 12 49 24 ()}
        {Lisp-Entry "get-banner-style" accessor #f 49 50 49 58 ()}
        {Lisp-Entry "set-banner-style" accessor #f 49 50 49 58 ()}
        {Lisp-Entry "prompt-style" property #f 50 12 50 24 ()}
        {Lisp-Entry "get-prompt-style" accessor #f 50 50 50 58 ()}
        {Lisp-Entry "set-prompt-style" accessor #f 50 50 50 58 ()}
        {Lisp-Entry "entry-style" property #f 51 12 51 23 ()}
        {Lisp-Entry "get-entry-style" accessor #f 51 50 51 58 ()}
        {Lisp-Entry "set-entry-style" accessor #f 51 50 51 58 ()}
        {Lisp-Entry "input-style" property #f 52 12 52 23 ()}
        {Lisp-Entry "get-input-style" accessor #f 52 50 52 58 ()}
        {Lisp-Entry "set-input-style" accessor #f 52 50 52 58 ()}
        {Lisp-Entry "output-style" property #f 53 12 53 24 ()}
        {Lisp-Entry "get-output-style" accessor #f 53 50 53 58 ()}
        {Lisp-Entry "set-output-style" accessor #f 53 50 53 58 ()}
        {Lisp-Entry "comment-style" property #f 54 12 54 25 ()}
        {Lisp-Entry "get-comment-style" accessor #f 54 50 54 58 ()}
        {Lisp-Entry "set-comment-style" accessor #f 54 50 54 58 ()}
        {Lisp-Entry "form" anonymous #f 57 3 57 7 ("Entry" "default-style:" "Console-Comment" "comment-style:" "Console-Output" "output-style:" "Console-Input" "input-style:" "Console-Entry" "Console-Bold" "entry-style:" "Console-Prompt" "prompt-style:" "Console-Banner" "Base" "banner-style:" "Console-Base" "Text-Style" "base-style:" "title:" "install" "<install>")}
        {Lisp-Entry "get-class-descriptor" method #f 75 25 75 45 ("Console-Text-Preferences-Descriptor" "new")}}
      {Lisp-Entry "design" submodule #f 84 11 84 17 ()
        {Lisp-Entry "import" anonymous #f 87 1 87 7 ("jazz.designer")}
        {Lisp-Entry "Console-Text-Preferences-Descriptor" class #f 90 7 90 42 ("Document-Preferences-Descriptor")
          {Lisp-Entry "form" anonymous #f 93 3 93 7 ("name:" "Property-Descriptor" "<Property-Descriptor>" "match-action" "comment-style" "output-style" "input-style" "entry-style" "prompt-style" "banner-style" "categorized:" ">" "<properties" "<properties~>" "install" "<install>")}}}}})
"Console-Text-View"
 ({Lisp-File-Entry {File :context "src" "jazz" "console" "Console-Text-View.jazz"} 1302095163 jazz
    {Lisp-Entry "jazz.console.Console-Text-View" module #f 37 18 37 48 ("jazz")
      {Lisp-Entry "import" anonymous #f 40 1 40 7 ("jazz.ui" "jazz.system" "jazz.locale" "jazz.library" "jazz.jml" "jazz.ide" "jazz.graphic" "jazz.console")}
      {Lisp-Entry "Console-Text-View" class #f 50 20 50 37 ("initialize" "IDE-Text-View")
        {Lisp-Entry "inserted-rank" slot #f 53 8 53 21 ()}
        {Lisp-Entry "inserted-where" slot #f 54 8 54 22 ()}
        {Lisp-Entry "banner" slot #f 55 8 55 14 ()}
        {Lisp-Entry "get-banner" accessor #f 55 47 55 55 ()}
        {Lisp-Entry "set-banner" accessor #f 55 47 55 55 ()}
        {Lisp-Entry "banner-prompt" slot #f 56 8 56 21 ()}
        {Lisp-Entry "get-banner-prompt" accessor #f 56 47 56 55 ()}
        {Lisp-Entry "set-banner-prompt" accessor #f 56 47 56 55 ()}
        {Lisp-Entry "console-port" slot #f 57 8 57 20 ()}
        {Lisp-Entry "get-console-port" accessor #f 57 47 57 55 ()}
        {Lisp-Entry "set-console-port" accessor #f 57 47 57 55 ()}
        {Lisp-Entry "console-pump" slot #f 58 8 58 20 ()}
        {Lisp-Entry "get-console-pump" accessor #f 58 47 58 55 ()}
        {Lisp-Entry "set-console-pump" accessor #f 58 47 58 55 ()}
        {Lisp-Entry "partial-line" slot #f 59 8 59 20 ()}
        {Lisp-Entry "external-name" method #f 62 25 62 38 ("console-text" "rest")}
        {Lisp-Entry "default-tool?" method #f 66 20 66 33 ()}
        {Lisp-Entry "default-console?" method #f 70 20 70 36 ()}
        {Lisp-Entry "new-model" method #f 74 20 74 29 ("2" "left-padding:" "wrap?:" "Code-Base" "Text-Style" "base-style:" "Text-Model" "new")}
        {Lisp-Entry "install" method #f 78 20 78 27 ("get-comment-style" "get-comment-style~" "Comment" "get-output-style" "get-output-style~" "Output" "get-input-style" "get-input-style~" "Input" "get-entry-style" "get-entry-style~" "Entry" "get-prompt-style" "get-prompt-style~" "Prompt" "get-banner-style" "get-banner-style~" "Banner" "add-style" "preferences" "pref" "let" "syntax" "set-colorize?" "set-colorize?~" "model" "set-propagate-styles?" "set-propagate-styles?~" "nextmethod" "rest")}
        {Lisp-Entry "preferences" method #f 91 20 91 31 ("console-text" "documents" "get-preferences")}
        {Lisp-Entry "host-icon" method #f 100 25 100 34 ("Image-Resource")}
        {Lisp-Entry "host-title" method #f 104 25 104 35 ()}
        {Lisp-Entry "get-console" method #f 113 11 113 22 ("get-parent" "get-parent~")}
        {Lisp-Entry "focus-actions" method #f 122 20 122 33 ("nextmethod" "console-text" "find-actions" "cons")}
        {Lisp-Entry "on-fresh-prompt" method #f 132 11 132 26 ("fresh-prompt" "evt")}
        {Lisp-Entry "on-console-evaluate" method #f 136 11 136 30 ("get-string" "remove-enclosing" "insert-string" "else" "console-evaluate" "last-block" "nu=?" "text-ending" "set-caret" "empty-block?" "cond" "get-end" "block-at" "block" "let" "evt")}
        {Lisp-Entry "on-insert-previous" method #f 147 11 147 29 ("insert-previous-block" "evt")}
        {Lisp-Entry "on-insert-next" method #f 151 11 151 25 ("insert-next-block" "evt")}
        {Lisp-Entry "tab-press" method #f 155 20 155 29 ("insert-previous-block" "insert-next-block" "shift-key?" "end-completion" "has-completion?" "if" "modifiers" "key")}
        {Lisp-Entry "delete-char" method #f 163 20 163 31 ("nextmethod" "at-end?" "if" "console-port" "close-port" "send-end-of-file" "define")}
        {Lisp-Entry "scrollee-width" method #f 172 20 172 34 ("get-display-width")}
        {Lisp-Entry "context-menu" method #f 176 20 176 32 ("nextmethod" "Console-Menu" "new" "track-popup-menu" "context-menu-click" "begin" "not" "and" "if" "modifiers-down" "alt?" "control?" "shift?" "receive" "pos")}
        {Lisp-Entry "set-selection" method #f 185 20 185 33 ("inserted-where" "set!" "nextmethod" "apply" "rest" "range")}
        {Lisp-Entry "console-evaluate" method #f 195 11 195 27 ("eval-from-prompt" "text-ending" "set-caret")}
        {Lisp-Entry "eval-from-prompt" method #f 200 29 200 45 ("reset-inserted" "Input" "get-style" "model" "set-style" "set-style~" "force-output" "console-port" "display" "empty-string?" "unless" "get-string" "command" "current-command" "range" "let" "insert-newline")}
        {Lisp-Entry "current-command" method #f 211 11 211 26 ("Entry" "inherits?" "inherits?~" "style" "lambda" "text-ending" "select-style")}
        {Lisp-Entry "get-modified?" method #f 222 20 222 33 ()}
        {Lisp-Entry "get-tooltip-context" method #f 226 20 226 39 ("pos")}
        {Lisp-Entry "home-column" method #f 230 20 230 31 ("numeric?" "0" "substring" "header" "string-length" "<=" "2" "+" "end" "if" "find" "pos" "paragraph-string" "str" "let" "col" "row")}
        {Lisp-Entry "insert-formatted-line" method #f 249 20 249 41 ("substring" "set!" "begin" "else" "-" ">" "and" "formatted-end-delimiter" "or" "1" "+" "formatted-start-delimiter" "ecase" "eof-object?" "not" "read-char" "c" "depth" "insert-end" "0" "pos" "iterate" "input" "lambda" "call-with-input-string" "nextmethod" "string-append" "partial-line" "if" "let" "line")}
        {Lisp-Entry "current-history-item" method #f 279 20 279 40 ()}
        {Lisp-Entry "process-formatted-directive" method #f 288 20 288 47 ("nextmethod" "else" "prompt" "Prompt" "banner-prompt" "get-string" "set!" "Banner" "get-style" "model" "set-style" "set-style~" "range" "lambda" "with-formatted-range" "banner" "case" "input" "directive")}
        {Lisp-Entry "backward-style" method #f 313 21 313 35 ("get-range" "get-range~" "backward-style" "backward-style~" "end:" "start:" "model" "explorer-class" "new" "explorer" "let" "predicate" "pos")}
        {Lisp-Entry "forward-style" method #f 319 21 319 34 ("get-range" "get-range~" "forward-style" "forward-style~" "end:" "start:" "model" "explorer-class" "new" "explorer" "let" "predicate" "pos")}
        {Lisp-Entry "select-style" method #f 325 21 325 33 ("get-range" "get-range~" "select-style" "select-style~" "end:" "start:" "model" "explorer-class" "new" "explorer" "let" "predicate" "pos")}
        {Lisp-Entry "display-banner" method #f 336 26 336 40 ("Banner" "insert-styled" "when" "banner")}
        {Lisp-Entry "determine-banner" method #f 341 26 341 42 ("get-string" "when" "Output" "Prompt" "Banner" "inherits?" "inherits?~" "or" "style" "lambda" "text-beginning" "forward-style" "range" "let")}
        {Lisp-Entry "clear-console" method #f 350 18 350 31 ("Prompt" "insert-styled" "banner-prompt" "when" "display-banner" "clear-all" "determine-banner" "or" "banner" "let")}
        {Lisp-Entry "fresh-prompt" method #f 363 18 363 30 ("Prompt" "insert-styled" "insert-newline" "0" "get-col" "get-col~" "/=" "get-string" "prompt" "get-end~" "nu/=?" "and" "when" "last-prompt" "prompt-range" "set-caret" "text-ending" "end" "let" "Comment" "get-style" "get-end" "block-at" "model" "set-style" "set-style~")}
        {Lisp-Entry "reset-inserted" method #f 380 11 380 25 ("inserted-where" "inserted-rank" "set!")}
        {Lisp-Entry "text-style?" definition #f 385 15 385 26 ("Output" "Prompt" "Banner" "inherits?" "inherits?~" "or" "style")}
        {Lisp-Entry "user-style?" definition #f 391 15 391 26 ("text-style?" "not" "style")}
        {Lisp-Entry "block-at" method #f 395 11 395 19 ("forward-style" "get-end" "get-end~" "user-style?" "backward-style" "get-start" "get-start~" "new-range" "pos")}
        {Lisp-Entry "next-block" method #f 401 11 401 21 ("new-range" "user-style?" "next-end" "text-style?" "forward-style" "get-end" "get-end~" "next-start" "let*" "block")}
        {Lisp-Entry "previous-block" method #f 407 11 407 25 ("new-range" "user-style?" "previous-start" "text-style?" "backward-style" "get-start" "get-start~" "previous-end" "let*" "block")}
        {Lisp-Entry "last-block" method #f 413 11 413 21 ("user-style?" "backward-style" "text-ending" "ending" "let")}
        {Lisp-Entry "last-prompt" method #f 418 11 418 22 ("not" "lambda" "backward-style" "text-ending" "ending" "0" "Cell" "Range$Cell$" "new" "get-line" "get-line~" "=" "get-end" "get-end~" "end" "get-start" "get-start~" "start" "let" "empty?" "empty?~" "if" "range" "prompt" "Prompt" "inherits?" "inherits?~" "style" "prompt-style?" "define")}
        {Lisp-Entry "find-block" method #f 437 11 437 21 ("1" "-" "previous-block" "0" "<=" "if" "n" "last-block" "block" "iterate" "let" "rank")}
        {Lisp-Entry "empty-block?" definition #f 444 15 444 27 ("get-end" "get-end~" "get-start" "get-start~" "nu=?" "block")}
        {Lisp-Entry "insert-previous-block" method #f 449 11 449 32 ("new-range" "set!" "get-string" "remove-enclosing" "insert-string" "get-start" "start" "let" "set-selection" "inserted-where" "when" "empty-block?" "unless" "find-block" "block" "1" "+" "previous" "0" "inserted-rank" "or" "current" "let*")}
        {Lisp-Entry "insert-next-block" method #f 462 11 462 28 ("new-range" "set!" "get-string" "remove-enclosing" "insert-string" "get-start" "start" "set-selection" "inserted-where" "empty-block?" "unless" "find-block" "block" "let" ">" "when" "1" "-" "next" "0" "inserted-rank" "or" "current" "let*")}}
      {Lisp-Entry "Console-Menu" class #f 481 7 481 19 ("Context-Menu")
        {Lisp-Entry "form" anonymous #f 484 3 484 7 ("insert-next" "insert-previous" "paste" "copy" "view" "french:" "english:" "Locales" "cut" "edit-references" "code-text" "edit-definitions" "Separator-Item" "<Separator-Item>" "fresh-prompt" "console-text" "Action" "action-handler:" "Image-Resource" "icon:" "title:" "console-evaluate" "name:" "Label-Item" "<Label-Item>" "install" "<install>")}}}})
"Console-View"
 ({Lisp-File-Entry {File :context "src" "jazz" "console" "Console-View.jazz"} 1301954651 jazz
    {Lisp-Entry "jazz.console.Console-View" module #f 37 18 37 43 ("jazz")
      {Lisp-Entry "import" anonymous #f 40 1 40 7 ("jazz.ui" "jazz.jml" "jazz.console")}
      {Lisp-Entry "Console-View" class #f 45 20 45 32 ("initialize" "Scroller-View")
        {Lisp-Entry "button" property #f 48 12 48 18 ()}
        {Lisp-Entry "get-button" accessor #f 48 40 48 48 ()}
        {Lisp-Entry "form" anonymous #f 51 3 51 7 ("text" "Console-Text-View" "<Console-Text-View>" "content" "name:" "!" "<!>" "tool" "style:" "hscroll?:" "vscroll?:" "install" "<install>")}
        {Lisp-Entry "get-text" method #f 57 11 57 19 ("text" "locate")}}}})
"_console"
 ({Lisp-File-Entry {File :context "src" "jazz" "console" "_console.jazz"} 1296083296 jazz
    {Lisp-Entry "jazz.console" module #f 37 8 37 20 ("jazz")
      {Lisp-Entry "export" anonymous #f 40 1 40 7 ("jazz.console.autoload")}
      {Lisp-Entry "import" anonymous #f 41 1 41 7 ("jazz.ui.view" "jazz.editor.lisp")}
      {Lisp-Entry "get-console-manager" definition #f 45 20 45 39 ("Lisp-Console-Manager" "singleton-docked" "get-guest" "get-guest~")}
      {Lisp-Entry "get-console-text" definition #f 49 20 49 36 ("get-console-manager" "get-text" "get-text~")}
      {Lisp-Entry "get-console-text-manager" definition #f 53 21 53 45 ("get-parent" "get-parent~" "get-creator" "get-creator~" "text")}}})
"autoload"
 ({Lisp-File-Entry {File :context "src" "jazz" "console" "autoload.jazz"} 1296083296 jazz
    {Lisp-Entry "jazz.console.autoload" module #f 37 18 37 39 ("jazz")
      {Lisp-Entry "export" anonymous #f 40 1 40 7 ("Console-View" "jazz.console.Console-View" "Console-Text-View" "jazz.console.Console-Text-View" "Console-Text-Preferences" "jazz.console.Console-Text-Preferences" "Console-Text-Actions" "jazz.console.Console-Text-Actions" "Console-Preferences" "jazz.console.Console-Preferences" "Console-Manager" "autoload" "jazz.console.Console-Manager")}}})
