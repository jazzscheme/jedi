"_profiler"
 ({Lisp-File-Entry {File profiler "src" "profiler" "_profiler.jazz"} 1288732035
    {Lisp-Entry "profiler" module #f 37 8 37 16 ("jazz")
      {Lisp-Entry "default-profiler" native #f 43 8 43 24 ()}
      {Lisp-Entry "default-profiler-depth" native #f 44 8 44 30 ()}
      {Lisp-Entry "default-profile" native #f 45 8 45 23 ()}
      {Lisp-Entry "make-profiler" native #f 46 8 46 21 ()}
      {Lisp-Entry "profiler-name" native #f 47 8 47 21 ()}
      {Lisp-Entry "profiler-start" native #f 48 8 48 22 ()}
      {Lisp-Entry "profiler-stop" native #f 49 8 49 21 ()}
      {Lisp-Entry "profiler-on?" native #f 50 8 50 20 ()}
      {Lisp-Entry "profiler-default-depth" native #f 51 8 51 30 ()}
      {Lisp-Entry "profiler-ignore-procedure" native #f 52 8 52 33 ()}
      {Lisp-Entry "profiler-ignore-module" native #f 53 8 53 30 ()}
      {Lisp-Entry "get-profilers" native #f 54 8 54 21 ()}
      {Lisp-Entry "get-profiler" native #f 55 8 55 20 ()}
      {Lisp-Entry "register-profiler" native #f 56 8 56 25 ()}
      {Lisp-Entry "unregister-profiler" native #f 57 8 57 27 ()}
      {Lisp-Entry "active-profile" native #f 58 8 58 22 ()}
      {Lisp-Entry "profile-label" native #f 59 8 59 21 ()}
      {Lisp-Entry "profile-profiler" native #f 60 8 60 24 ()}
      {Lisp-Entry "profile-depth" native #f 61 8 61 21 ()}
      {Lisp-Entry "profile-performance-frequency" native #f 62 8 62 37 ()}
      {Lisp-Entry "profile-frame-count" native #f 63 8 63 27 ()}
      {Lisp-Entry "profile-frame-count-set!" native #f 64 8 64 32 ()}
      {Lisp-Entry "profile-frame-duration" native #f 65 8 65 30 ()}
      {Lisp-Entry "profile-frame-duration-set!" native #f 66 8 66 35 ()}
      {Lisp-Entry "profile-total-count" native #f 67 8 67 27 ()}
      {Lisp-Entry "profile-total-count-set!" native #f 68 8 68 32 ()}
      {Lisp-Entry "profile-total-duration" native #f 69 8 69 30 ()}
      {Lisp-Entry "profile-total-duration-set!" native #f 70 8 70 35 ()}
      {Lisp-Entry "profile-unknown-count" native #f 71 8 71 29 ()}
      {Lisp-Entry "profile-unknown-count-set!" native #f 72 8 72 34 ()}
      {Lisp-Entry "profile-unknown-duration" native #f 73 8 73 32 ()}
      {Lisp-Entry "profile-unknown-duration-set!" native #f 74 8 74 37 ()}
      {Lisp-Entry "profile-calls" native #f 75 8 75 21 ()}
      {Lisp-Entry "make-profile-call" native #f 76 8 76 25 ()}
      {Lisp-Entry "profile-call-count" native #f 77 8 77 26 ()}
      {Lisp-Entry "profile-call-count-set!" native #f 78 8 78 31 ()}
      {Lisp-Entry "profile-call-duration" native #f 79 8 79 29 ()}
      {Lisp-Entry "profile-call-duration-set!" native #f 80 8 80 34 ()}
      {Lisp-Entry "profile-frames" native #f 81 8 81 22 ()}
      {Lisp-Entry "profile-call" native #f 82 8 82 20 ()}
      {Lisp-Entry "profile-register-call" native #f 83 8 83 29 ()}
      {Lisp-Entry "new-profile" native #f 84 8 84 19 ()}
      {Lisp-Entry "reset-profile" native #f 85 8 85 21 ()}
      {Lisp-Entry "frame-profile" native #f 86 8 86 21 ()}
      {Lisp-Entry "get-profiles" native #f 87 8 87 20 ()}
      {Lisp-Entry "get-profile-names" native #f 88 8 88 25 ()}
      {Lisp-Entry "find-profile" native #f 89 8 89 20 ()}
      {Lisp-Entry "register-profile" native #f 90 8 90 24 ()}
      {Lisp-Entry "unregister-profile" native #f 91 8 91 26 ()}
      {Lisp-Entry "with-profiling" native #f 92 8 92 22 ()}
      {Lisp-Entry "start-profiler" native #f 93 8 93 22 ()}
      {Lisp-Entry "stop-profiler" native #f 94 8 94 21 ()}
      {Lisp-Entry "profile-running?" native #f 95 8 95 24 ()}
      {Lisp-Entry "profiler-performance-frequency" native #f 96 8 96 38 ()}
      {Lisp-Entry "profiler-performance-counter" native #f 97 8 97 36 ()}
      {Lisp-Entry "profiler-performance-frequency-set!" native #f 98 8 98 43 ()}
      {Lisp-Entry "profiler-performance-counter-set!" native #f 99 8 99 41 ()}
      {Lisp-Entry "identify-call" native #f 100 8 100 21 ()}}})
"implementation"
 ({Lisp-File-Entry {File profiler "src" "profiler" "implementation.scm"} 1288732035
    {Lisp-Entry "profiler.implementation" unit #f 37 16 37 39 ("real-time" "seconds->milliseconds" "profiler-performance-counter" "1000" "lambda" "profiler-performance-frequency" "set!")
      {Lisp-Entry "default-profiler" define-macro ("setting") 48 21 48 37 ()}
      {Lisp-Entry "default-profiler-ignored-procedures" define-macro ("setting") 51 21 51 56 ("##primordial-exception-handler-hook" "##thread-start-action!" "##call-with-values" "##dynamic-env-bind" "%%list")}
      {Lisp-Entry "default-profiler-ignored-modules" define-macro ("setting") 58 21 58 53 ()}
      {Lisp-Entry "make-profiler" define #f 67 9 67 22 ("default-profiler-ignored-modules" "default-profiler-ignored-procedures" "profiler" "'profiler" "%%vector" "default-depth" "stop" "start" "name")}
      {Lisp-Entry "profiler-name" define #f 71 9 71 22 ("1" "%%vector-ref" "profiler")}
      {Lisp-Entry "profiler-start" define #f 74 9 74 23 ("2" "%%vector-ref" "profiler")}
      {Lisp-Entry "profiler-stop" define #f 77 9 77 22 ("3" "%%vector-ref" "profiler")}
      {Lisp-Entry "profiler-default-depth" define #f 80 9 80 31 ("4" "%%vector-ref" "profiler")}
      {Lisp-Entry "profiler-default-depth-set!" define #f 83 9 83 36 ("4" "%%vector-set!" "default-depth" "profiler")}
      {Lisp-Entry "profiler-ignored-procedures" define #f 86 9 86 36 ("5" "%%vector-ref" "profiler")}
      {Lisp-Entry "profiler-ignored-procedures-set!" define #f 89 9 89 41 ("5" "%%vector-set!" "ignored-procedures" "profiler")}
      {Lisp-Entry "profiler-ignored-modules" define #f 92 9 92 33 ("6" "%%vector-ref" "profiler")}
      {Lisp-Entry "profiler-ignored-modules-set!" define #f 95 9 95 38 ("6" "%%vector-set!" "ignored-modules" "profiler")}
      {Lisp-Entry "profiler-ignore-procedure?" define #f 99 9 99 35 ("profiler-ignored-procedures" "%%memq" "procedure" "profiler")}
      {Lisp-Entry "profiler-ignore-module?" define #f 102 9 102 32 ("profiler-ignored-modules" "%%memq" "module" "profiler")}
      {Lisp-Entry "profiler-ignore-procedure" define #f 105 9 105 34 ("profiler-ignored-procedures" "%%cons" "profiler-ignored-procedures-set!" "profiler-ignore-procedure?" "%%not" "if" "procedure" "profiler")}
      {Lisp-Entry "profiler-ignore-module" define #f 109 9 109 31 ("profiler-ignored-modules" "%%cons" "profiler-ignored-modules-set!" "profiler-ignore-module?" "%%not" "if" "module" "profiler")}
      {Lisp-Entry "*profilers*" define #f 119 8 119 19 ("eq?" "test:" "%%make-table")}
      {Lisp-Entry "get-profilers" define #f 123 9 123 22 ("*profilers*")}
      {Lisp-Entry "get-profiler" define #f 126 9 126 21 ("*profilers*" "%%table-ref" "name")}
      {Lisp-Entry "register-profiler" define #f 130 9 130 26 ("profiler-name" "*profilers*" "%%table-set!" "profiler")}
      {Lisp-Entry "unregister-profiler" define #f 133 9 133 28 ("profiler-name" "*profilers*" "%%table-clear" "profiler")}
      {Lisp-Entry "make-profile" define #f 142 9 142 21 ("equal?" "test:" "%%make-table" "0" "profile" "'profile" "%%vector" "performance-frequency" "depth" "profiler" "label")}
      {Lisp-Entry "profile-label" define #f 146 9 146 22 ("1" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-profiler" define #f 149 9 149 25 ("2" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-profiler-set!" define #f 152 9 152 30 ("2" "%%vector-set!" "profiler" "profile")}
      {Lisp-Entry "profile-depth" define #f 155 9 155 22 ("3" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-depth-set!" define #f 158 9 158 27 ("3" "%%vector-set!" "depth" "profile")}
      {Lisp-Entry "profile-performance-frequency" define #f 161 9 161 38 ("4" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-performance-frequency-set!" define #f 164 9 164 43 ("4" "%%vector-set!" "performance-frequency" "profile")}
      {Lisp-Entry "profile-frame-count" define #f 167 9 167 28 ("5" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-frame-count-set!" define #f 170 9 170 33 ("5" "%%vector-set!" "count" "profile")}
      {Lisp-Entry "profile-frame-duration" define #f 173 9 173 31 ("6" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-frame-duration-set!" define #f 176 9 176 36 ("6" "%%vector-set!" "count" "profile")}
      {Lisp-Entry "profile-total-count" define #f 179 9 179 28 ("7" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-total-count-set!" define #f 182 9 182 33 ("7" "%%vector-set!" "total" "profile")}
      {Lisp-Entry "profile-total-duration" define #f 185 9 185 31 ("8" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-total-duration-set!" define #f 188 9 188 36 ("8" "%%vector-set!" "total" "profile")}
      {Lisp-Entry "profile-unknown-count" define #f 191 9 191 30 ("9" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-unknown-count-set!" define #f 194 9 194 35 ("9" "%%vector-set!" "unknown" "profile")}
      {Lisp-Entry "profile-unknown-duration" define #f 197 9 197 33 ("10" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-unknown-duration-set!" define #f 200 9 200 38 ("10" "%%vector-set!" "unknown" "profile")}
      {Lisp-Entry "profile-start-counter" define #f 203 9 203 30 ("11" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-start-counter-set!" define #f 206 9 206 35 ("11" "%%vector-set!" "start-counter" "profile")}
      {Lisp-Entry "profile-last-counter" define #f 209 9 209 29 ("12" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-last-counter-set!" define #f 212 9 212 34 ("12" "%%vector-set!" "last-counter" "profile")}
      {Lisp-Entry "profile-calls" define #f 215 9 215 22 ("13" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-calls-set!" define #f 218 9 218 27 ("13" "%%vector-set!" "calls" "profile")}
      {Lisp-Entry "new-profile" define #f 222 9 222 20 ("profiler-default-depth" "make-profile" "profiler-performance-frequency" "default-profiler" "or" "let" "performance-frequency" "depth" "profiler" "label" "#!key")}
      {Lisp-Entry "*profiles*" define #f 232 8 232 18 ("equal?" "test:" "make-table")}
      {Lisp-Entry "get-profiles" define #f 236 9 236 21 ("*profiles*")}
      {Lisp-Entry "get-profile-names" define #f 239 9 239 26 ("%%cons" "set!" "profile" "name" "lambda" "*profiles*" "jazz.iterate-table" "names" "let")}
      {Lisp-Entry "find-profile" define #f 247 9 247 21 ("%%table-set!" "new-profile" "profile" "let" "%%not" "if" "*profiles*" "%%table-ref" "or" "name")}
      {Lisp-Entry "register-profile" define #f 256 9 256 25 ("profile-label" "*profiles*" "%%table-set!" "profile")}
      {Lisp-Entry "unregister-profile" define #f 259 9 259 27 ("*profiles*" "%%table-clear" "name")}
      {Lisp-Entry "make-profile-call" define #f 268 9 268 26 ("0" "%%cons")}
      {Lisp-Entry "profile-call-count" define #f 272 9 272 27 ("%%car" "call")}
      {Lisp-Entry "profile-call-count-set!" define #f 275 9 275 32 ("%%set-car!" "count" "call")}
      {Lisp-Entry "profile-call-duration" define #f 278 9 278 30 ("%%cdr" "call")}
      {Lisp-Entry "profile-call-duration-set!" define #f 281 9 281 35 ("%%set-cdr!" "duration" "call")}
      {Lisp-Entry "profiler-on?" define #f 290 8 290 20 ("make-parameter")}
      {Lisp-Entry "active-profile" define #f 294 8 294 22 ("make-parameter")}
      {Lisp-Entry "reset-profile" define #f 298 9 298 22 ("equal?" "test:" "%%make-table" "profile-calls-set!" "profile-last-counter-set!" "profile-start-counter-set!" "profile-unknown-duration-set!" "profile-unknown-count-set!" "profile-total-duration-set!" "profile-total-count-set!" "0" "profile-frame-duration-set!" "profile-frame-count-set!" "profile-depth-set!" "profile-profiler-set!" "if" "depth" "profiler" "profile")}
      {Lisp-Entry "profile-frames" define #f 319 9 319 23 ("1" "profile-frame-count" "or" "profile")}
      {Lisp-Entry "profile-call" define #f 328 9 328 21 ("%%table-set!" "make-profile-call" "call" "%%table-ref" "or" "profile-calls" "calls" "let" "name" "profile")}
      {Lisp-Entry "profile-register-call" define #f 336 9 336 30 ("profile-call-duration" "profile-call-duration-set!" "profile-call-count" "profile-call-count-set!" "profile-call" "call" "let" "profile-unknown-duration" "profile-unknown-duration-set!" "profile-unknown-count" "profile-unknown-count-set!" "begin" "%%not" "if" "profile-total-duration" "profile-total-duration-set!" "1" "profile-total-count" "+" "profile-total-count-set!" "duration" "stack" "profile")}
      {Lisp-Entry "seconds->milliseconds" define #f 353 9 353 30 ("1000" "*" "round" "inexact->exact" "x")}
      {Lisp-Entry "profiler-performance-frequency" define #f 357 8 357 38 ()}
      {Lisp-Entry "profiler-performance-counter" define #f 365 8 365 36 ()}
      {Lisp-Entry "profiler-performance-frequency-set!" define #f 373 9 373 44 ("profiler-performance-frequency" "set!" "proc")}
      {Lisp-Entry "profiler-performance-counter-set!" define #f 377 9 377 42 ("profiler-performance-counter" "set!" "proc")}
      {Lisp-Entry "with-profiling" define #f 386 9 386 23 ("stop-profiler" "active-profile" "parameterize" "start-profiler" "thunk" "profile")}
      {Lisp-Entry "start-profiler" define #f 393 9 393 23 ("if" "profiler-performance-counter" "profile-start-counter-set!" "profile-profiler" "profiler-start" "start" "let" "profile")}
      {Lisp-Entry "stop-profiler" define #f 400 9 400 22 ("profile-frame-duration" "profile-frame-duration-set!" "1" "0" "profile-frame-count" "or" "+" "profile-frame-count-set!" "profile-start-counter" "profiler-performance-counter" "-" "duration" "if" "profile-profiler" "profiler-stop" "stop" "let" "profile")}
      {Lisp-Entry "identify-call" define #f 414 9 414 22 ("0" "1" "%%fx+" "%%cons" "location" "%%not" "%%fx<" "d" "identify" "%%list" "%%filepos-col" "col" "%%filepos-line" "line" "%%locat-position" "%%position->filepos" "filepos" "container" "locat" "identify-location" "%%eq?" "current-creator" "jazz.procedure-name" "creator-name" "creator" "continuation-next-distinct" "%%continuation-next" "%%locat-container" "profiler-ignore-module?" "and" "%%continuation-locat" "current-location" "profiler-ignore-procedure?" "or" "current-cont" "loop" "continuation-next-interesting" "%%closure-code" "%%closure?" "if" "%%continuation-creator" "proc" "let" "continuation-creator" "define" "profiler" "depth" "cont")}}})
