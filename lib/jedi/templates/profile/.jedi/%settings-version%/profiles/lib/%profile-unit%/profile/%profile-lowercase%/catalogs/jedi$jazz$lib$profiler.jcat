"_profiler"
 ({Lisp-File-Entry {File :context "src" "profiler" "_profiler.jazz"} 1296083298 jazz
    {Lisp-Entry "profiler" module #f 37 8 37 16 ("jazz")
      {Lisp-Entry "require" anonymous #f 40 1 40 8 ("profiler.implementation")}
      {Lisp-Entry "default-profiler-depth" native #f 43 8 43 30 ()}
      {Lisp-Entry "default-profile" native #f 44 8 44 23 ()}
      {Lisp-Entry "make-profiler" native #f 45 8 45 21 ()}
      {Lisp-Entry "profiler-name" native #f 46 8 46 21 ()}
      {Lisp-Entry "profiler-start" native #f 47 8 47 22 ()}
      {Lisp-Entry "profiler-stop" native #f 48 8 48 21 ()}
      {Lisp-Entry "profiler-on?" native #f 49 8 49 20 ()}
      {Lisp-Entry "profiler-default-depth" native #f 50 8 50 30 ()}
      {Lisp-Entry "profiler-ignore-procedure" native #f 51 8 51 33 ()}
      {Lisp-Entry "profiler-ignore-module" native #f 52 8 52 30 ()}
      {Lisp-Entry "active-profile" native #f 53 8 53 22 ()}
      {Lisp-Entry "profile-label" native #f 54 8 54 21 ()}
      {Lisp-Entry "profile-profiler" native #f 55 8 55 24 ()}
      {Lisp-Entry "profile-depth" native #f 56 8 56 21 ()}
      {Lisp-Entry "profile-performance-frequency" native #f 57 8 57 37 ()}
      {Lisp-Entry "profile-frame-count" native #f 58 8 58 27 ()}
      {Lisp-Entry "profile-frame-count-set!" native #f 59 8 59 32 ()}
      {Lisp-Entry "profile-frame-duration" native #f 60 8 60 30 ()}
      {Lisp-Entry "profile-frame-duration-set!" native #f 61 8 61 35 ()}
      {Lisp-Entry "profile-total-count" native #f 62 8 62 27 ()}
      {Lisp-Entry "profile-total-count-set!" native #f 63 8 63 32 ()}
      {Lisp-Entry "profile-total-duration" native #f 64 8 64 30 ()}
      {Lisp-Entry "profile-total-duration-set!" native #f 65 8 65 35 ()}
      {Lisp-Entry "profile-unknown-count" native #f 66 8 66 29 ()}
      {Lisp-Entry "profile-unknown-count-set!" native #f 67 8 67 34 ()}
      {Lisp-Entry "profile-unknown-duration" native #f 68 8 68 32 ()}
      {Lisp-Entry "profile-unknown-duration-set!" native #f 69 8 69 37 ()}
      {Lisp-Entry "profile-calls" native #f 70 8 70 21 ()}
      {Lisp-Entry "make-profile-call" native #f 71 8 71 25 ()}
      {Lisp-Entry "profile-call-count" native #f 72 8 72 26 ()}
      {Lisp-Entry "profile-call-count-set!" native #f 73 8 73 31 ()}
      {Lisp-Entry "profile-call-duration" native #f 74 8 74 29 ()}
      {Lisp-Entry "profile-call-duration-set!" native #f 75 8 75 34 ()}
      {Lisp-Entry "profile-frames" native #f 76 8 76 22 ()}
      {Lisp-Entry "profile-call" native #f 77 8 77 20 ()}
      {Lisp-Entry "profile-register-call" native #f 78 8 78 29 ()}
      {Lisp-Entry "new-profile" native #f 79 8 79 19 ()}
      {Lisp-Entry "reset-profile" native #f 80 8 80 21 ()}
      {Lisp-Entry "frame-profile" native #f 81 8 81 21 ()}
      {Lisp-Entry "get-profiles" native #f 82 8 82 20 ()}
      {Lisp-Entry "get-profile-names" native #f 83 8 83 25 ()}
      {Lisp-Entry "get-selected-profile" native #f 84 8 84 28 ()}
      {Lisp-Entry "set-selected-profile" native #f 85 8 85 28 ()}
      {Lisp-Entry "find-profile" native #f 86 8 86 20 ()}
      {Lisp-Entry "find-selected-profile" native #f 87 8 87 29 ()}
      {Lisp-Entry "register-profile" native #f 88 8 88 24 ()}
      {Lisp-Entry "unregister-profile" native #f 89 8 89 26 ()}
      {Lisp-Entry "with-profiling" native #f 90 8 90 22 ()}
      {Lisp-Entry "start-profiler" native #f 91 8 91 22 ()}
      {Lisp-Entry "stop-profiler" native #f 92 8 92 21 ()}
      {Lisp-Entry "profile-running?" native #f 93 8 93 24 ()}
      {Lisp-Entry "profiler-performance-frequency" native #f 94 8 94 38 ()}
      {Lisp-Entry "profiler-performance-counter" native #f 95 8 95 36 ()}
      {Lisp-Entry "profiler-performance-frequency-set!" native #f 96 8 96 43 ()}
      {Lisp-Entry "profiler-performance-counter-set!" native #f 97 8 97 41 ()}
      {Lisp-Entry "identify-call" native #f 98 8 98 21 ()}}})
"implementation"
 ({Lisp-File-Entry {File :context "src" "profiler" "implementation.scm"} 1299180551 scheme
    {Lisp-Entry "profiler.implementation" unit #f 37 16 37 39 ("tick-performance-counter" "1" "real-time" "seconds->milliseconds" "profiler-performance-counter" "1000" "lambda" "profiler-performance-frequency" "set!")
      {Lisp-Entry "default-profiler" define-macro ("setting") 48 21 48 37 ("statprof")}
      {Lisp-Entry "default-profiler-ignored-procedures" define-macro ("setting") 51 21 51 56 ("##primordial-exception-handler-hook" "##thread-start-action!" "##call-with-values" "##dynamic-env-bind" "%%list")}
      {Lisp-Entry "default-profiler-ignored-modules" define-macro ("setting") 58 21 58 53 ()}
      {Lisp-Entry "make-profiler" define #f 67 9 67 22 ("default-profiler-ignored-modules" "default-profiler-ignored-procedures" "profiler" "%%vector" "default-depth" "stop" "start" "name")}
      {Lisp-Entry "profiler-name" define #f 71 9 71 22 ("1" "%%vector-ref" "profiler")}
      {Lisp-Entry "profiler-start" define #f 74 9 74 23 ("2" "%%vector-ref" "profiler")}
      {Lisp-Entry "profiler-stop" define #f 77 9 77 22 ("3" "%%vector-ref" "profiler")}
      {Lisp-Entry "profiler-default-depth" define #f 80 9 80 31 ("4" "%%vector-ref" "profiler")}
      {Lisp-Entry "profiler-default-depth-set!" define #f 83 9 83 36 ("4" "%%vector-set!" "default-depth" "profiler")}
      {Lisp-Entry "profiler-ignored-procedures" define #f 86 9 86 36 ("5" "%%vector-ref" "profiler")}
      {Lisp-Entry "profiler-ignored-procedures-set!" define #f 89 9 89 41 ("5" "%%vector-set!" "ignored-procedures" "profiler")}
      {Lisp-Entry "profiler-ignored-modules" define #f 92 9 92 33 ("6" "%%vector-ref" "profiler")}
      {Lisp-Entry "profiler-ignored-modules-set!" define #f 95 9 95 38 ("6" "%%vector-set!" "ignored-modules" "profiler")}
      {Lisp-Entry "profiler-ignore-procedure?" define #f 99 9 99 35 ("profiler-ignored-procedures" "%%memq" "procedure" "profiler")}
      {Lisp-Entry "profiler-ignore-module?" define #f 102 9 102 32 ("profiler-ignored-modules" "%%memq" "module" "profiler")}
      {Lisp-Entry "profiler-ignore-procedure" define #f 105 9 105 34 ("profiler-ignored-procedures" "%%cons" "profiler-ignored-procedures-set!" "profiler-ignore-procedure?" "%%not" "if" "procedure" "profiler")}
      {Lisp-Entry "profiler-ignore-module" define #f 109 9 109 31 ("profiler-ignored-modules" "%%cons" "profiler-ignored-modules-set!" "profiler-ignore-module?" "%%not" "if" "module" "profiler")}
      {Lisp-Entry "make-profile" define #f 119 9 119 21 ("equal?" "test:" "%%make-table" "0" "profile" "%%vector" "performance-frequency" "depth" "profiler" "label")}
      {Lisp-Entry "profile-label" define #f 123 9 123 22 ("1" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-profiler" define #f 126 9 126 25 ("2" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-profiler-set!" define #f 129 9 129 30 ("2" "%%vector-set!" "profiler" "profile")}
      {Lisp-Entry "profile-depth" define #f 132 9 132 22 ("3" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-depth-set!" define #f 135 9 135 27 ("3" "%%vector-set!" "depth" "profile")}
      {Lisp-Entry "profile-performance-frequency" define #f 138 9 138 38 ("4" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-performance-frequency-set!" define #f 141 9 141 43 ("4" "%%vector-set!" "performance-frequency" "profile")}
      {Lisp-Entry "profile-frame-count" define #f 144 9 144 28 ("5" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-frame-count-set!" define #f 147 9 147 33 ("5" "%%vector-set!" "count" "profile")}
      {Lisp-Entry "profile-frame-duration" define #f 150 9 150 31 ("6" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-frame-duration-set!" define #f 153 9 153 36 ("6" "%%vector-set!" "count" "profile")}
      {Lisp-Entry "profile-total-count" define #f 156 9 156 28 ("7" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-total-count-set!" define #f 159 9 159 33 ("7" "%%vector-set!" "total" "profile")}
      {Lisp-Entry "profile-total-duration" define #f 162 9 162 31 ("8" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-total-duration-set!" define #f 165 9 165 36 ("8" "%%vector-set!" "total" "profile")}
      {Lisp-Entry "profile-unknown-count" define #f 168 9 168 30 ("9" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-unknown-count-set!" define #f 171 9 171 35 ("9" "%%vector-set!" "unknown" "profile")}
      {Lisp-Entry "profile-unknown-duration" define #f 174 9 174 33 ("10" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-unknown-duration-set!" define #f 177 9 177 38 ("10" "%%vector-set!" "unknown" "profile")}
      {Lisp-Entry "profile-start-counter" define #f 180 9 180 30 ("11" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-start-counter-set!" define #f 183 9 183 35 ("11" "%%vector-set!" "start-counter" "profile")}
      {Lisp-Entry "profile-last-counter" define #f 186 9 186 29 ("12" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-last-counter-set!" define #f 189 9 189 34 ("12" "%%vector-set!" "last-counter" "profile")}
      {Lisp-Entry "profile-calls" define #f 192 9 192 22 ("13" "%%vector-ref" "profile")}
      {Lisp-Entry "profile-calls-set!" define #f 195 9 195 27 ("13" "%%vector-set!" "calls" "profile")}
      {Lisp-Entry "new-profile" define #f 199 9 199 20 ("make-profile" "profiler-performance-frequency" "profiler-default-depth" "default-profiler" "jazz:require-service" "or" "let" "performance-frequency" "depth" "profiler" "label" "#!key")}
      {Lisp-Entry "*profiles*" define #f 211 8 211 18 ("equal?" "test:" "make-table")}
      {Lisp-Entry "*selected-profile*" define #f 214 8 214 26 ()}
      {Lisp-Entry "get-profiles" define #f 218 9 218 21 ("*profiles*")}
      {Lisp-Entry "get-profile-names" define #f 221 9 221 26 ("%%cons" "set!" "profile" "name" "lambda" "*profiles*" "jazz:iterate-table" "names" "let")}
      {Lisp-Entry "get-selected-profile" define #f 229 9 229 29 ("*selected-profile*")}
      {Lisp-Entry "set-selected-profile" define #f 232 9 232 29 ("*selected-profile*" "set!" "name")}
      {Lisp-Entry "find-profile" define #f 236 9 236 21 ("%%table-set!" "new-profile" "profile" "let" "%%not" "if" "*profiles*" "%%table-ref" "or" "name")}
      {Lisp-Entry "find-selected-profile" define #f 245 9 245 30 ("get-selected-profile" "find-profile")}
      {Lisp-Entry "register-profile" define #f 249 9 249 25 ("profile-label" "*profiles*" "%%table-set!" "profile")}
      {Lisp-Entry "unregister-profile" define #f 252 9 252 27 ("*profiles*" "%%table-clear" "name")}
      {Lisp-Entry "make-profile-call" define #f 261 9 261 26 ("0" "%%cons")}
      {Lisp-Entry "profile-call-count" define #f 265 9 265 27 ("%%car" "call")}
      {Lisp-Entry "profile-call-count-set!" define #f 268 9 268 32 ("%%set-car!" "count" "call")}
      {Lisp-Entry "profile-call-duration" define #f 271 9 271 30 ("%%cdr" "call")}
      {Lisp-Entry "profile-call-duration-set!" define #f 274 9 274 35 ("%%set-cdr!" "duration" "call")}
      {Lisp-Entry "profiler-on?" define #f 283 8 283 20 ("make-parameter")}
      {Lisp-Entry "active-profile" define #f 287 8 287 22 ("make-parameter")}
      {Lisp-Entry "reset-profile" define #f 291 9 291 22 ("equal?" "test:" "%%make-table" "profile-calls-set!" "profile-last-counter-set!" "profile-start-counter-set!" "profile-unknown-duration-set!" "profile-unknown-count-set!" "profile-total-duration-set!" "profile-total-count-set!" "0" "profile-frame-duration-set!" "profile-frame-count-set!" "profile-depth-set!" "profile-profiler-set!" "if" "depth" "profiler" "profile")}
      {Lisp-Entry "profile-frames" define #f 312 9 312 23 ("1" "profile-frame-count" "or" "profile")}
      {Lisp-Entry "profile-call" define #f 321 9 321 21 ("%%table-set!" "make-profile-call" "call" "%%table-ref" "or" "profile-calls" "calls" "let" "name" "profile")}
      {Lisp-Entry "profile-register-call" define #f 329 9 329 30 ("profile-call-duration" "profile-call-duration-set!" "profile-call-count" "profile-call-count-set!" "profile-call" "call" "let" "profile-unknown-duration" "profile-unknown-duration-set!" "profile-unknown-count" "profile-unknown-count-set!" "begin" "%%not" "if" "profile-total-duration" "profile-total-duration-set!" "1" "profile-total-count" "+" "profile-total-count-set!" "duration" "stack" "profile")}
      {Lisp-Entry "seconds->milliseconds" define #f 346 9 346 30 ("1000" "*" "round" "inexact->exact" "x")}
      {Lisp-Entry "profiler-performance-frequency" define #f 350 8 350 38 ()}
      {Lisp-Entry "profiler-performance-counter" define #f 358 8 358 36 ()}
      {Lisp-Entry "profiler-performance-frequency-set!" define #f 366 9 366 44 ("profiler-performance-frequency" "set!" "proc")}
      {Lisp-Entry "profiler-performance-counter-set!" define #f 370 9 370 42 ("profiler-performance-counter" "set!" "proc")}
      {Lisp-Entry "tick-performance-counter" define #f 374 8 374 32 ("1" "+" "set!" "counter" "lambda" "0" "tick" "let")}
      {Lisp-Entry "with-profiling" define #f 390 9 390 23 ("stop-profiler" "result" "let" "active-profile" "parameterize" "start-profiler" "thunk" "profile")}
      {Lisp-Entry "start-profiler" define #f 398 9 398 23 ("if" "profiler-performance-counter" "profile-start-counter-set!" "profile-profiler" "profiler-start" "start" "let" "profile")}
      {Lisp-Entry "stop-profiler" define #f 405 9 405 22 ("profile-frame-duration" "profile-frame-duration-set!" "1" "0" "profile-frame-count" "or" "+" "profile-frame-count-set!" "profile-start-counter" "profiler-performance-counter" "-" "duration" "if" "profile-profiler" "profiler-stop" "stop" "let" "profile")}
      {Lisp-Entry "identify-call" define #f 419 9 419 22 ("0" "1" "%%fx+" "%%cons" "location" "%%not" "%%fx<" "d" "identify" "%%list" "%%filepos-col" "col" "%%filepos-line" "line" "%%locat-position" "%%position->filepos" "filepos" "container" "locat" "identify-location" "%%eq?" "current-creator" "jazz:procedure-name" "creator-name" "creator" "continuation-next-distinct" "%%continuation-next" "%%locat-container" "profiler-ignore-module?" "%%continuation-locat" "current-location" "profiler-ignore-procedure?" "or" "current-cont" "loop" "continuation-next-interesting" "%%closure-code" "%%closure?" "and" "if" "%%continuation-creator" "proc" "let" "continuation-creator" "define" "profiler" "depth" "cont")}}})
