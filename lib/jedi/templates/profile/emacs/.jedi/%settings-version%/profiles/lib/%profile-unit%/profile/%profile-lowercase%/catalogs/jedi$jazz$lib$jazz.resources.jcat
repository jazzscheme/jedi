"_resources"
 ({Lisp-File-Entry {File :context "src" "jazz" "resources" "_resources.scm"} 243057373. scheme
    {Lisp-Entry "jazz.resources" unit () () #f #f 37 6 37 20 ("build-resources" "jazz:build-resources" "build:" "jazz.resources" "register-product" "jazz:register-product")
      {Lisp-Entry "build-resources" define () ("descriptor" "#!key" "(unit #f)" "(force? #f)") #f #f 40 9 40 29 ("build-product-descriptor" "jazz:build-product-descriptor" "force?:" "pre-build:" "unit:" "custom-compile/build" "jazz:custom-compile/build" "copy-resource-directories" "create-directory" "file-exists?" "not" "if" "ensure-directory-exists" "feedback" "jazz:feedback" "feedback:" "jazz:copy-files" "dir" "copy-files" "source-file" "string-append" "path" "build-file" "define" "kernel-source" "jazz:kernel-source" "source" "Build-Repository" "jazz:Build-Repository" "%%repository-directory" "build" "let" "force?" "unit" "#!key" "descriptor")}}})
